include:
  - project: 'iopsys/gitlab-ci-pipeline'
    file: '/static-code-analysis.yml'

include:
  - project: 'docs/portal2/pipeline-template'
    file: 'MkDocs.gitlab-ci.yml'

variables:
  DEBUG: 'TRUE'
  SOURCE_FOLDER: "."
  COMMON_IMAGE: iopsys/code-analysis:0.27
  RUN_CPPCHECK: "cppcheck --enable=information --error-exitcode=1 -DBBFDM_ENABLE_DOTSO_PLUGIN -DBBFDM_ENABLE_DOTSO_PLUGIN -DBBF_TR181 -DBBF_VENDOR_IOPSYS -DBBF_VENDOR_OPENWRT --inline-suppr -i test/"

stages:
    - static_code_analysis
    - unit_test
    - memory_test
    - functional_test
    - uspd
    - deploy

run_unit_test:
  stage: unit_test
  image: iopsys/code-analysis:latest
  allow_failure: false
  script:
  - "./gitlab-ci/setup.sh"
  - "./gitlab-ci/unit-test.sh"
  artifacts:
    when: always
    paths:
      - timestamp.log
      - unit-test-coverage.xml

run_functional_test:
  stage: functional_test
  image: iopsys/code-analysis:latest
  allow_failure: false
  script:
  - "./gitlab-ci/setup.sh"
  - "./gitlab-ci/functional-test.sh"

  artifacts:
      when: always
      paths:
          - timestamp.log
          - functional-test-coverage.xml

run_functional_api_test:
  stage: functional_test
  image: iopsys/code-analysis:latest
  allow_failure: false
  script:
  - "./gitlab-ci/setup.sh"
  - "./gitlab-ci/functional-api-test.sh"

  artifacts:
      when: always
      paths:
          - timestamp.log
          - functional-api-test-coverage.xml

run_tools_test:
  stage: unit_test
  image: iopsys/code-analysis:latest
  allow_failure: false
  script:
  - "./gitlab-ci/tools-test.sh"

  artifacts:
      when: always
      paths:
          - timestamp.log
          - tools/out/datamodel_default.xml
          - tools/out/datamodel_hdm.xml
          - tools/out/datamodel.xls

run_memory_test:
  stage: memory_test
  image: iopsys/code-analysis:latest
  allow_failure: false
  script:
  - "./gitlab-ci/setup.sh"
  - "./gitlab-ci/memory-test.sh"
  - echo "BBF_TAR_URL=${CI_JOB_URL}/artifacts/raw/build/libbbf-1.0.0-Linux.sh" >build.env
  artifacts:
      reports:
        dotenv: build.env
      when: always
      paths:
          - timestamp.log
          - output-report-device-get.txt
          - build/libbbf-1.0.0-Linux.sh

doxygen:
  stage: unit_test
  image: iopsys/code-analysis:latest
  before_script:
      - apt update
      - apt --assume-yes install doxygen graphviz

  script:
    - doxygen Doxyfile
    - mv doxygen/html/ public/

  artifacts:
    paths:
      - public

  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

run_uspd:
  stage: uspd
  inherit:
    variables: false
  variables:
    UPSTREAM_BBF_SHA: $CI_COMMIT_SHA
    BBF_TAR_URL: $BBF_TAR_URL
  allow_failure: false
  trigger:
    project: iopsys/uspd
    branch: ticket_8966
    strategy: depend
  needs:
    job: run_memory_test
    artifacts: true

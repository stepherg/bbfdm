#!/bin/sh
# Copyright (C) 2019 iopsys Software Solutions AB
# Author: MOHAMED Kallel <mohamed.kallel@pivasoftware.com>
# Author: AMIN Ben Ramdhane <amin.benramdhane@pivasoftware.com>

UCI_GET_BBFDM="/sbin/uci -q -c /etc/bbfdm get"
UCI_SET_BBFDM="/sbin/uci -q -c /etc/bbfdm set"
UCI_COMMIT_BBFDM="/sbin/uci -q -c /etc/bbfdm commit"

ipping_get() {
	local val=`$UCI_GET_BBFDM $1`
	echo ${val:-$2}
}

ipping_error()
{
	local cnt=`ipping_get dmmap_diagnostics.ipping.NumberOfRepetitions 3`
	$UCI_SET_BBFDM dmmap_diagnostics.ipping.SuccessCount=0
	$UCI_SET_BBFDM dmmap_diagnostics.ipping.FailureCount=$cnt
	$UCI_SET_BBFDM dmmap_diagnostics.ipping.AverageResponseTime=0
	$UCI_SET_BBFDM dmmap_diagnostics.ipping.MinimumResponseTime=9999
	$UCI_SET_BBFDM dmmap_diagnostics.ipping.MaximumResponseTime=0
	$UCI_SET_BBFDM dmmap_diagnostics.ipping.AverageResponseTimeDetailed=0
	$UCI_SET_BBFDM dmmap_diagnostics.ipping.MinimumResponseTimeDetailed=999999999
	$UCI_SET_BBFDM dmmap_diagnostics.ipping.MaximumResponseTimeDetailed=0
	$UCI_COMMIT_BBFDM
}

ipping_launch() {
	local i proto device res ba stc times sc1 success_count failure_count min_time avg_time max_time avg_time_sum min max micros avg_time_det min_time_det max_time_det avg_time_sum_det min_det max_det
	local host=`ipping_get dmmap_diagnostics.ipping.Host`
	local cnt=`ipping_get dmmap_diagnostics.ipping.NumberOfRepetitions 3`
	local dsize=`ipping_get dmmap_diagnostics.ipping.DataBlockSize 64`
	local timeout=`ipping_get dmmap_diagnostics.ipping.Timeout 1000`
	local interface=`ipping_get dmmap_diagnostics.ipping.interface`
	local protocol=`ipping_get dmmap_diagnostics.ipping.ProtocolVersion Any`
	[ ! -z "$interface" ] && device=`ifstatus $interface | jsonfilter -e @.device` && device="-I $device" || device=""
	if [ "$protocol" == "IPv4" ]; then proto="-4"; elif [ "$protocol" == "IPv6" ]; then proto="-6"; else proto=""; fi
	[ "$host" = "" ] && return
	timeout=$((timeout/1000))
	[ "$timeout" = "0" ] && timeout="1"
	micros=1000
	success_count=0
	avg_time_sum=0
	avg_time_sum_det=0
	min=9999999
	min_det=999999999
	max=0
	max_det=0
	i=0

	while [ $i -lt $cnt ]; do
		let i++
		res=$(ping -q $proto -c 1 -s $dsize -W $timeout $device $host 2>&1)
		ba=`echo "$res" | grep "bad address"`
		[ -n "$ba" ] && { $UCI_SET_BBFDM dmmap_diagnostics.ipping.DiagnosticState=Error_CannotResolveHostName; ipping_error; return; }
		ba=`echo "$res" | grep "unknown host"`
		[ -n "$ba" ] && { $UCI_SET_BBFDM dmmap_diagnostics.ipping.DiagnosticState=Error_CannotResolveHostName; ipping_error; return; }
		stc=`echo "$res" | grep "received"`
		[ -z "$stc" ] && { $UCI_SET_BBFDM dmmap_diagnostics.ipping.DiagnosticState=Error_Other; ipping_error; return; }
		times=`echo "$res" | grep "min/avg/max"`
		[ -z "$times" ] && continue
		sc1=`echo $stc | awk '{print $4}'`
		sc1=${sc1:-0}
		success_count=$((success_count+sc1))
		times=`echo $times | awk -F'=' '{ print $2 }'`
		min_time=`echo $times | awk -F'[=/ ]' '{ print $1 }'`	
		avg_time=`echo $times | awk -F'[=/ ]' '{ print $2 }'`
		max_time=`echo $times | awk -F'[=/ ]' '{ print $3 }'`
		min_time=${min_time:-0}
		avg_time=${avg_time:-0}
		max_time=${max_time:-0}
		min_time_det=$(echo $min_time $micros | awk '{printf "%3.0f\n",$1*$2}')
		avg_time_det=$(echo $avg_time $micros | awk '{printf "%3.0f\n",$1*$2}')
		max_time_det=$(echo $max_time $micros | awk '{printf "%3.0f\n",$1*$2}')
		min_time=$(awk "BEGIN{print $min_time * 1000}")
		avg_time=$(awk "BEGIN{print $avg_time * 1000}")
		max_time=$(awk "BEGIN{print $max_time * 1000}")
		[ $min_time -lt $min ] && min=$min_time
		[ $max_time -gt $max ] && max=$max_time
		avg_time_sum=$((avg_time_sum+avg_time))
		[ $min_time_det -lt $min_det ] && min_det=$min_time_det
		[ $max_time_det -gt $max_det ] && max_det=$max_time_det
		avg_time_sum_det=$((avg_time_sum_det+avg_time_det))
	done
	failure_count=$((cnt-success_count))
	[ $success_count -gt 0 ] && avg_time=$((avg_time_sum/success_count)) || avg_time=0
	[ $success_count -gt 0 ] && avg_time_det=$((avg_time_sum_det/success_count)) || avg_time_det=0
	avg_time=$(awk "BEGIN{print int($avg_time / 1000)}")
	min_time=$(awk "BEGIN{print int($min / 1000)}")
	max_time=$(awk "BEGIN{print int($max / 1000)}")
	min_time_det=$min_det
	max_time_det=$max_det
	$UCI_SET_BBFDM dmmap_diagnostics.ipping.DiagnosticState=Complete
	$UCI_SET_BBFDM dmmap_diagnostics.ipping.SuccessCount=$success_count
	$UCI_SET_BBFDM dmmap_diagnostics.ipping.FailureCount=$failure_count
	$UCI_SET_BBFDM dmmap_diagnostics.ipping.AverageResponseTime=$avg_time
	$UCI_SET_BBFDM dmmap_diagnostics.ipping.MinimumResponseTime=$min_time
	$UCI_SET_BBFDM dmmap_diagnostics.ipping.MaximumResponseTime=$max_time
	$UCI_SET_BBFDM dmmap_diagnostics.ipping.AverageResponseTimeDetailed=$avg_time_det
	$UCI_SET_BBFDM dmmap_diagnostics.ipping.MinimumResponseTimeDetailed=$min_time_det
	$UCI_SET_BBFDM dmmap_diagnostics.ipping.MaximumResponseTimeDetailed=$max_time_det
	$UCI_COMMIT_BBFDM
	[ "$1" == "cwmp" ] && event_dignostic
}

event_dignostic() {
	local e=1
	local i=0
	while [ "$e" != 0 -a $i -lt 200 ]; do
		ubus -t 1 call tr069 inform '{"event":"8 DIAGNOSTICS COMPLETE"}' &>/dev/null
		e=$?
		[ "$e" != "0" ] && sleep 1;
		let i++
	done
}

ipping_stop_diagnostic() {
	local pids=`ps | grep ipping_launch | grep -v grep | awk '{print $1}'`
	if [ -n "$pids" ]; then
		kill -9 $pids &>/dev/null
		$UCI_SET_BBFDM dmmap_diagnostics.ipping.DiagnosticState=None
		$UCI_COMMIT_BBFDM
	fi
}

if [ "$1" == "run" ]; then
	ipping_launch $2
elif [ "$1" == "stop" ]; then
	ipping_stop_diagnostic
else
	return
fi

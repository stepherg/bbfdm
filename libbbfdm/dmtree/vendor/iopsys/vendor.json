{
	"Device.": {
		"type": "object",
		"protocols": [
			"cwmp",
			"usp"
		],
		"description": "The top-level object for a Device.",
		"access": false,
		"array": false,
		"Device.Services.": {
			"type": "object",
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "This object contains general services information.",
			"access": false,
			"array": false,
			"Device.Services.VoiceService.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "The top-level object for VoIP CPE. At most one entry in this table can exist with a given value for Alias.",
				"access": true,
				"array": true,
				"Device.Services.VoiceService.{i}.CallLog.{i}.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Contains a list of calls log.An entry is created each time a call is terminated.",
					"access": false,
					"array": true,
					"{BBF_VENDOR_PREFIX}SIPIPAddress": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "URI that addresses a specific extension on a voice over IP system.",
						"datatype": "string"
					},
					"{BBF_VENDOR_PREFIX}SIPResponseCode": {
						"type": "unsignedInt",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "SIP response code is three-digit integer code which gives status of the request.",
						"datatype": "unsignedInt"
					},
					"Device.Services.VoiceService.{i}.CallLog.{i}.Session.{i}.": {
						"type": "object",
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Session information within one call. At most one entry in this table can exist with a given value for <<param|SessionID>>.",
						"access": false,
						"array": true,
						"Device.Services.VoiceService.{i}.CallLog.{i}.Session.{i}.Destination.": {
							"type": "object",
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "The destination part of session information within one call.",
							"access": false,
							"array": false,
							"Device.Services.VoiceService.{i}.CallLog.{i}.Session.{i}.Destination.RTP.": {
								"type": "object",
								"protocols": [
									"cwmp",
									"usp"
								],
								"access": false,
								"array": false,
								"description": "The RTP part of the destination session information.",
								"{BBF_VENDOR_PREFIX}BurstDensity": {
									"type": "unsignedInt",
									"read": true,
									"write": false,
									"protocols": [
										"cwmp",
										"usp"
									],
									"description": "The fraction of RTP data packets within burst periods since the beginning of reception that were either lost or discarded.",
									"datatype": "unsignedInt"
								},
								"{BBF_VENDOR_PREFIX}BurstDuration": {
									"type": "unsignedInt",
									"read": true,
									"write": false,
									"protocols": [
										"cwmp",
										"usp"
									],
									"description": "The mean duration, expressed in milliseconds, of the burst periods that have occurred since the beginning of reception.",
									"datatype": "unsignedInt"
								},
								"{BBF_VENDOR_PREFIX}GapDensity": {
									"type": "unsignedInt",
									"read": true,
									"write": false,
									"protocols": [
										"cwmp",
										"usp"
									],
									"description": "The fraction of RTP data packets within inter-burst gaps since the beginning of reception that were either lost or discarded.",
									"datatype": "unsignedInt"
								},
								"{BBF_VENDOR_PREFIX}GapDuration": {
									"type": "unsignedInt",
									"read": true,
									"write": false,
									"protocols": [
										"cwmp",
										"usp"
									],
									"description": "The mean duration, expressed in milliseconds, of the gap periods that have occurred since the beginning of reception.",
									"datatype": "unsignedInt"
								},
								"{BBF_VENDOR_PREFIX}JBAvgDelay": {
									"type": "unsignedInt",
									"read": true,
									"write": false,
									"protocols": [
										"cwmp",
										"usp"
									],
									"description": "Average jitter buffer delay in milliseconds which corresponds to the earliest arriving packet that would not be discarded.",
									"datatype": "unsignedInt"
								},
								"{BBF_VENDOR_PREFIX}JBMaxDelay": {
									"type": "unsignedInt",
									"read": true,
									"write": false,
									"protocols": [
										"cwmp",
										"usp"
									],
									"description": "Maximum jitter buffer delay in milliseconds which corresponds to the earliest arriving packet that would not be discarded.",
									"datatype": "unsignedInt"
								},
								"{BBF_VENDOR_PREFIX}JBNomDelay": {
									"type": "unsignedInt",
									"read": true,
									"write": false,
									"protocols": [
										"cwmp",
										"usp"
									],
									"description": "Nominal jitter buffer delay in milliseconds, which corresponds to the nominal jitter buffer delay for packets that arrive exactly on time.",
									"datatype": "unsignedInt"
								},
								"{BBF_VENDOR_PREFIX}PeakJitter": {
									"type": "unsignedInt",
									"read": true,
									"write": false,
									"protocols": [
										"cwmp",
										"usp"
									],
									"description": "Peak jitter / holding time (in milliseconds).",
									"datatype": "unsignedInt"
								}
							}
						},
						"Device.Services.VoiceService.{i}.CallLog.{i}.Session.{i}.Source.": {
							"type": "object",
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "The source of the session information within one call.",
							"access": false,
							"array": false,
							"Device.Services.VoiceService.{i}.CallLog.{i}.Session.{i}.Source.RTP.": {
								"type": "object",
								"protocols": [
									"cwmp",
									"usp"
								],
								"description": "The RTP part of the source session information.",
								"access": false,
								"array": false,
								"{BBF_VENDOR_PREFIX}BurstDensity": {
									"type": "unsignedInt",
									"read": true,
									"write": false,
									"protocols": [
										"cwmp",
										"usp"
									],
									"description": "The fraction of RTP data packets within burst periods since the beginning of reception that were either lost or discarded.",
									"datatype": "unsignedInt"
								},
								"{BBF_VENDOR_PREFIX}BurstDuration": {
									"type": "unsignedInt",
									"read": true,
									"write": false,
									"protocols": [
										"cwmp",
										"usp"
									],
									"description": "The mean duration, expressed in milliseconds, of the burst periods that have occurred since the beginning of reception.",
									"datatype": "unsignedInt"
								},
								"{BBF_VENDOR_PREFIX}GapDensity": {
									"type": "unsignedInt",
									"read": true,
									"write": false,
									"protocols": [
										"cwmp",
										"usp"
									],
									"description": "The fraction of RTP data packets within inter-burst gaps since the beginning of reception that were either lost or discarded.",
									"datatype": "unsignedInt"
								},
								"{BBF_VENDOR_PREFIX}GapDuration": {
									"type": "unsignedInt",
									"read": true,
									"write": false,
									"protocols": [
										"cwmp",
										"usp"
									],
									"description": "The mean duration, expressed in milliseconds, of the gap periods that have occurred since the beginning of reception.",
									"datatype": "unsignedInt"
								},
								"{BBF_VENDOR_PREFIX}JBAvgDelay": {
									"type": "unsignedInt",
									"read": true,
									"write": false,
									"protocols": [
										"cwmp",
										"usp"
									],
									"description": "Average jitter buffer delay in milliseconds which corresponds to the earliest arriving packet that would not be discarded.",
									"datatype": "unsignedInt"
								},
								"{BBF_VENDOR_PREFIX}JBMaxDelay": {
									"type": "unsignedInt",
									"read": true,
									"write": false,
									"protocols": [
										"cwmp",
										"usp"
									],
									"description": "Maximum jitter buffer delay in milliseconds which corresponds to the earliest arriving packet that would not be discarded.",
									"datatype": "unsignedInt"
								},
								"{BBF_VENDOR_PREFIX}JBNomDelay": {
									"type": "unsignedInt",
									"read": true,
									"write": false,
									"protocols": [
										"cwmp",
										"usp"
									],
									"description": "Nominal jitter buffer delay in milliseconds, which corresponds to the nominal jitter buffer delay for packets that arrive exactly on time.",
									"datatype": "unsignedInt"
								},
								"{BBF_VENDOR_PREFIX}PeakJitter": {
									"type": "unsignedInt",
									"read": true,
									"write": false,
									"protocols": [
										"cwmp",
										"usp"
									],
									"description": "Peak jitter / holding time (in milliseconds).",
									"datatype": "unsignedInt"
								}
							}
						}
					}
				},
				"Device.Services.VoiceService.{i}.CallControl.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Call control and call routing parameters. This object is a control plane application for the VoiceService that provides numbers or names based routing, local PBX functionalities and advanced telephony features. It is mutually exclusive with the <<object|.Interwork>> table which is used in case of switching capabilities.",
					"access": false,
					"array": false,
					"Device.Services.VoiceService.{i}.CallControl.Extension.{i}.": {
						"type": "object",
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Extension table containing the local numbers and names.",
						"access": true,
						"array": true,
						"{BBF_VENDOR_PREFIX}ComfortNoise": {
							"type": "boolean",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Comfort Noise is enabled/disabled.",
							"datatype": "boolean"
						},
						"{BBF_VENDOR_PREFIX}TXGain": {
							"type": "string",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Control the audio transmitted to the extension.The numbers represent db (decibels).",
							"datatype": "string",
							"range": [
								{
									"max": 32
								}
							]
						},
						"{BBF_VENDOR_PREFIX}RXGain": {
							"type": "string",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Control the audio received at the extension .The numbers represent db (decibels).",
							"datatype": "string",
							"range": [
								{
									"max": 32
								}
							]
						},
						"{BBF_VENDOR_PREFIX}EchoCancel": {
							"type": "boolean",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Enable or disable echo cancellation for this extension.",
							"datatype": "boolean"
						},
						"{BBF_VENDOR_PREFIX}Type": {
							"type": "string",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Specfies the type of the extension fxs/dect.",
							"datatype": "string",
							"range": [
								{
									"max": 32
								}
							]
						}
					}
				},
				"Device.Services.VoiceService.{i}.DECT.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "DECT portable table.",
					"access": false,
					"array": false,
					"Device.Services.VoiceService.{i}.DECT.Portable.{i}.": {
						"type": "object",
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "DECT portable table.",
						"access": true,
						"array": true,
						"{BBF_VENDOR_PREFIX}Name": {
							"type": "string",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Indicates the name of this DECT portable.",
							"datatype": "string"
						}
					}
				}
			}
		},
		"Device.Bridging.": {
			"type": "object",
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "Layer 2 bridging configuration. Specifies bridges between different layer 2 interfaces. Bridges can be defined to include layer 2 filter criteria to selectively bridge traffic between interfaces. This object can be used to configure both 802.1D <<bibref|802.1D-2004>> and 802.1Q <<bibref|802.1Q-2011>> bridges. Not all 802.1D and 802.1Q features are modeled, and some additional features not present in either 802.1D or 802.1Q are modeled. 802.1Q <<bibref|802.1Q-2011>> bridges incorporate 802.1Q <<bibref|802.1Q-2005>> customer and 802.1ad <<bibref|802.1ad-2005>> provider bridges.",
			"access": false,
			"array": false,
			"Device.Bridging.Bridge.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Bridge table.",
				"access": true,
				"array": true,
				"Device.Bridging.Bridge.{i}.Port.{i}.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Bridge Port table, which MUST contain an entry for each bridge port (a stackable interface object as described in <<bibref|TR-181i2|Section 4.2>>). There are two types of bridge ports: management (upward facing) and non-management (downward facing). This is determined by configuring the Boolean <<param|ManagementPort>> parameter. The CPE will automatically configure each management bridge port to appear in the interface stack above all non-management bridge ports that share the same <<object|##.Bridge>> instance.",
					"access": true,
					"array": true,
					"{BBF_VENDOR_PREFIX}EgressPriorityRegeneration": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Rewriting priority on egress, to map the pbit value of incoming packet to another value and emit it with that",
						"list": {
							"datatype": "unsignedInt",
							"item": {
								"min": 8,
								"max": 8
							},
							"range": [
								{
									"min": 0,
									"max": 7
								}
							]
						}
					}
				}
			}
		},
		"Device.DeviceInfo.": {
			"type": "object",
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "This object contains general device information.",
			"access": false,
			"array": false,
			"{BBF_VENDOR_PREFIX}BaseMACAddress": {
				"type": "string",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "The MAC Address of the device.",
				"datatype": "MACAddress",
				"range": [
					{
						"max": 17
					}
				],
				"pattern": [
					"",
					"([0-9A-Fa-f][0-9A-Fa-f]:){5}([0-9A-Fa-f][0-9A-Fa-f])"
				]
			}
		},
		"Device.Ethernet.": {
			"type": "object",
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "Ethernet object. This object models several Ethernet interface objects, each representing a different stack layer, including: <<object|Interface>>, <<object|Link>>, and <<object|VLANTermination>>. <<object|Interface>> is media-specific and models a port, the PHY layer, and the Channel Access Method (CAM) part of the MAC layer. <<object|Link>> is media-independent and models the Logical Link Control (LLC) layer. An outer <<object|VLANTermination>>, when present, is expected to be stacked on top of <<object|Link>> objects to receive and send frames with a configured VLANID.",
			"access": false,
			"array": false,
			"Device.Ethernet.{BBF_VENDOR_PREFIX}MACVLAN.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "A MACVLAN entry is typically stacked on top of a <<object|#.Link>> object or <<object|#.VLANTermination>> to receive and send frames with the configured <<param|MACAddress>>.",
				"access": true,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enables or disables the MACVLAN entry",
					"default": "false",
					"datatype": "boolean"
				},
				"Status": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The current operational state of the MACVLAN entry. Enumeration of: Up, Down, Unknown, Dormant, NotPresent, LowerLayerDown, Error. When <<param|Enable>> is <<false>> then <<param>> SHOULD normally be <<enum|Down>> (or <<enum|NotPresent>> or <<enum|Error>> if there is a fault condition on the interface). When <<param|Enable>> is changed to <<true>> then <<param>> SHOULD change to <<enum|Up>> if and only if the interface is able to transmit and receive network traffic; it SHOULD change to <<enum|Dormant>> if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to <<enum|Up>> if still operable when the expected actions have completed); it SHOULD change to <<enum|LowerLayerDown>> if and only if the interface is prevented from entering the <<enum|Up>> state because one or more of the interfaces beneath it is down; it SHOULD remain in the <<enum|Error>> state if there is an error or other fault condition detected on the interface; it SHOULD remain in the <<enum|NotPresent>> state if the interface has missing (typically hardware) components; it SHOULD change to <<enum|Unknown>> if the state of the interface can not be determined for some reason. This parameter is based on ifOperStatus from <<bibref|RFC2863>>.",
					"default": "Down",
					"datatype": "string",
					"enumerations": [
						"Up",
						"Down",
						"Unknown",
						"Dormant",
						"NotPresent",
						"LowerLayerDown",
						"Error"
					]
				},
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"Name": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The textual name of the MACVLAN entry as assigned by the CPE.",
					"datatype": "string",
					"range": [
						{
							"max": 64
						}
					]
				},
				"LowerLayers": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<list>> <<reference|an interface object that is stacked immediately below this interface object>> See <<bibref|TR-181i2|Section 4.2.1>>.",
					"list": {
						"datatype": "string",
						"maxsize": 1024
					}
				},
				"MACAddress": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The MAC address used for packets sent via this interface. Provides the source MAC address for outgoing traffic and the destination MAC address for incoming traffic.",
					"datatype": "MACAddress",
					"range": [
						{
							"max": 17
						}
					],
					"pattern": [
						"",
						"([0-9A-Fa-f][0-9A-Fa-f]:){5}([0-9A-Fa-f][0-9A-Fa-f])"
					]
				},
				"Device.Ethernet.{BBF_VENDOR_PREFIX}MACVLAN.{i}.Stats.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Throughput statistics for this MACVLAN entry. The CPE MUST reset the links Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the link becomes operationally down due to a previous administrative down (i.e. the links <<param|#.Status>> parameter transitions to a down state after the link is disabled) or when the link becomes administratively up (i.e. the links <<param|#.Enable>> parameter transitions from <<false>> to <<true>>). Administrative and operational link status is discussed in <<bibref|TR-181i2|section 4.2.2>>.",
					"access": false,
					"array": false,
					"BytesSent": {
						"type": "unsignedLong",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The total number of bytes transmitted out of the MACVLAN entry, including framing characters.",
						"datatype": "unsignedLong"
					},
					"BytesReceived": {
						"type": "unsignedLong",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The total number of bytes received on the MACVLAN entry, including framing characters.",
						"datatype": "unsignedLong"
					},
					"PacketsSent": {
						"type": "unsignedLong",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The total number of Ethernet frames transmitted out of the MACVLAN entry.",
						"datatype": "unsignedLong"
					},
					"PacketsReceived": {
						"type": "unsignedLong",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The total number of Ethernet frames received on the MACVLAN entry.",
						"datatype": "unsignedLong"
					},
					"ErrorsSent": {
						"type": "unsignedInt",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The total number of outbound Ethernet frames that could not be transmitted because of errors.",
						"datatype": "unsignedInt"
					},
					"ErrorsReceived": {
						"type": "unsignedInt",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The total number of inbound Ethernet frames that contained errors preventing them from being delivered to a higher-layer protocol.",
						"datatype": "unsignedInt"
					},
					"DiscardPacketsSent": {
						"type": "unsignedInt",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The total number of outbound Ethernet frames which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.",
						"datatype": "unsignedInt"
					},
					"DiscardPacketsReceived": {
						"type": "unsignedInt",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The total number of inbound Ethernet frames which were chosen to be discarded even though no errors had been detected to prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.",
						"datatype": "unsignedInt"
					},
					"MulticastPacketsReceived": {
						"type": "unsignedLong",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The total number of received Ethernet frames, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.",
						"datatype": "unsignedLong"
					}
				}
			}
		},
		"Device.Time.": {
			"type": "object",
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "This object contains parameters relating an NTP or SNTP time client in the CPE.",
			"access": false,
			"array": false,
			"{BBF_VENDOR_PREFIX}LocalTimeZoneName": {
				"type": "string",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "The local zone name definition.",
				"datatype": "string"
			},
			"{BBF_VENDOR_PREFIX}SourceInterface": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Identifier of the IP interface in the device. This parameter can be an entry in the table <<object|Device.IP.Interface.<i>.>>.",
				"datatype": "string"
			}
		},
		"Device.{BBF_VENDOR_PREFIX}IGMP.": {
			"type": "object",
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "Object contains parameters related to IGMP settings for IPTV service",
			"access": false,
			"array": false,
			"SnoopingNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"ProxyNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"Device.{BBF_VENDOR_PREFIX}IGMP.Snooping.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Object contains parameters for configuring IGMP snooping",
				"access": true,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates whether or not the IGMP snooping is enabled.",
					"datatype": "boolean"
				},
				"Version": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the version of IGMP.",
					"datatype": "string",
					"enumerations": [
						"V2",
						"V3"
					]
				},
				"Robustness": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Number of times for retransmitting IGMP queries in case of packet loss. A higher robustness variable makes the IGMP querier more robust.",
					"datatype": "unsignedInt",
					"range": [
						{
							"max": 65535
						}
					]
				},
				"Aggregation": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "This enables the device to forward only the first IGMP report for a multicast group to its directly connected Layer 3 device",
					"datatype": "boolean"
				},
				"Interface": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Path of object on which to snoop, usually a bridge",
					"datatype": "string"
				},
				"Mode": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Multicast snooping mode, when defined as standard, unknown stream flooded on all ports of the bridge, when defined as blocking unknown streams dropped it, when defined as disabled it disabled the multicast traffic.",
					"datatype": "string",
					"enumerations": [
						"Standard",
						"Blocking",
						"Disabled"
					]
				},
				"LastMemberQueryInterval": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "In IGMPv2, it sets the interval at which a querier sends group-specific queries after receiving a leave message. In IGMPv3, it sets the interval at which a querier sends group-and-source-specific queries after receiving a report that changes multicast source and group mappings.",
					"datatype": "unsignedInt",
					"range": [
						{
							"max": 65535
						}
					]
				},
				"ImmediateLeave": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enables the device to immediately remove a port from the forwarding entry for a multicast group when the port receives a leave message",
					"datatype": "boolean"
				},
				"FilterNumberOfEntries": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<numentries>>",
					"datatype": "unsignedInt"
				},
				"ClientGroupNumberOfEntries": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<numentries>>",
					"datatype": "unsignedInt"
				},
				"Device.{BBF_VENDOR_PREFIX}IGMP.Snooping.{i}.ClientGroup.{i}.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Contain entries of clients associated with a multicast stream",
					"access": false,
					"array": true,
					"GroupAddress": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "IP address of the multicast stream to which clients are listening to",
						"datatype": "string"
					},
					"AssociatedDeviceNumberOfEntries": {
						"type": "unsignedInt",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<numentries>>",
						"datatype": "unsignedInt"
					},
					"Device.{BBF_VENDOR_PREFIX}IGMP.Snooping.{i}.ClientGroup.{i}.AssociatedDevice.{i}.": {
						"type": "object",
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Table contain details of the client devices which has joined this multicast stream, contains its IP address, the CPE interface to which it is connected to and a timeout value which is the time since this device sent the last join",
						"access": false,
						"array": true,
						"Interface": {
							"type": "string",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Identifier of the Ethernet interface in the device. This parameter can be an entry in the table <<object|Device.Ethernet.Interface.<i>.>>.",
							"datatype": "string"
						},
						"Host": {
							"type": "string",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Identifier of the Host associated with the device. This parameter can be an entry in the table <<object|Device.Hosts.Host.<i>.>>.",
							"datatype": "string"
						},
						"Timeout": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Time since last join, if this elapses streaming shall stop",
							"datatype": "unsignedInt"
						}
					}
				},
				"Device.{BBF_VENDOR_PREFIX}IGMP.Snooping.{i}.Filter.{i}.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Filter out the multicast stream with the IP Adddress specified in Filter.{i}.IPAddress",
					"access": true,
					"array": true,
					"Enable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enables this filter instance",
						"datatype": "boolean"
					},
					"IPAddress": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Filter out the multicast stream based on IPAddress",
						"datatype": "IPAddress",
						"range": [
							{
								"max": 45
							}
						]
					}
				}
			},
			"Device.{BBF_VENDOR_PREFIX}IGMP.Proxy.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Multicast table with proxied instances",
				"access": true,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates whether or not the proxy is enabled.",
					"datatype": "boolean"
				},
				"Version": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the version of the IGMP",
					"datatype": "string",
					"enumerations": [
						"V2",
						"V3"
					]
				},
				"Robustness": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Number of times for retransmitting IGMP queries in case of packet loss. A higher robustness variable makes the IGMP querier more robust.",
					"datatype": "unsignedInt",
					"range": [
						{
							"max": 65535
						}
					]
				},
				"Aggregation": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "This feature enables the device to forward only the first IGMP report for a multicast group to its directly connected Layer 3 device",
					"datatype": "boolean"
				},
				"QueryInterval": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The Query Interval is the interval between General Queries sent by the Querier.",
					"datatype": "unsignedInt",
					"range": [
						{
							"max": 65535
						}
					]
				},
				"QueryResponseInterval": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Specify how long the querier routing device waits to receive a response to a host-query message from a host.",
					"datatype": "unsignedInt",
					"range": [
						{
							"max": 65535
						}
					]
				},
				"LastMemberQueryInterval": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "In IGMPv2, it sets the interval at which a querier sends group-specific queries after receiving a leave message. In IGMPv3, it sets the interval at which a querier sends group-and-source-specific queries after receiving a report that changes multicast source and group mappings.",
					"datatype": "unsignedInt",
					"range": [
						{
							"max": 65535
						}
					]
				},
				"ImmediateLeave": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enable the device to leave the multicast group immediately after the last host leaves the multicast group",
					"datatype": "boolean"
				},
				"FilterNumberOfEntries": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<numentries>>",
					"datatype": "unsignedInt"
				},
				"ClientGroupNumberOfEntries": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<numentries>>",
					"datatype": "unsignedInt"
				},
				"InterfaceNumberOfEntries": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<numentries>>",
					"datatype": "unsignedInt"
				},
				"Device.{BBF_VENDOR_PREFIX}IGMP.Proxy.{i}.ClientGroup.{i}.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Contain entries of clients associated with a multicast stream",
					"access": false,
					"array": true,
					"GroupAddress": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "IP address of the multicast stream to which clients are listening to",
						"datatype": "string"
					},
					"AssociatedDeviceNumberOfEntries": {
						"type": "unsignedInt",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<numentries>>",
						"datatype": "unsignedInt"
					},
					"Device.{BBF_VENDOR_PREFIX}IGMP.Proxy.{i}.ClientGroup.{i}.AssociatedDevice.{i}.": {
						"type": "object",
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "#same as Snooping associated device#",
						"access": false,
						"array": true,
						"Interface": {
							"type": "string",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Identifier of the Ethernet interface in the device. This parameter can be an entry in the table <<object|Device.Ethernet.Interface.<i>.>>.",
							"datatype": "string"
						},
						"Host": {
							"type": "string",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Identifier of the Host associated with the device. This parameter can be an entry in the table <<object|Device.Hosts.Host.<i>.>>.",
							"datatype": "string"
						},
						"Timeout": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Time since last join, if this elapses streaming shall stop",
							"datatype": "unsignedInt"
						}
					}
				},
				"Device.{BBF_VENDOR_PREFIX}IGMP.Proxy.{i}.Filter.{i}.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Filter table for multicast proxy",
					"access": true,
					"array": true,
					"Enable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enables this filter instance",
						"datatype": "boolean"
					},
					"IPPrefix": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Filter out the multicast stream based on IPAddress",
						"datatype": "string"
					}
				},
				"Device.{BBF_VENDOR_PREFIX}IGMP.Proxy.{i}.Interface.{i}.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Interfaces associated with proxy",
					"access": true,
					"array": true,
					"Interface": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Identifier of the IP interface in the device. This parameter can be an entry in the table <<object|Device.IP.Interface.<i>.>>.",
						"datatype": "string",
						"range": [
							{
								"max": 256
							}
						]
					},
					"Upstream": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "true if interface is upstream, else downstream. usually the lan facing is downstream and wan facing is upstream",
						"datatype": "boolean"
					},
					"SnoopingMode": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "defines how the unknown multicast are treated on the snooped interface. Standard means forward the unknown stream, blocking means block the unknown stream and disabled mean disable snooping",
						"datatype": "string",
						"enumerations": [
							"Standard",
							"Blocking",
							"Disabled"
						]
					}
				}
			}
		},
		"Device.{BBF_VENDOR_PREFIX}MLD.": {
			"type": "object",
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "Object contains parameters related to MLD settings for IPTV service",
			"access": false,
			"array": false,
			"SnoopingNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"ProxyNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"Device.{BBF_VENDOR_PREFIX}MLD.Snooping.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "#same as snooping object#",
				"access": true,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates whether or not the MLD snooping is enabled.",
					"datatype": "boolean"
				},
				"Version": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the version of MLD",
					"datatype": "string",
					"enumerations": [
						"V1",
						"V2"
					]
				},
				"Robustness": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Number of times for retransmitting MLD queries in case of packet loss. A higher robustness variable makes the MLD querier more robust.",
					"datatype": "unsignedInt",
					"range": [
						{
							"max": 65535
						}
					]
				},
				"Aggregation": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "This enables the device to forward only the first MLD report for a multicast group to its directly connected Layer 3 device",
					"datatype": "boolean"
				},
				"Interface": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Path of object on which to snoop, usually a bridge",
					"datatype": "string"
				},
				"Mode": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Multicast snooping mode, when defined as standard, unknown stream flooded on all ports of the bridge, when defined as blocking unknown streams dropped it, when defined as disabled it disabled the multicast traffic.",
					"datatype": "string",
					"enumerations": [
						"Standard",
						"Blocking",
						"Disabled"
					]
				},
				"LastMemberQueryInterval": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "In MLDv1, it sets the interval at which a querier sends group-specific queries after receiving a leave message. In MLDv2, it sets the interval at which a querier sends group-and-source-specific queries after receiving a report that changes multicast source and group mappings.",
					"datatype": "unsignedInt",
					"range": [
						{
							"max": 65535
						}
					]
				},
				"ImmediateLeave": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enables the device to immediately remove a port from the forwarding entry for a multicast group when the port receives a leave message",
					"datatype": "boolean"
				},
				"FilterNumberOfEntries": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<numentries>>",
					"datatype": "unsignedInt"
				},
				"Device.{BBF_VENDOR_PREFIX}MLD.Snooping.{i}.Filter.{i}.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Filter out the multicast stream with the IP Adddress specified in Filter.{i}.IPAddress",
					"access": true,
					"array": true,
					"Enable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enables this filter instance",
						"datatype": "boolean"
					},
					"IPAddress": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Filter out the multicast stream based on IPAddress",
						"datatype": "IPAddress",
						"range": [
							{
								"max": 45
							}
						]
					}
				}
			},
			"Device.{BBF_VENDOR_PREFIX}MLD.Proxy.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Multicast table with proxied instances",
				"access": true,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates whether or not the proxy is enabled.",
					"datatype": "boolean"
				},
				"Version": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the version of the MLD",
					"datatype": "string",
					"enumeration": [
						"V1",
						"V2"
					]
				},
				"Robustness": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Number of times for retransmitting MLD queries in case of packet loss. A higher robustness variable makes the MLD querier more robust.",
					"datatype": "unsignedInt",
					"range": [
						{
							"max": 65535
						}
					]
				},
				"Aggregation": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "This feature enables the device to forward only the first MLD report for a multicast group to its directly connected Layer 3 device",
					"datatype": "boolean"
				},
				"QueryInterval": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The Query Interval is the interval between General Queries sent by the Querier.",
					"datatype": "unsignedInt",
					"range": [
						{
							"max": 65535
						}
					]
				},
				"QueryResponseInterval": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Specify how long the querier routing device waits to receive a response to a host-query message from a host.",
					"datatype": "unsignedInt",
					"range": [
						{
							"max": 65535
						}
					]
				},
				"LastMemberQueryInterval": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "In MLDv1, it sets the interval at which a querier sends group-specific queries after receiving a leave message. In MLDv2, it sets the interval at which a querier sends group-and-source-specific queries after receiving a report that changes multicast source and group mappings.",
					"datatype": "unsignedInt",
					"range": [
						{
							"max": 65535
						}
					]
				},
				"ImmediateLeave": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enable the device to leave the multicast group immediately after the last host leaves the multicast group",
					"datatype": "boolean"
				},
				"FilterNumberOfEntries": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<numentries>>",
					"datatype": "unsignedInt"
				},
				"InterfaceNumberOfEntries": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<numentries>>",
					"datatype": "unsignedInt"
				},
				"Device.{BBF_VENDOR_PREFIX}MLD.Proxy.{i}.Interface.{i}.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Interfaces associated with proxy",
					"access": true,
					"array": true,
					"Interface": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Identifier of the IP interface in the device. This parameter can be an entry in the table <<object|Device.IP.Interface.<i>.>>.",
						"datatype": "string",
						"range": [
							{
								"max": 256
							}
						]
					},
					"Upstream": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "true if interface is upstream, else downstream. usually the lan facing is downstream and wan facing is upstream",
						"datatype": "boolean"
					},
					"SnoopingMode": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "defines how the unknown multicast are treated on the snooped interface. Standard means forward the unknown stream, blocking means block the unknown stream and disabled mean disable snooping",
						"datatype": "string",
						"enumerations": [
							"Standard",
							"Blocking",
							"Disabled"
						]
					}
				},
				"Device.{BBF_VENDOR_PREFIX}MLD.Proxy.{i}.Filter.{i}.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Filter table for multicast proxy",
					"access": true,
					"array": true,
					"Enable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enables this filter instance",
						"datatype": "boolean"
					},
					"IPAddress": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Filter out the multicast stream based on IPAddress",
						"datatype": "IPAddress",
						"range": [
							{
								"max": 45
							}
						]
					}
				}
			}
		}
	}
}


{
	"Device.Services.VoiceService.{i}.": {
		"type": "object",
		"protocols": [
			"cwmp",
			"usp"
		],
		"description": "The top-level object for CPE with voice capabilities.",
		"uniqueKeys": [
			"Alias"
		],
		"access": false,
		"array": true,
		"Alias": {
			"type": "string",
			"read": true,
			"write": true,
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
			"datatype": "Alias",
			"range": [
				{
					"max": 64
				}
			]
		},
		"VoIPProfileNumberOfEntries": {
			"type": "unsignedInt",
			"read": true,
			"write": false,
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "<<numentries>>",
			"datatype": "unsignedInt"
		},
		"CodecProfileNumberOfEntries": {
			"type": "unsignedInt",
			"read": true,
			"write": false,
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "<<numentries>>",
			"datatype": "unsignedInt"
		},
		"InterworkNumberOfEntries": {
			"type": "unsignedInt",
			"read": true,
			"write": false,
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "<<numentries>>",
			"datatype": "unsignedInt"
		},
		"TrunkNumberOfEntries": {
			"type": "unsignedInt",
			"read": true,
			"write": false,
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "<<numentries>>",
			"datatype": "unsignedInt"
		},
		"CallLogNumberOfEntries": {
			"type": "unsignedInt",
			"read": true,
			"write": false,
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "<<numentries>> The value MUST be less than or equal to <<param|.Capabilities.MaxCallLogCount>>.",
			"datatype": "unsignedInt"
		},
		"TerminalNumberOfEntries": {
			"type": "unsignedInt",
			"read": true,
			"write": false,
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "<<numentries>>",
			"datatype": "unsignedInt"
		},
		"Device.Services.VoiceService.{i}.Capabilities.": {
			"type": "object",
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "The overall capabilities of the VoIP CPE.",
			"access": false,
			"array": false,
			"MaxLineCount": {
				"type": "int",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Maximum total number of <<object|.CallControl.Line>> objects supported. A value of -1 indicates no specific limit on the number of lines.",
				"datatype": "int",
				"range": [
					{
						"min": -1
					}
				]
			},
			"MaxExtensionCount": {
				"type": "int",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Maximum total number of <<object|.CallControl.Extension>> objects supported. A value of -1 indicates no specific limit on the number of extensions.",
				"datatype": "int",
				"range": [
					{
						"min": -1
					}
				]
			},
			"MaxCallLogCount": {
				"type": "int",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Maximum total number of <<object|.CallLog>> objects supported. A value of -1 indicates no specific limit on the number of call logs.",
				"datatype": "int",
				"range": [
					{
						"min": -1
					}
				]
			},
			"MaxSessionsPerLine": {
				"type": "int",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Maximum number of voice sessions supported for any given <<object|.CallControl.Line>> object. A value greater than one indicates support for CPE-provided conference calling. A value of -1 indicates no specific limit on the number of voice sessions per line.",
				"datatype": "int",
				"range": [
					{
						"min": -1
					}
				]
			},
			"MaxSessionsPerExtension": {
				"type": "int",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Maximum number of voice sessions supported for any given <<object|.CallControl.Extension>> object. A value greater than one indicates support for CPE-provided conference calling. A value of -1 indicates no specific limit on the number of voice sessions per extension.",
				"datatype": "int",
				"range": [
					{
						"min": -1
					}
				]
			},
			"MaxSessionCount": {
				"type": "int",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Maximum total number of voice sessions supported across all <<object|.CallControl.Line>> objects. (This might differ from <<param|MaxLineCount>> if each line can support more than one session for CPE-provided conference calling. This value MAY be less than the product of <<param|MaxLineCount>> and <<param|MaxSessionsPerLine>>.) A value of -1 indicates no specific limit on the number of voice sessions.",
				"datatype": "int",
				"range": [
					{
						"min": -1
					}
				]
			},
			"NetworkConnectionModes": {
				"type": "string",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<list>> Each item is a supported network connection mode. <<pattern>> Most entries MAY be appended with a version indicator in the form /X.Y. For example: SIP/2.0 The list MAY include vendor-specific modes, which MUST be in the format defined in <<bibref|TR-106>>. For example: X_EXAMPLE-COM_MyMode",
				"list": {
					"datatype": "string",
					"pattern": [
						"SIP(/\\d+\\.\\d+)?",
						"MGCP(/\\d+\\.\\d+)?",
						"MGCP-NCS(/\\d+\\.\\d+)?",
						"H\\.248(/\\d+\\.\\d+)?",
						"H\\.323(/\\d+\\.\\d+)?",
						"DSS1",
						"FXO",
						"X_.+"
					]
				}
			},
			"UserConnectionModes": {
				"type": "string",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<list>> Each item is a supported user connection mode. <<pattern>> Most entries MAY be appended with a version indicator in the form /X.Y. For example: SIP/2.0 The list MAY include vendor-specific modes, which MUST be in the format defined in <<bibref|TR-106>>. For example: X_EXAMPLE-COM_MyMode",
				"list": {
					"datatype": "string",
					"pattern": [
						"SIP(/\\d+\\.\\d+)?",
						"DSS1",
						"FXS",
						"DECT(/\\d+\\.\\d+)?",
						"Button",
						"Virtual",
						"X_.+"
					]
				}
			},
			"ToneFileFormats": {
				"type": "string",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<list>> Each item is a supported tone file format. The specified file formats are raw codec data files, using one of the codecs listed below. Enumeration of: G.711MuLaw, G.711ALaw, G.729, MP3, WAV, AMR. The list MAY include vendor-specific -specific extensions, which MUST use the format defined in <<bibref|TR-106>>. Example: G.711MuLaw, MP3, X_EXAMPLE-COM_MyFileFormat If the CPE does not support tone files, this parameter MUST be <<empty>>.",
				"list": {
					"datatype": "string",
					"enumerations": [
						"G.711MuLaw",
						"G.711ALaw",
						"G.729",
						"MP3",
						"WAV",
						"AMR"
					]
				}
			},
			"RingFileFormats": {
				"type": "string",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<list>> Each item is a supported ring file format. Enumeration of: MIDI, SMAF, RTTTL, MP3, WAV, AMR. The list MAY include vendor-specific-specific extensions, which MUST use the format defined in <<bibref|TR-106>>. Example: MIDI, AMR, X_EXAMPLE-COM_MyFileFormat If the CPE does not support ring files, this parameter MUST be <<empty>>.",
				"list": {
					"datatype": "string",
					"enumerations": [
						"MIDI",
						"SMAF",
						"RTTTL",
						"MP3",
						"WAV",
						"AMR"
					]
				}
			},
			"FacilityActions": {
				"type": "string",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "The facility actions supported by this VoiceService. Enumeration of: AA_REGISTER, AA_ERASE, AA_INTERROGATE, CA_ACTIVATE, CCBS_ACTIVATE, CCBS_DEACTIVATE, CCBS_INTERROGATE, CCNR_ACTIVATE, CCNR_DEACTIVATE, CCNR_INTERROGATE, CFB_REGISTER, CFB_ACTIVATE, CFB_DEACTIVATE, CFB_ERASE, CFB_INTERROGATE, CFNR_REGISTER, CFNR_ACTIVATE, CFNR_DEACTIVATE, CFNR_ERASE, CFNR_INTERROGATE, CFNR_TIMER, CFT_ACTIVATE, CFT_DEACTIVATE, CFT_INTERROGATE, CFU_REGISTER, CFU_ACTIVATE, CFU_DEACTIVATE, CFU_ERASE, CFU_INTERROGATE, CLIR_ACTIVATE, CLIR_DEACTIVATE, CLIR_INTERROGATE, CP_INVOKE, CW_ACTIVATE, CW_DEACTIVATE, CW_INVOKE, DND_ACTIVATE, DND_DEACTIVATE, DND_INTERROGATE, EXT_INVOKE, LINE_INVOKE, MAILBOX_INVOKE, OCB_ACTIVATE, OCB_DEACTIVATE, OCB_INTERROGATE, PSO_ACTIVATE, PW_SET, SCF_ACTIVATE, SCF_DEACTIVATE, SCF_INTERROGATE, SCREJ_ACTIVATE, SCREJ_DEACTIVATE, SCREJ_INTERROGATE, SR_ACTIVATE, SR_DEACTIVATE, SR_INTERROGATE. The list MAY include vendor-specific Facility Actions, which MUST use the format defined in <<bibref|TR-106>>. Facility Actions are referenced in the VoiceService data model in the objects <<object|.CallControl.NumberingPlan.<i>.PrefixInfo.<i>.>> and <<object|.Terminal.<i>.ButtonMap.Button.<i>.>>.",
				"list": {
					"datatype": "string",
					"enumerations": [
						"AA_REGISTER",
						"AA_ERASE",
						"AA_INTERROGATE",
						"CA_ACTIVATE",
						"CCBS_ACTIVATE",
						"CCBS_DEACTIVATE",
						"CCBS_INTERROGATE",
						"CCNR_ACTIVATE",
						"CCNR_DEACTIVATE",
						"CCNR_INTERROGATE",
						"CFB_REGISTER",
						"CFB_ACTIVATE",
						"CFB_DEACTIVATE",
						"CFB_ERASE",
						"CFB_INTERROGATE",
						"CFNR_REGISTER",
						"CFNR_ACTIVATE",
						"CFNR_DEACTIVATE",
						"CFNR_ERASE",
						"CFNR_INTERROGATE",
						"CFNR_TIMER",
						"CFT_ACTIVATE",
						"CFT_DEACTIVATE",
						"CFT_INTERROGATE",
						"CFU_REGISTER",
						"CFU_ACTIVATE",
						"CFU_DEACTIVATE",
						"CFU_ERASE",
						"CFU_INTERROGATE",
						"CLIR_ACTIVATE",
						"CLIR_DEACTIVATE",
						"CLIR_INTERROGATE",
						"CP_INVOKE",
						"CW_ACTIVATE",
						"CW_DEACTIVATE",
						"CW_INVOKE",
						"DND_ACTIVATE",
						"DND_DEACTIVATE",
						"DND_INTERROGATE",
						"EXT_INVOKE",
						"LINE_INVOKE",
						"MAILBOX_INVOKE",
						"OCB_ACTIVATE",
						"OCB_DEACTIVATE",
						"OCB_INTERROGATE",
						"PSO_ACTIVATE",
						"PW_SET",
						"SCF_ACTIVATE",
						"SCF_DEACTIVATE",
						"SCF_INTERROGATE",
						"SCREJ_ACTIVATE",
						"SCREJ_DEACTIVATE",
						"SCREJ_INTERROGATE",
						"SR_ACTIVATE",
						"SR_DEACTIVATE",
						"SR_INTERROGATE"
					]
				}
			},
			"CodecNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"Device.Services.VoiceService.{i}.Capabilities.SIP.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "SIP-specific capabilities (as defined in <<bibref|RFC3261>>).",
				"access": false,
				"array": false,
				"Device.Services.VoiceService.{i}.Capabilities.SIP.Client.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "SIP client capabilities.",
					"access": false,
					"array": false,
					"Extensions": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<list>> Each item is a supported SIP extension method among the methods listed in the IANA SIP parameters registry (see <<bibref|IANA_SIP_Methods>>). SIP extension methods MUST be in the form of the method name in upper case. The list MAY include vendor-specific extensions, which MUST use the format defined in <<bibref|TR-106>>. Examples: : REFER : INFO : X_EXAMPLE-COM_MyExt",
						"list": {
							"datatype": "string"
						}
					},
					"URISchemes": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<list>> Each item is a supported URI scheme beyond the URI schemes REQUIRED by the SIP specification (<<bibref|RFC3261>>). Each URI scheme is given by the URI prefix, without the colon separator. Example: tel, fax",
						"list": {
							"datatype": "string"
						}
					},
					"EventTypes": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<list>> Each item is a supported event package among the event packages listed in the IANA registry for SIP Event Type Namespace (see <<bibref|IANA_Event_Packages>>). The list MAY include vendor-specific event packages, which MUST use the format defined in <<bibref|TR-106>>. Examples: : call-completion : presence : X_EXAMPLE-COM_MyEvtPkg",
						"list": {
							"datatype": "string"
						}
					},
					"TLSAuthenticationProtocols": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<list>> Each item is a supported authentication protocol for TLS transport. Enumeration of: Null, MD5, SHA-1, SHA-2, AEAD. The list MAY include vendor-specific protocols, which MUST use the format defined in <<bibref|TR-106>>.",
						"list": {
							"datatype": "string",
							"enumerations": [
								"Null",
								"MD5",
								"SHA-1",
								"SHA-2",
								"AEAD"
							]
						}
					},
					"TLSAuthenticationKeySizes": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<list>> Each item represents a supported TLS authentication key size.",
						"list": {
							"datatype": "unsignedInt"
						}
					},
					"TLSEncryptionProtocols": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<list>> Each item is a supported encryption protocol for TLS transport. Enumeration of: Null, RC4, RC2, DES, 3DES, AES, Camellia. The list MAY include vendor-specific protocols, which MUST use the format defined in <<bibref|TR-106>>.",
						"list": {
							"datatype": "string",
							"enumerations": [
								"Null",
								"RC4",
								"RC2",
								"DES",
								"3DES",
								"AES",
								"Camellia"
							]
						}
					},
					"TLSEncryptionKeySizes": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<list>> Each item is a supported TLS encryption key size.",
						"list": {
							"datatype": "unsignedInt"
						}
					},
					"TLSKeyExchangeProtocols": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<list>> Each item is a supported key exchange protocol for TLS transport. Enumeration of: RSA, DSS, DHE-RSA, DHE-DSS, ECDHE-RSA, ECDHE-ECDSA. The list MAY include vendor-specific protocols, which MUST use the format defined in <<bibref|TR-106>>.",
						"list": {
							"datatype": "string",
							"enumerations": [
								"RSA",
								"DSS",
								"DHE-RSA",
								"DHE-DSS",
								"ECDHE-RSA",
								"ECDHE-ECDSA"
							]
						}
					}
				},
				"Device.Services.VoiceService.{i}.Capabilities.SIP.Registrar.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "SIP registrar capabilities.",
					"access": false,
					"array": false,
					"Extensions": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<list>> Each item is a supported SIP extension method among the methods listed in the IANA SIP parameters registry (see <<bibref|IANA_SIP_Methods>>). SIP extension methods MUST be in the form of the method name in upper case. The list MAY include vendor-specific extensions, which MUST use the format defined in <<bibref|TR-106>>. Examples: : REFER : INFO : X_EXAMPLE-COM_MyExt",
						"list": {
							"datatype": "string"
						}
					},
					"URISchemes": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<list>> Each item is a supported URI scheme beyond the URI schemes REQUIRED by the SIP specification. Each URI scheme is given by the URI prefix, without the colon separator. Example: tel, fax",
						"list": {
							"datatype": "string"
						}
					},
					"EventTypes": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<list>> Each item is a supported event package among the event packages listed in the IANA registry for SIP Event Type Namespace (see <<bibref|IANA_Event_Packages>>). The list MAY include vendor-specific event packages, which MUST use the format defined in <<bibref|TR-106>>. Examples: : call-completion : presence : X_EXAMPLE-COM_MyEvtPkg",
						"list": {
							"datatype": "string"
						}
					},
					"TLSAuthenticationProtocols": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<list>> Each item is a supported authentication protocol for TLS transport. Enumeration of: Null, MD5, SHA-1, SHA-2, AEAD. The list MAY include vendor-specific protocols, which MUST use the format defined in <<bibref|TR-106>>.",
						"list": {
							"datatype": "string",
							"enumerations": [
								"Null",
								"MD5",
								"SHA-1",
								"SHA-2",
								"AEAD"
							]
						}
					},
					"TLSAuthenticationKeySizes": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<list>> Each item represents a supported TLS authentication key size.",
						"list": {
							"datatype": "unsignedInt"
						}
					},
					"TLSEncryptionProtocols": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<list>> Each item is a supported encryption protocol for TLS transport. Enumeration of: Null, RC4, RC2, DES, 3DES, AES, Camellia. The list MAY include vendor-specific protocols, which MUST use the format defined in <<bibref|TR-106>>.",
						"list": {
							"datatype": "string",
							"enumerations": [
								"Null",
								"RC4",
								"RC2",
								"DES",
								"3DES",
								"AES",
								"Camellia"
							]
						}
					},
					"TLSEncryptionKeySizes": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<list>> Each item is a supported TLS encryption key size.",
						"list": {
							"datatype": "unsignedInt"
						}
					},
					"TLSKeyExchangeProtocols": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<list>> Each item is a supported key exchange protocol for TLS transport. Enumeration of: RSA, DSS, DHE-RSA, DHE-DSS, ECDHE-RSA, ECDHE-ECDSA. The list MAY include vendor-specific protocols, which MUST use the format defined in <<bibref|TR-106>>.",
						"list": {
							"datatype": "string",
							"enumerations": [
								"RSA",
								"DSS",
								"DHE-RSA",
								"DHE-DSS",
								"ECDHE-RSA",
								"ECDHE-ECDSA"
							]
						}
					}
				}
			},
			"Device.Services.VoiceService.{i}.Capabilities.MGCP.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "MGCP-specific capabilities (as defined in <<bibref|RFC3435>>).",
				"access": false,
				"array": false,
				"Extensions": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<list>> Each item is a supported optional MGCP package. MGCP packages are listed using the uppercase package abbreviation. The list MAY include vendor-specific extensions, which MUST use the format defined in <<bibref|TR-106>>. Examples: : BP : X_EXAMPLE-COM_MyExt",
					"list": {
						"datatype": "string"
					}
				}
			},
			"Device.Services.VoiceService.{i}.Capabilities.H323.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "H.323-specific capabilities (as defined in <<bibref|H.323>>).",
				"access": false,
				"array": false,
				"FastStart": {
					"type": "boolean",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Support for H.323 fast start. If <<true>> indicates support for fast start.",
					"datatype": "boolean"
				},
				"H235AuthenticationMethods": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<list>> Each item is a supported authentication method. Enumeration of: dhExch, pwdSymEnc, pwdHash, certSign, ipsec, tls. The list MAY include vendor-specific protocols, which MUST use the format defined in <<bibref|TR-106a7>>.",
					"list": {
						"datatype": "string",
						"enumerations": [
							"dhExch",
							"pwdSymEnc",
							"pwdHash",
							"certSign",
							"ipsec",
							"tls"
						]
					}
				}
			},
			"Device.Services.VoiceService.{i}.Capabilities.ISDN.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "The overall ISDN capabilities of external ports of the CPE.",
				"access": false,
				"array": false,
				"MSN": {
					"type": "boolean",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The external ISDN ports support <<bibref|I.251.2>> Number identification supplementary services: Multiple Subscriber Number",
					"datatype": "boolean"
				},
				"DDI": {
					"type": "boolean",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The external ISDN ports support <<bibref|I.251.1>> Number identification supplementary services: Direct-dialling-In",
					"datatype": "boolean"
				},
				"MCID": {
					"type": "boolean",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The external ISDN ports support <<bibref|I.251.7>> Number identification supplementary services: Malicious call Identification",
					"datatype": "boolean"
				},
				"MWI": {
					"type": "boolean",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The external ISDN ports support Message Waiting Indication (MWI)",
					"datatype": "boolean"
				},
				"AoC": {
					"type": "boolean",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The external ISDN ports support one or more of the followings AOC-services: <<bibref|I.256.2a>> Charging supplementary services: Advice of charge: charging information at call set-up time (AOC-S) <<bibref|I.256.2b>> Charging supplementary services: Advice of charge: charging information during the call (AOC-D) <<bibref|I.256.2c>> Charging supplementary services: Advice of charge: charging information at the end of the call (AOC-E)",
					"datatype": "boolean"
				},
				"ECT": {
					"type": "boolean",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The external ISDN ports support <<bibref|I.252.7>> Call offering supplementary services: Explicit call transfer (ECT)",
					"datatype": "boolean"
				}
			},
			"Device.Services.VoiceService.{i}.Capabilities.POTS.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "The overall POTS capabilities of external ports of the CPE.",
				"access": false,
				"array": false,
				"DialType": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The supported supported dial type.",
					"datatype": "string",
					"enumerations": [
						"Tone",
						"Pulse",
						"Tone and Pulse"
					]
				},
				"ClipGeneration": {
					"type": "boolean",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The external POTS ports support Calling Line identification (CLIP).",
					"datatype": "boolean"
				},
				"ChargingPulse": {
					"type": "boolean",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The external POTS ports support transmittal of a charging pulse according to TR1 TR 110.",
					"datatype": "boolean"
				}
			},
			"Device.Services.VoiceService.{i}.Capabilities.Codec.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Table to describe the set of supported codecs.",
				"uniqueKeys": [
					"Alias",
					"Codec",
					"BitRate"
				],
				"access": false,
				"array": true,
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"Codec": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Identifier of the type of codec. Enumeration of: AMR, Clearmode, EVRC1, EVRCB1, G.711MuLaw, G.711ALaw, G.726, G.729, G.729.1, G.729a, G.729e, G.728, G.723.1, G.722, G.722.1, G.722.2, Generic Comfort Noise, GSM-FR, GSM-HR, GSM-EFR, iLBC, Speex. The parameter MAY instead be a vendor-specific codec, which MUST be in the format defined in <<bibref|TR-106>>. For example: X_EXAMPLE-COM_MyCodec",
					"datatype": "string",
					"enumerations": [
						"AMR",
						"Clearmode",
						"EVRC1",
						"EVRCB1",
						"G.711MuLaw",
						"G.711ALaw",
						"G.726",
						"G.729",
						"G.729.1",
						"G.729a",
						"G.729e",
						"G.728",
						"G.723.1",
						"G.722",
						"G.722.1",
						"G.722.2",
						"Generic Comfort Noise",
						"GSM-FR",
						"GSM-HR",
						"GSM-EFR",
						"iLBC",
						"Speex"
					]
				},
				"BitRate": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Bit rate, specified in <<units>>. The value MUST be among the values appropriate for the specified codec.",
					"datatype": "unsignedInt",
					"unit": "bits per second"
				},
				"PacketizationPeriod": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<list>> Each item is a supported packetization period, in milliseconds, or a continuous range of packetization periods. Ranges are indicated as a hyphen-separated pair of unsigned integers. Examples: : 20 indicates a single discrete value. : 10, 20, 30 indicates a set of discrete values. : 5-40 indicates a continuous inclusive range. : 5-10, 20, 30 indicates a continuous range in addition to a set of discrete values. A range MUST only be indicated if all values within the range are supported.",
					"list": {
						"datatype": "string",
						"range": [
							{
								"max": 64
							}
						]
					}
				},
				"SilenceSuppression": {
					"type": "boolean",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "If <<true>> indicates support for silence suppression for this codec.",
					"datatype": "boolean"
				}
			},
			"Device.Services.VoiceService.{i}.Capabilities.QualityIndicator.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Specific capabilities concerning quality indicators.",
				"access": false,
				"array": false,
				"QIModelsSupported": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Comma-separated list of supported models for evaluation of VoIP Quality Indicator. <<empty>> indicates that CPE does not support evaluation of this indicator. The entry MAY include vendor-specific models, which MUST be in the format defined in <<bibref|TR-106>>. For example: \u201cP.564,G.107,X_EXAMPLE-COM_MyModel\u201d",
					"datatype": "string"
				},
				"MaxQIValues": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Specifies the maximum number of QI values which can be reported for a session. If this parameter is empty there is no specified maximum limit. If possible this limit SHOULD be large enough to handle at least 10 to 15 minutes of call time, which would typically mean 60 to 90 quality values for commonly used quality models.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 127
						}
					]
				},
				"MaxWorstQIValues": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Maximum number of worst QI values which the CPE is able to store and report. A value of 0 indicates no specific maximum number of worst QI values.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 127
						}
					]
				}
			}
		},
		"Device.Services.VoiceService.{i}.ReservedPorts.": {
			"type": "object",
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "The list of IP ports on the CPE WAN and LAN interfaces that will not be allocated by the ACS and therefore are available to be allocated by the CPE. The CPE can dynamically allocate ports from this range for things like signaling listening ports or local RTP ports.",
			"access": false,
			"array": false,
			"WANPortRange": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Range of ports reserved for use by the CPE on any WAN interface. <<list>> Each range consists of a Start part consisting of 1 to n digits (string representation) followed by an OPTIONAL End part consisting of 1 to n digits prefixed by a - symbol. Example: : 12345-12350,23580",
				"list": {
					"datatype": "string"
				}
			},
			"LANPortRange": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Range of ports reserved for use by the CPE on any LAN interfaces. <<list>> Each range consists of a Start part consisting of 1 to n digits (string representation) followed by an OPTIONAL End part consisting of 1 to n digits prefixed by a - symbol. Example: : 12345-12350,23580",
				"list": {
					"datatype": "string"
				}
			}
		},
		"Device.Services.VoiceService.{i}.ISDN.": {
			"type": "object",
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "This object models ISDN physical interfaces (BRI and PRI) supporting <<bibref|Q.931>> based signalling.",
			"access": false,
			"array": false,
			"BRINumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"PRINumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"Device.Services.VoiceService.{i}.ISDN.BRI.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "ISDN BRI physical interfaces table (a voice physical interface as described in <<bibref|TR-104i2|Section 4.1>>).",
				"uniqueKeys": [
					"Name",
					"Alias"
				],
				"access": false,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enables or disables this ISDN BRI interface.",
					"datatype": "boolean"
				},
				"Status": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the status of this physical interface.",
					"datatype": "string",
					"enumerations": [
						"Up",
						"Error",
						"Testing",
						"Disabled"
					]
				},
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"Name": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The textual name of the interface as assigned by the CPE.",
					"datatype": "string",
					"range": [
						{
							"max": 64
						}
					]
				},
				"ToneEventProfile": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Reference to the <<object|.Tone.EventProfile>> to use with this interface. If this parameter is <<empty>>, the value of <<param|.Tone.DefautEventProfile>> is used instead.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"ApplicationInterface": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Specify the type of application that uses the interface.",
					"datatype": "string",
					"enumerations": [
						"VoIP",
						"VoATM",
						"Data"
					]
				},
				"Protocol": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Specifies the protocol variant used for the interface. Enumeration of: EuroISDN, NI-1, NI-2, 5ESS, NTT, VN3, VN4, Q.SIG. The list MAY include vendor-specific protocols, which MUST use the format defined in <<bibref|TR-106>>.",
					"datatype": "string",
					"enumerations": [
						"EuroISDN",
						"NI-1",
						"NI-2",
						"5ESS",
						"NTT",
						"VN3",
						"VN4",
						"Q.SIG"
					]
				},
				"ProtocolEmulation": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Protocol emulation for the interface.",
					"datatype": "string",
					"enumerations": [
						"TE",
						"NT"
					]
				},
				"PermanentLayer2": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "If <<true>>, avoid the disconnection of the ISDN layer 2 when the ISDN terminal or the ISDN network disconnects the layer 2 (in static TEI mode); it will be maintained established.",
					"datatype": "boolean"
				},
				"PermanentLayer1": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Maintain the ISDN layer 1 up; it is useful for clocking and management.",
					"datatype": "boolean"
				},
				"LapdDisconnectionTimeout": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Avoid the disconnection of the ISDN layer 1 or 2 up when there is no call in progress in dynamic TEI mode.",
					"datatype": "boolean"
				},
				"TEINegotiation": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "TEI management mode. It MUST be set to <<enum|Dynamic>> for ISDN phones or connection to an ISDN network and <<enum|Static>> for PBX.",
					"datatype": "string",
					"enumerations": [
						"Static",
						"Dynamic"
					]
				},
				"StaticTEI": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "TEI value in static mode.",
					"datatype": "unsignedInt",
					"range": [
						{
							"max": 63
						}
					]
				},
				"LifeLineHold": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enable or disable the lifeline bypass on the BRI S0 voice module. If the interface is used by the VoIP gateway, the bypass is enabled if the CPE is not registered on registration server.",
					"datatype": "boolean"
				},
				"PowerSourceOne": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "To enable (disable) the power source one (PS1) on the BRI interfaces.",
					"datatype": "boolean"
				},
				"MaxNumBChannels": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Maximum number of simultaneous B channels.",
					"datatype": "unsignedInt",
					"range": [
						{
							"max": 2
						}
					]
				},
				"OutboundOnlyBChannels": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<list|reserved B-channels which can be used only for outbound calls>>",
					"list": {
						"datatype": "unsignedInt",
						"range": [
							{
								"min": 1,
								"max": 2
							}
						]
					}
				},
				"InboundOnlyBChannels": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<list|reserved B-channels which can be used only for inbound calls>>",
					"list": {
						"datatype": "unsignedInt",
						"range": [
							{
								"min": 1,
								"max": 2
							}
						]
					}
				},
				"BidirectionalBChannels": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<list|reserved B-channels which can be used bidirectional>>",
					"list": {
						"datatype": "unsignedInt",
						"range": [
							{
								"min": 1,
								"max": 2
							}
						]
					}
				}
			},
			"Device.Services.VoiceService.{i}.ISDN.PRI.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "ISDN PRI physical interfaces table (a voice physical interface as described in <<bibref|TR-104i2|Section 4.1>>).",
				"uniqueKeys": [
					"Name",
					"Alias"
				],
				"access": false,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enables or disables this ISDN PRI interface.",
					"datatype": "boolean"
				},
				"Status": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the status of this physical interface.",
					"datatype": "string",
					"enumerations": [
						"Up",
						"Error",
						"Testing",
						"Disabled"
					]
				},
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"Name": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The textual name of the interface as assigned by the CPE.",
					"datatype": "string",
					"range": [
						{
							"max": 64
						}
					]
				},
				"ToneEventProfile": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Reference to the <<object|.Tone.EventProfile>> to use with this interface. If this parameter is <<empty>>, the value of <<param|.Tone.DefautEventProfile>> is used instead.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"ApplicationInterface": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Specify the type of application that uses the interface.",
					"datatype": "string",
					"enumerations": [
						"VoIP",
						"VoATM",
						"Data"
					]
				},
				"Protocol": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Specifies the protocol variant used for the interface. Enumeration of: EuroISDN, NI-1, NI-2, 4ESS, 5ESS, NTT, Q.SIG. The list MAY include vendor-specific protocols, which MUST use the format defined in <<bibref|TR-106>>.",
					"datatype": "string",
					"enumerations": [
						"EuroISDN",
						"NI-1",
						"NI-2",
						"4ESS",
						"5ESS",
						"NTT",
						"Q.SIG"
					]
				},
				"ProtocolEmulation": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Specify the protocol emulation for this interface.",
					"datatype": "string",
					"enumerations": [
						"TE",
						"NT"
					]
				},
				"PermanentLayer2": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "If <<true>>, avoid the disconnection of the ISDN layer 2 when the ISDN terminal or the ISDN network disconnects the layer 2 (in static TEI mode); it will be maintained established.",
					"datatype": "boolean"
				},
				"Linecode": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Specify the physical line coding to be used.",
					"datatype": "string",
					"enumerations": [
						"ami",
						"hdb3",
						"b8zs"
					]
				},
				"ESF": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Specify the framing type.",
					"datatype": "string",
					"enumerations": [
						"None",
						"DF",
						"MF",
						"EMF",
						"SF",
						"ESF",
						"AutoDetect"
					]
				},
				"PhysicalInterfaceType": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enumeration of: T1, E1.",
					"datatype": "string",
					"enumerations": [
						"T1",
						"E1"
					]
				},
				"MaxNumBChannels": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Maximum number of simultaneous B channels.",
					"datatype": "unsignedInt",
					"range": [
						{
							"max": 30
						}
					]
				},
				"OutboundOnlyBChannels": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<list|reserved B-channels which can be used only for outbound calls>>",
					"list": {
						"datatype": "unsignedInt",
						"range": [
							{
								"min": 0,
								"max": 31
							}
						]
					}
				},
				"InboundOnlyBChannels": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<list|reserved B-channels which can be used only for inbound calls>>",
					"list": {
						"datatype": "unsignedInt",
						"range": [
							{
								"min": 0,
								"max": 31
							}
						]
					}
				},
				"BidirectionalBChannels": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<list|reserved B-channels which can be used bidirectional>>",
					"list": {
						"datatype": "unsignedInt",
						"range": [
							{
								"min": 0,
								"max": 31
							}
						]
					}
				},
				"ClockMode": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Determines the role of the CPE for the purpose of clock synchronisation on this interface.",
					"datatype": "string",
					"enumerations": [
						"Master",
						"Slave"
					]
				}
			}
		},
		"Device.Services.VoiceService.{i}.POTS.": {
			"type": "object",
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "This object models analogue lines. Both FXO and FXS are handled.",
			"access": false,
			"array": false,
			"FXONumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"FXSNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"Region": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "The geographic region associated to POTS (MUST be an alpha-2 (two-character alphabetic) country code as specified by <<bibref|ISO3166-1>>). This MAY be used by the CPE to customize localization settings. If <<empty>>, indicates that the region is unspecified and the CPE SHOULD use default localization settings.",
				"datatype": "string",
				"range": [
					{
						"max": 2
					}
				]
			},
			"Device.Services.VoiceService.{i}.POTS.FXO.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "FXO physical interfaces table (a voice physical interface as described in <<bibref|TR-104i2|Section 4.1>>). Each entry in the table models an analogue physical interface as defined by <<bibref|ETSI_ES_203_021>>",
				"uniqueKeys": [
					"Name",
					"Alias"
				],
				"access": false,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enables or disables this FXO interface.",
					"datatype": "boolean"
				},
				"Status": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the status of this physical interface.",
					"datatype": "string",
					"enumerations": [
						"Up",
						"Error",
						"Testing",
						"Disabled"
					]
				},
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"Name": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The textual name of the interface as assigned by the CPE.",
					"datatype": "string",
					"range": [
						{
							"max": 64
						}
					]
				},
				"ToneEventProfile": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Reference to the <<object|.Tone.EventProfile>> to use with this interface. If this parameter is <<empty>>, the value of <<param|.Tone.DefautEventProfile>> is used instead.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"SecondStepDialing": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enables the second step dialing mode. If <<false>>, incoming dialed digits are processed through the voice routing table. If <<true>>, the FXO port goes directly to the off-hook state and works as a FXS port for the dialing reception (a dial-tone is transmitted). The received digits are processed through the routing table until a match is found. If a match is found, the call is routed to the appropriate subscriber.",
					"default": "false",
					"datatype": "boolean"
				},
				"TimeoutBeforeDialing": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Specifies the time in <<units>> between off-hook and the transmission of the first digit for FXO interface.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1,
							"max": 60
						}
					],
					"unit": "seconds"
				},
				"RingingTimeout": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Defines the timeout in <<units>> for incoming call on this FXO port: after receiving a ringing signal, the call is disconnected if no ringing signal is received anymore during this time.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1,
							"max": 30
						}
					],
					"unit": "seconds"
				},
				"RingNumber": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Defines the number of pulses for ringing signal detection on FXO port.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1,
							"max": 40
						}
					]
				},
				"OnHookMinDuration": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Specify the minimum duration in <<units>> of the on-hook state between two successive calls.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 20,
							"max": 10000
						}
					],
					"unit": "milliseconds"
				},
				"SignalingMode": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Signaling mode used for line seizure by the CPE.",
					"default": "LoopStart",
					"datatype": "string",
					"enumerations": [
						"LoopStart",
						"GroundStart"
					]
				},
				"DTMFDialoutInterval": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The time interval in <<units>> between dialing DTMF digits to PSTN. See also <<bibref|ETSI_ES_203_021>>",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 20,
							"max": 10000
						}
					],
					"unit": "milliseconds"
				},
				"CallerIdDetectionEnable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enables the detection of CallerId for incoming calls. See also <<bibref|ETSI_ES_203_021>>.",
					"datatype": "boolean"
				},
				"Active": {
					"type": "boolean",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Determines if this physical interface is plugged.",
					"datatype": "boolean"
				},
				"Device.Services.VoiceService.{i}.POTS.FXO.{i}.DiagTests.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "FXO port tests.",
					"access": false,
					"array": false,
					"DiagnosticsState": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Indicates the availability of diagnostics data. Enumeration of: Enumeration of: None, Requested, Canceled, Complete, Error. If the ACS sets the value of this parameter to <<enum|Requested>>, the CPE MUST initiate the corresponding diagnostic test. When writing, the only allowed values are <<enum|Requested>> and <<enum|Canceled>>. To ensure the use of the proper test parameters (the writable parameters in this object), the test parameters MUST be set, and any errors or inconsistencies in the test parameters MUST be detected, either prior to or at the same time as (in the same SetParameterValues) setting this parameter to <<enum|Requested>>. When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic test. When the test is completed, the value of this parameter MUST be either <<enum|Complete>> (if the test completed successfully), or one of the Error values listed above. If the value of this parameter is anything other than <<enum|Complete>>, the values of the results parameters for this test are indeterminate. When the diagnostic initiated by the ACS is completed (successfully or not), but not if it is canceled for any reason, the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the Event code 8 DIAGNOSTICS COMPLETE in the Inform message. After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object) MUST be retained by the CPE until either this diagnostic is run again, or the CPE reboots. After a reboot, if the CPE has not retained the result parameters from the most recent test, it MUST set the value of this parameter to <<enum|None>>. Modifying any of the writable parameters in this object except for this one MUST result in the value of this parameter being set to <<enum|None>>. While the test is in progress, modifying any of the writable parameters in this object except for this one MUST result in the test being terminated and the value of this parameter being set to <<enum|None>>. While the test is in progress, setting this parameter to <<enum|Requested>> (and possibly modifying other writable parameters in this object) MUST result in the test being terminated and then restarted using the current values of the test parameters. While the test is in progress, setting this parameter to <<enum|Canceled>> MUST result in the test being canceled and the value of this parameter being set to <<enum|None>>. If the CPE does not support the <<enum|Canceled>> value, it MUST return a SPV error with Invalid Parameter value (9007) to the ACS instead. | Indicates the availability of diagnostics data. Enumeration of: Enumeration of: None, Requested, Canceled, Complete, Error. If the ACS sets the value of this parameter to <<enum|Requested>>, the CPE MUST initiate the corresponding diagnostic test. When writing, the only allowed values are <<enum|Requested>> and <<enum|Canceled>>. To ensure the use of the proper test parameters (the writable parameters in this object), the test parameters MUST be set, and any errors or inconsistencies in the test parameters MUST be detected, either prior to or at the same time as (in the same SetParameterValues) setting this parameter to <<enum|Requested>>. When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic test. When the test is completed, the value of this parameter MUST be either <<enum|Complete>> (if the test completed successfully), or one of the Error values listed above. If the value of this parameter is anything other than <<enum|Complete>>, the values of the results parameters for this test are indeterminate. When the diagnostic initiated by the ACS is completed (successfully or not), but not if it is canceled for any reason, the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the Event code 8 DIAGNOSTICS COMPLETE in the Inform message. After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object) MUST be retained by the CPE until either this diagnostic is run again, or the CPE reboots. After a reboot, if the CPE has not retained the result parameters from the most recent test, it MUST set the value of this parameter to <<enum|None>>. Modifying any of the writable parameters in this object except for this one MUST result in the value of this parameter being set to <<enum|None>>. While the test is in progress, modifying any of the writable parameters in this object except for this one MUST result in the test being terminated and the value of this parameter being set to <<enum|None>>. While the test is in progress, setting this parameter to <<enum|Requested>> (and possibly modifying other writable parameters in this object) MUST result in the test being terminated and then restarted using the current values of the test parameters. While the test is in progress, setting this parameter to <<enum|Canceled>> MUST result in the test being canceled and the value of this parameter being set to <<enum|None>>. If the CPE does not support the <<enum|Canceled>> value, it MUST return a SPV error with Invalid Parameter value (9007) to the ACS instead.",
						"datatype": "DiagnosticsState",
						"enumerations": [
							"None",
							"Requested",
							"Canceled",
							"Complete",
							"Error"
						]
					},
					"TestSelector": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Indicates which test to perform. Enumeration of: Battery, DialTone. The parameter MAY instead indicate a vendor-specific test, which MUST use the format defined in <<bibref|TR-106>>. For example: X_EXAMPLE-COM_MyTest",
						"datatype": "string",
						"enumerations": [
							"Battery",
							"DialTone"
						]
					},
					"TestResult": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Result of the selected test. Enumeration of: Success, Failure. The parameter MAY instead indicate a vendor-specific result, which MUST use the format defined in <<bibref|TR-106>>. For example: X_EXAMPLE-COM_MyResult",
						"datatype": "string",
						"enumerations": [
							"Success",
							"Failure"
						]
					}
				}
			},
			"Device.Services.VoiceService.{i}.POTS.FXS.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "FXS physical interfaces table (a voice physical interface as described in <<bibref|TR-104i2|Section 4.1>>). Each entry in the table models an analogue physical interface as defined by <<bibref|ETSI_ES_201_970>>",
				"uniqueKeys": [
					"Name",
					"Alias"
				],
				"access": false,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enables or disables this FXS interface.",
					"datatype": "boolean"
				},
				"Status": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the status of this physical interface.",
					"datatype": "string",
					"enumerations": [
						"Up",
						"Error",
						"Testing",
						"Disabled"
					]
				},
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"Name": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The textual name of the interface as assigned by the CPE.",
					"datatype": "string",
					"range": [
						{
							"max": 64
						}
					]
				},
				"ToneEventProfile": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Reference to the <<object|.Tone.EventProfile>> to use with this interface. If this parameter is <<empty>>, the value of <<param|.Tone.DefautEventProfile>> is used instead.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"FaxPassThrough": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the support for pass-through of fax data of this interface. Enumeration of: Disable, Auto, Force.",
					"datatype": "string",
					"enumerations": [
						"Disable",
						"Auto",
						"Force"
					]
				},
				"ModemPassThrough": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the support for pass-through of modem data of this interface. Enumeration of: Disable, Auto, Force.",
					"datatype": "string",
					"enumerations": [
						"Disable",
						"Auto",
						"Force"
					]
				},
				"DialType": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Dial type used on the line.",
					"datatype": "string",
					"enumerations": [
						"Tone",
						"Pulse"
					]
				},
				"ClipGeneration": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Whether the Calling Line identification (CLIP) is enabled.",
					"datatype": "boolean"
				},
				"ChargingPulse": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Whether a charging pulse is transmitted on the line.",
					"datatype": "boolean"
				},
				"Active": {
					"type": "boolean",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates whether a terminal is plugged on this physical interface.",
					"datatype": "boolean"
				},
				"TerminalType": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Defines the terminal type plugged on this interface to determine the correct signaling to be used to contact the terminal.",
					"datatype": "string",
					"enumerations": [
						"Audio",
						"Fax",
						"Modem",
						"Any"
					]
				},
				"Device.Services.VoiceService.{i}.POTS.FXS.{i}.VoiceProcessing.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Parameters related to voice processing (analogue/digital conversion) capabilities.",
					"access": false,
					"array": false,
					"TransmitGain": {
						"type": "int",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Gain in <<units>> to apply to the transmitted voice signal prior to encoding. This gain is a modifier of the default transmit-gain, which is unspecified.",
						"datatype": "int",
						"unit": "0.1 dB"
					},
					"ReceiveGain": {
						"type": "int",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Gain in <<units>> to apply to the received voice signal after decoding. This gain is a modifier of the default receive-gain, which is unspecified.",
						"datatype": "int",
						"unit": "0.1 dB"
					},
					"EchoCancellationEnable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enable or disable echo cancellation for this line.",
						"datatype": "boolean"
					},
					"EchoCancellationInUse": {
						"type": "boolean",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Indication of whether or not echo cancellation is currently in use for this line.",
						"datatype": "boolean"
					},
					"EchoCancellationTail": {
						"type": "unsignedInt",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Tail length in <<units>> of the echo canceller associated with this line (whether or not it is currently in use).",
						"datatype": "unsignedInt",
						"unit": "milliseconds"
					}
				},
				"Device.Services.VoiceService.{i}.POTS.FXS.{i}.DiagTests.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "FXS port tests.",
					"access": false,
					"array": false,
					"DiagnosticsState": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Indicates the availability of diagnostics data. Enumeration of: Enumeration of: None, Requested, Canceled, Complete, Error. If the ACS sets the value of this parameter to <<enum|Requested>>, the CPE MUST initiate the corresponding diagnostic test. When writing, the only allowed values are <<enum|Requested>> and <<enum|Canceled>>. To ensure the use of the proper test parameters (the writable parameters in this object), the test parameters MUST be set, and any errors or inconsistencies in the test parameters MUST be detected, either prior to or at the same time as (in the same SetParameterValues) setting this parameter to <<enum|Requested>>. When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic test. When the test is completed, the value of this parameter MUST be either <<enum|Complete>> (if the test completed successfully), or one of the Error values listed above. If the value of this parameter is anything other than <<enum|Complete>>, the values of the results parameters for this test are indeterminate. When the diagnostic initiated by the ACS is completed (successfully or not), but not if it is canceled for any reason, the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the Event code 8 DIAGNOSTICS COMPLETE in the Inform message. After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object) MUST be retained by the CPE until either this diagnostic is run again, or the CPE reboots. After a reboot, if the CPE has not retained the result parameters from the most recent test, it MUST set the value of this parameter to <<enum|None>>. Modifying any of the writable parameters in this object except for this one MUST result in the value of this parameter being set to <<enum|None>>. While the test is in progress, modifying any of the writable parameters in this object except for this one MUST result in the test being terminated and the value of this parameter being set to <<enum|None>>. While the test is in progress, setting this parameter to <<enum|Requested>> (and possibly modifying other writable parameters in this object) MUST result in the test being terminated and then restarted using the current values of the test parameters. While the test is in progress, setting this parameter to <<enum|Canceled>> MUST result in the test being canceled and the value of this parameter being set to <<enum|None>>. If the CPE does not support the <<enum|Canceled>> value, it MUST return a SPV error with Invalid Parameter value (9007) to the ACS instead. | Indicates the availability of diagnostics data. Enumeration of: Enumeration of: None, Requested, Canceled, Complete, Error. If the ACS sets the value of this parameter to <<enum|Requested>>, the CPE MUST initiate the corresponding diagnostic test. When writing, the only allowed values are <<enum|Requested>> and <<enum|Canceled>>. To ensure the use of the proper test parameters (the writable parameters in this object), the test parameters MUST be set, and any errors or inconsistencies in the test parameters MUST be detected, either prior to or at the same time as (in the same SetParameterValues) setting this parameter to <<enum|Requested>>. When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic test. When the test is completed, the value of this parameter MUST be either <<enum|Complete>> (if the test completed successfully), or one of the Error values listed above. If the value of this parameter is anything other than <<enum|Complete>>, the values of the results parameters for this test are indeterminate. When the diagnostic initiated by the ACS is completed (successfully or not), but not if it is canceled for any reason, the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the Event code 8 DIAGNOSTICS COMPLETE in the Inform message. After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object) MUST be retained by the CPE until either this diagnostic is run again, or the CPE reboots. After a reboot, if the CPE has not retained the result parameters from the most recent test, it MUST set the value of this parameter to <<enum|None>>. Modifying any of the writable parameters in this object except for this one MUST result in the value of this parameter being set to <<enum|None>>. While the test is in progress, modifying any of the writable parameters in this object except for this one MUST result in the test being terminated and the value of this parameter being set to <<enum|None>>. While the test is in progress, setting this parameter to <<enum|Requested>> (and possibly modifying other writable parameters in this object) MUST result in the test being terminated and then restarted using the current values of the test parameters. While the test is in progress, setting this parameter to <<enum|Canceled>> MUST result in the test being canceled and the value of this parameter being set to <<enum|None>>. If the CPE does not support the <<enum|Canceled>> value, it MUST return a SPV error with Invalid Parameter value (9007) to the ACS instead.",
						"datatype": "DiagnosticsState",
						"enumerations": [
							"None",
							"Requested",
							"Canceled",
							"Complete",
							"Error"
						]
					},
					"TestSelector": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Indicates which GR-909 test to perform.",
						"datatype": "string",
						"enumerations": [
							"Hazard Potential",
							"Foreign Voltage",
							"Resistive Faults",
							"Off-hook",
							"REN"
						]
					},
					"TestResult": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Result of the selected test.",
						"datatype": "string",
						"enumerations": [
							"Success",
							"Failure"
						]
					}
				}
			},
			"Device.Services.VoiceService.{i}.POTS.Ringer.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "This object contains the ring sequences configured for analogue lines.",
				"access": false,
				"array": false,
				"EventNumberOfEntries": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<numentries>>",
					"datatype": "unsignedInt"
				},
				"Device.Services.VoiceService.{i}.POTS.Ringer.Event.{i}.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Table of events for which a ring pattern is defined. The table is pre-populated with the complete list of events for which the CPE supports definition of ring patterns.",
					"uniqueKeys": [
						"Alias",
						"Function"
					],
					"access": false,
					"array": true,
					"Alias": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
						"datatype": "Alias",
						"range": [
							{
								"max": 64
							}
						]
					},
					"Function": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The event for which the ring pattern is to apply. Enumeration of: Default, CCBSCallBack, CCNRCallBack, InternalCall, RingSplash, Group. The parameter MAY instead indicate a vendor-specific event name, which MUST use the format defined in <<bibref|TR-106>>.",
						"datatype": "string",
						"enumerations": [
							"Default",
							"CCBSCallBack",
							"CCNRCallBack",
							"InternalCall",
							"RingSplash",
							"Group"
						]
					},
					"Cadence": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<list>> The values represent an alternating pattern of times (in <<units>>) when the ringer is ON or OFF. Example: 1000,5000 See also <<bibref|ETSI_TR_101_183>>.",
						"list": {
							"datatype": "unsignedInt",
							"item": {
								"max": 10
							},
							"unit": "milliseconds"
						}
					}
				}
			}
		},
		"Device.Services.VoiceService.{i}.DECT.": {
			"type": "object",
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "This object models DECT bases and portables.",
			"access": false,
			"array": false,
			"BaseNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"PortableNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"Device.Services.VoiceService.{i}.DECT.Base.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "DECT base table (a voice physical interface as described in <<bibref|TR-104i2|Section 4.1>>).",
				"uniqueKeys": [
					"RFPI",
					"Name",
					"Alias"
				],
				"access": false,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enables or disables this base.",
					"datatype": "boolean"
				},
				"Status": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the status of this base.",
					"datatype": "string",
					"enumerations": [
						"Up",
						"Error",
						"Testing",
						"Disabled"
					]
				},
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"Name": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The textual name of the interface as assigned by the CPE.",
					"datatype": "string",
					"range": [
						{
							"max": 64
						}
					]
				},
				"ToneEventProfile": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Reference to the <<object|.Tone.EventProfile>> to use with this interface. If this parameter is <<empty>>, the value of <<param|.Tone.DefautEventProfile>> is used instead.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"Standard": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The highest DECT protocol version supported by the base.",
					"datatype": "string",
					"enumerations": [
						"GAP",
						"CAT-iq 1.0",
						"CAT-iq 2.0",
						"CAT-iq 2.1",
						"CAT-iq 3.0",
						"CAT-iq 4.0"
					]
				},
				"RFPI": {
					"type": "hexBinary",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The Radio Fixed Part Identity which uniquely identifies the Base. The RFPI is a 40 bits number stored in a hexbinary string. The format of the number is class-dependant and is defined in <<bibref|ETSI_EN_300_175-6|sections 5.1 to 5.5>>.",
					"datatype": "hexBinary",
					"range": [
						{
							"max": 5
						}
					]
				},
				"MaxSupportedPP": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The maximum number of Portable Parts (PP) supported by the DECT base of the CPE.",
					"datatype": "unsignedInt"
				},
				"PIN": {
					"type": "hexBinary",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The PIN is an hexbinary string of 32 bits, as defined in <<bibref|ETSI_TS_102_527-3>>.",
					"datatype": "hexBinary",
					"range": [
						{
							"max": 4
						}
					]
				},
				"RepeaterSupportEnabled": {
					"type": "boolean",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "If <<true>>, the DECT system supports the REP feature, as defined in <<bibref|ETSI_EN_300_175-8>>.",
					"datatype": "boolean"
				},
				"NEMOEnable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enable or disable NEMO (No Emission Mode as defined in <<bibref|ETSI_TS_102_527-3>>) operation of the base. Note: NEMO operations can be successfully enabled only if all PPs registered to the CPE support the NEMO operations.",
					"datatype": "boolean"
				},
				"SubscriptionEnable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enables the subscription mode of the DECT base. If <<true>>, the subscription window is open, otherwise it is closed. When the subscription window is open, a DECT portable part can be subscribed / registered to the DECT base. When written as <<true>>, it forces the device to open the subscription window. When the subscription window timeslot expires, the value MUST be changed back to <<false>>. If the CPE user can open the subscription window with a specific command (i.e. via DECT base GUI or pushing a button), the parameter MUST report the correct status (<<true>>, while the window is opened).",
					"datatype": "boolean"
				},
				"CipheringEnable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enable or disable ciphering for the calls on the DECT domain.",
					"datatype": "boolean"
				},
				"EncryptionType": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Algorithm used in the encryption process defined in <<bibref|ETSI_EN_300_175-7>>.",
					"datatype": "string",
					"enumerations": [
						"DSC",
						"DSC2",
						"CCM"
					]
				},
				"RFPowerControl": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "This parameter is used to control the sending RF power as per the required range within the customer premises. When set to Reduced, the CPE SHALL undertake measures to reduce the transmission RF power.",
					"datatype": "string",
					"enumerations": [
						"Normal",
						"Reduced"
					]
				},
				"FirmwareVersion": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Firmware version of the base as defined in <<bibref|ETSI_TS_102_527-3>>",
					"datatype": "string",
					"range": [
						{
							"max": 20
						}
					]
				},
				"EepromVersion": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "EEPROM version of the base as defined in <<bibref|ETSI_TS_102_527-3>>",
					"datatype": "string",
					"range": [
						{
							"max": 20
						}
					]
				},
				"HardwareVersion": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Hardware version of the base as defined in <<bibref|ETSI_TS_102_527-3>>",
					"datatype": "string",
					"range": [
						{
							"max": 20
						}
					]
				},
				"Device.Services.VoiceService.{i}.DECT.Base.{i}.Stats.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "This object is associated with statistics collected from the DECT domain of the CPE. The collected statistics are common for all call scenarios. The CPE MUST reset the DECT bases Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the base becomes operationally down due to a previous administrative down (i.e. the bases <<param|#.Status>> parameter transitions to a down state after the base is disabled) or when the base becomes administratively up (i.e. the bases <<param|#.Enable>> parameter transitions from <<false>> to <<true>>).",
					"access": false,
					"array": false,
					"Handovers": {
						"type": "unsignedInt",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The count of all successful handovers.",
						"datatype": "unsignedInt"
					},
					"HandoverFailures": {
						"type": "unsignedInt",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The count of all failed handovers.",
						"datatype": "unsignedInt"
					},
					"ControlFieldErrors": {
						"type": "unsignedInt",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The count of all bad A-field packets.",
						"datatype": "unsignedInt"
					},
					"PayloadFieldErrors": {
						"type": "unsignedInt",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The count of all bad B-field packets.",
						"datatype": "unsignedInt"
					},
					"SyncFailures": {
						"type": "unsignedInt",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The count of all synchronization failures during all calls.",
						"datatype": "unsignedInt"
					}
				}
			},
			"Device.Services.VoiceService.{i}.DECT.Portable.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "DECT portable table.",
				"uniqueKeys": [
					"IPEI",
					"Alias"
				],
				"access": false,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enables or disables this DECT portable.",
					"datatype": "boolean"
				},
				"Status": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the status of this DECT portable.",
					"datatype": "string",
					"enumerations": [
						"Up",
						"Error",
						"Testing",
						"Disabled"
					]
				},
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"CodecList": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<list>> <<reference>> The CPE SHOULD use the first enabled item in the list among those supported by the portable.",
					"list": {
						"datatype": "string"
					}
				},
				"RegistrationStatus": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The current registration status of the DECT portable.",
					"datatype": "string",
					"enumerations": [
						"In reach",
						"Not in reach"
					]
				},
				"IPUI": {
					"type": "hexBinary",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The International Portable User Identity which uniquely identifies the current user of the portable. The IPUI is composed of the Portable User Type (PUT), of 4 bits, followed by the Portable User Number (PUN) whose size and format depend on PUT (see <<bibref|ETSI_EN_300_175-6|Section 6.2>>). The hexbinary string is encoded exactly as it is defined in <<bibref|ETSI_EN_300_175-5|section 7.7.30>>) : * Bits from position 0 to 3 represent the PUT (as defined in <<bibref|ETSI_EN_300_175-6|section 7.3>>). * Bits from position 4 to <<param|IPUILength>>-1 represent the PUN. * Unused bits after position <<param|IPUILength>>-1 are set to 0. Examples : : - Type N (PUT + IPEI) : :: - PUT = 0000 (4 bits) = 0 (hexadecimal) :: - IPEI = 0000 0000 0000 1100 0000 0000 0000 1000 1001 (36 bits) = 00 0C 00 08 9 (hexadecimal) :: - IPUILength = 4 + 36 = 40 (bits) :: - IPUI = 00 00 C0 00 89 (40 bits; multiple of 8 so no bits are ignored) : - Type O (PUT + binary-coded number) : :: - PUT = 0001 (4 bits) = 1 (hexadecimal) :: - Number (decimal) = 4546812123 :: - Number (binary) = 1000 0111 1000 0001 0110 1100 0110 1101 1 (33 bits) :: - Number (hexadecimal) = 87 81 6C 6D 8 (33 bits; last three bits are ignored) :: - IPUILength = 4 + 33 = 37 (bits) :: - IPUI = 18 78 16 C6 D8 (37 bits; last 3 bits are ignored) : - Type Q (PUT + BCD number) : :: - PUT = 0011 (4 bits) = 3 (hexadecimal) :: - Number (decimal) = 4546812123 :: - Number (BCD) = 0100 0101 0100 0110 1000 0001 0010 0001 0010 0011 (40 bits) :: - IPUILength = 4 + 40 = 44 (bits) :: - IPUI = 34 54 68 12 12 30 (40 bits; last 4 bits are ignored)",
					"datatype": "hexBinary",
					"range": [
						{
							"max": 13
						}
					]
				},
				"IPUILength": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The length of <<param|IPUI>>, in <<units>>.",
					"datatype": "unsignedInt",
					"unit": "bits"
				},
				"IPEI": {
					"type": "hexBinary",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The International Portable Equipment Identity which is globally unique and identifies the portable. The IPEI is composed of the Equipment Manufacturers Code (EMC), of 16 bits, followed by the Portable equipment Serial Number (PSN) of 20 bits (see <<bibref|ETSI_EN_300_175-6|Section 10>>). The hexbinary string is encoded as follows : * Bits from position 0 to 15 represent the EMC. * Bits from position 16 to 35 represent the PSN. * The last four bits are unused and are set to 0.",
					"datatype": "hexBinary",
					"range": [
						{
							"max": 5
						}
					]
				},
				"PARK": {
					"type": "hexBinary",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The Portable Access Rights Key of this portable. The PARK is composed of the Access Rights Class (ARC) of 3 bits and the Access Rights Details (ARD) whose size and format depend on the ARC (see <<bibref|ETSI_EN_300_175-6|Sections 6.1.1 to 6.1.5>>). The hexbinary string is encoded as follows : * Bits from position 0 to 2 represent the ARC (as defined in <<bibref|ETSI_EN_300_175-6|section 7.2>>). * For class A : ** Bits from position 3 to 35 represent the ARD. ** The last four bits are unused and are set to 0. * For other classes : ** Bits from position 3 to 31 represent the ARD.",
					"datatype": "hexBinary",
					"range": [
						{
							"max": 5
						}
					]
				},
				"BaseAttachedTo": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Refers to the <<object|#.Base>> where this portable part is attached to.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"PortableType": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<list>> Protocols used for connection.",
					"list": {
						"datatype": "string",
						"enumerations": [
							"GAP",
							"CAT-iq 1.0",
							"CAT-iq 2.0",
							"CAT-iq 2.1",
							"CAT-iq 3.0",
							"CAT-iq 4.0"
						]
					}
				},
				"SubscriptionTime": {
					"type": "dateTime",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The date and time in which the DECT portable has been subscribed with the base. If NTP or equivalent is not available, this parameter, if present, SHOULD be set to the Unknown Time value.",
					"datatype": "dateTime"
				},
				"Control": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "This parameter MAY be used by the ACS to control the registration status of the portable.",
					"datatype": "string",
					"enumerations": [
						"Unregister",
						"Disable"
					]
				},
				"HardwareVersion": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the Hardware Version of a DECT portable. Corresponds to the portable HW Version identifier parameter, as defined in <<bibref|ETSI_TS_102_527-4>>.",
					"datatype": "string",
					"range": [
						{
							"max": 20
						}
					]
				},
				"SoftwareVersion": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the Software Version used by a DECT portable. Maps with the portable SW Version identifier parameter, as defined in <<bibref|ETSI_TS_102_527-4>>.",
					"datatype": "string",
					"range": [
						{
							"max": 20
						}
					]
				},
				"SoftwareUpgrade": {
					"type": "boolean",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "This parameter indicates support for SUOTA (Software Update Over The Air).",
					"datatype": "boolean"
				},
				"LastUpdateDateTime": {
					"type": "dateTime",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the last successful SW update of the DECT portable. This is based on the reception of a FACILITY message (being part of the HS version indication procedure) from the portable containing another value of SW version than the current value in this table. This new SW version is then updated in this table.",
					"datatype": "dateTime"
				},
				"OperatorName": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The name of the operator that will be displayed on the portable, if it supports this feature.",
					"datatype": "string",
					"range": [
						{
							"max": 32
						}
					]
				}
			}
		},
		"Device.Services.VoiceService.{i}.SIP.": {
			"type": "object",
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "This object is dedicated to SIP as defined in <<bibref|RFC3261>>. It models SIP networks, clients, proxies and registrars.",
			"access": false,
			"array": false,
			"NetworkNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"ClientNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"ProxyNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"RegistrarNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"Device.Services.VoiceService.{i}.SIP.Client.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "SIP client table (a Client as described in <<bibref|TR-104i2|Section 4.2>>). Each SIP client maintains its identity-to-location (i.e., RegisterURI-to-ContactURI) binding for SIP signaling exchanged between the client and the network. For CPE use cases where <<object|.CallControl>> is used to map network-facing to user-facing objects, the relationship between the SIP client object and its associated <<object|.CallControl.Line>> object(s) is determined by the <<param|RegisterMode>> parameter, as follows: : - In case of RFC3261-style explicit registration of SIP AoRs, only a single line shall be associated with each SIP client. : - In case of RFC6140 or IMS/TISPAN-style registration, multiple lines can be associated with each SIP client. The set of lines associated with a SIP client constitute an identity set. In this case, registering the single SIP client implicitly registers the identities of all associated lines. : - In the case where the client does not register with the network (<<param|RegisterMode>> is <<enum|STATIC|RegisterMode>>), multiple lines can be associated with each SIP client.",
				"uniqueKeys": [
					"Alias"
				],
				"access": true,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enable or disable this client.",
					"default": "false",
					"datatype": "boolean"
				},
				"QuiescentMode": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "If <<true>>, when <<param|Enable>> is set to <<false>> in-progress sessions remain intact, but no new sessions are allowed. When all sessions are terminated, the <<object>> is disabled.",
					"datatype": "boolean"
				},
				"Status": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the status of this client. Unless noted otherwise, the status values apply to both registering and non-registering clients.",
					"default": "Disabled",
					"datatype": "string",
					"enumerations": [
						"Up",
						"Initializing",
						"Registering",
						"Deregistering",
						"Error_Misconfigured",
						"Error_Network",
						"Error_Registration",
						"Quiescent",
						"Disabled"
					]
				},
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"Origin": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Mechanism via which this instance was assigned. Enumeration of: AutoConfigured, Static.",
					"default": "Static",
					"datatype": "string",
					"enumerations": [
						"AutoConfigured",
						"Static"
					]
				},
				"RegisterMode": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The registration procedures to apply. For <<param>> values other than <<enum|STATIC>>, the SIP <<object|#>> conveys its RegisterURI-to-ContactURI binding to the network using the SIP registration procedure. For the <<param>> value of <<enum|STATIC>>, the SIP client RegisterURI-to-ContactURI binding is conveyed to the network via some out-of-band mechanism not defined by this data model. This parameter can only be modified if <<param|Origin>> is <<enum|Static|Origin>>.",
					"datatype": "string",
					"enumerations": [
						"RFC3261",
						"STATIC",
						"RFC6140",
						"TISPAN"
					]
				},
				"AuthUserName": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Username used to authenticate the connection to the server. This parameter can only be modified if <<param|Origin>> is <<enum|Static|Origin>>.",
					"datatype": "string",
					"range": [
						{
							"max": 128
						}
					]
				},
				"AuthPassword": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Password used to authenticate the connection to the server. This parameter can only be modified if <<param|Origin>> is <<enum|Static|Origin>>.",
					"datatype": "string",
					"range": [
						{
							"max": 128
						}
					]
				},
				"Network": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "SIP network with which this SIP client is associated. <<reference>> This parameter can only be modified if <<param|Origin>> is <<enum|Static|Origin>>.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"MaxSessions": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Limit on the number of simultaneous voice sessions across this client. This MUST be less than or equal to <<param|.Capabilities.MaxSessionCount>>. A value of zero indicates no explicit limit on the number of sessions.",
					"default": "0",
					"datatype": "unsignedInt"
				},
				"RegisterURI": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The SIP URI that represents the identity of this SIP client. For <<param|RegisterMode>> values where the SIP client registers with the network, this SIP URI is placed in the From and To headers in the REGISTER request. This parameter can only be modified if <<param|Origin>> is <<enum|Static|Origin>>.",
					"datatype": "string",
					"range": [
						{
							"max": 389
						}
					]
				},
				"E164Format": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "When <<true>> and using a <<object|.Trunk>>, the SIP URIs built from the directory numbers in <<param|.Trunk.<i>.DDIRange>> SHOULD use E.164 format, using the user=phone URI parameter, according to <<bibref|RFC3261|section 19.1.6>>.",
					"default": "true",
					"datatype": "boolean"
				},
				"T38Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enable or disable the use of T.38.",
					"datatype": "boolean"
				},
				"SIPEventSubscribeNumberOfEntries": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<numentries>>",
					"datatype": "unsignedInt"
				},
				"ContactNumberOfEntries": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<numentries>>",
					"datatype": "unsignedInt"
				},
				"Device.Services.VoiceService.{i}.SIP.Client.{i}.Contact.{i}.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Active registrations for this SIP account.",
					"uniqueKeys": [
						"Alias"
					],
					"access": true,
					"array": true,
					"Enable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enable or disable this <<object>>.",
						"default": "false",
						"datatype": "boolean"
					},
					"Status": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Indicates the status of this <<object>>.",
						"default": "Disabled",
						"datatype": "string",
						"enumerations": [
							"Up",
							"Error",
							"Disabled"
						]
					},
					"Alias": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
						"datatype": "Alias",
						"range": [
							{
								"max": 64
							}
						]
					},
					"Origin": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Mechanism via which this <<object>> was assigned. Enumeration of: AutoConfigured, Static.",
						"default": "Static",
						"datatype": "string",
						"enumerations": [
							"AutoConfigured",
							"Static"
						]
					},
					"IPAddress": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "This is the IP address where the <<object|#>> is listening for SIP requests from the service provider network. This IP address value is populated in the host portion of the <<param|ContactURI>> parameter. This parameter can only be modified if <<param|Origin>> is <<enum|Static|Origin>>.",
						"datatype": "IPAddress",
						"range": [
							{
								"max": 45
							}
						]
					},
					"Port": {
						"type": "unsignedInt",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "This is the port where the <<object|#>> is listening for SIP requests from the service provider network. This IP port value is populated in the port portion of the <<param|ContactURI>> parameter. This parameter can only be modified if <<param|Origin>> is <<enum|Static|Origin>>.",
						"datatype": "unsignedInt",
						"range": [
							{
								"min": 0,
								"max": 65535
							}
						]
					},
					"ContactURI": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The current Contact URI of the <<object|#>>. If SIP registration procedures are being used, as determined by the <<param|#.RegisterMode>> parameter, then this parameter is populated in the Contact header field of the REGISTER request. This parameter can only be modified if <<param|Origin>> is <<enum|Static|Origin>>.",
						"datatype": "string",
						"range": [
							{
								"max": 256
							}
						]
					},
					"ExpireTime": {
						"type": "dateTime",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Time when this registration will expire. This parameter is valid only when SIP registration procedures are being used, as determined by the <<param|#.RegisterMode>> parameter. If this registration never expires, this parameter SHOULD be set to the Unknown Time value.",
						"datatype": "dateTime"
					},
					"PingInterval": {
						"type": "unsignedInt",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The interval in <<units>> between sending a periodic ping request toward the network (i.e. a SIP OPTIONS ping). The CPE performs the periodic ping request to verify connectivity with the network when SIP registration procedures are not used (i.e. when the SIP client <<param|#.RegisterMode>> is <<enum|STATIC|#.RegisterMode>>). A value of 0 indicates that the CPE should not perform the periodic ping request.",
						"datatype": "unsignedInt",
						"range": [
							{
								"min": 0,
								"max": 65535
							}
						],
						"unit": "seconds"
					},
					"UserAgent": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "This is the User-Agent field reported in the SIP header of the REGISTER message.",
						"datatype": "string",
						"range": [
							{
								"max": 256
							}
						]
					}
				},
				"Device.Services.VoiceService.{i}.SIP.Client.{i}.EventSubscribe.{i}.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Table of SIP events automatically populated by the CPE with each of the SIP event subscriptions in <<object|.SIP.Network.<i>.EventSubscribe.<i>.>>. This table allows specification of the authentication credentials needed for each event subscription.",
					"uniqueKeys": [
						"Alias",
						"Event"
					],
					"access": true,
					"array": true,
					"Enable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enables or disables this entry.",
						"default": "false",
						"datatype": "boolean"
					},
					"Alias": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
						"datatype": "Alias",
						"range": [
							{
								"max": 64
							}
						]
					},
					"Event": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "SIP event name corresponding to the value given in <<object|.SIP.Network.<i>.EventSubscribe.<i>.>>.",
						"datatype": "string",
						"range": [
							{
								"max": 32
							}
						]
					},
					"AuthUserName": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Username used to authenticate the connection to the event notify server.",
						"datatype": "string",
						"range": [
							{
								"max": 128
							}
						]
					},
					"AuthPassword": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Password used to authenticate the connection to the event notify server.",
						"datatype": "string",
						"range": [
							{
								"max": 128
							}
						]
					}
				}
			},
			"Device.Services.VoiceService.{i}.SIP.Network.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "This object models a SIP network (a network as described in <<bibref|TR-104i2|Section 4.2>>). SIP networks are used by SIP <<object|#.Client>> objects so that common parameters do not have to be provisioned multiple times.",
				"uniqueKeys": [
					"Alias"
				],
				"access": true,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enable or disable this <<object>>. Starts the DNS resolving when enabled.",
					"default": "false",
					"datatype": "boolean"
				},
				"QuiescentMode": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "If <<true>>, when <<param|Enable>> is set to <<false>> in-progress sessions remain intact, but no new sessions are allowed. When all sessions are terminated, the <<object>> is disabled.",
					"datatype": "boolean"
				},
				"Status": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the status of this network.",
					"default": "Disabled",
					"datatype": "string",
					"enumerations": [
						"Up",
						"Resolving",
						"Error_DNS",
						"Error_Other",
						"Disabled"
					]
				},
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"ProxyServer": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Host name or IP address of the SIP proxy server. If not <<empty>>, all SIP signaling traffic MUST be sent to the host indicated by this parameter and the port indicated by <<param|ProxyServerPort>> unless <<param|OutboundProxy>> is not <<empty>> or a different route was discovered during normal SIP routing operations. Regardless of which host the traffic gets sent to (<<param>> or <<param|OutboundProxy>>), the value of this parameter (unless <<empty>>) MUST be used to derive the URI placed into the SIP Route header field of all requests originated by this end-point, unless a different proxy host was discovered dynamically during normal SIP routing operations.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"ProxyServerPort": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Destination port to be used in connecting to the SIP proxy server.",
					"default": "5060",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 65535
						}
					]
				},
				"ProxyServerTransport": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Transport protocol to be used in connecting to the SIP proxy server.",
					"default": "UDP",
					"datatype": "string",
					"enumerations": [
						"UDP",
						"TCP",
						"TLS",
						"SCTP"
					]
				},
				"RegistrarServer": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Host name or IP address of the SIP registrar server. If this parameter is <<empty>>, the CPE MUST obtain all of the registrar server configuration information, including host name or IP address, port, and transport protocol, from the values in <<param|ProxyServer>>, <<param|ProxyServerPort>>, and <<param|ProxyServerTransport>>.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"RegistrarServerPort": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Destination port to be used in connecting to the SIP registrar server. If <<param|RegistrarServer>> is empty the CPE MUST obtain all of the registrar server configuration information, including host name or IP address, port, and transport protocol, from the values in <<param|ProxyServer>>, <<param|ProxyServerPort>>, and <<param|ProxyServerTransport>>.",
					"default": "5060",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 65535
						}
					]
				},
				"RegistrarServerTransport": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Transport protocol to be used in connecting to the registrar server. Enumeration of: UDP, TCP, TLS, SCTP. If <<param|RegistrarServer>> is empty the CPE MUST obtain all of the registrar server configuration information, including host name or IP address, port, and transport protocol, from the values in <<param|ProxyServer>>, <<param|ProxyServerPort>>, and <<param|ProxyServerTransport>>.",
					"default": "UDP",
					"datatype": "string",
					"enumerations": [
						"UDP",
						"TCP",
						"TLS",
						"SCTP"
					]
				},
				"ServerDomain": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "If non-empty this <<param>> is used by the devices in a DNS SRV request to provide FQDNs <<object|FQDNServer.<i>.>> for SIP Server connections. <<bibref|RFC2782>> Clients ask for a specific service/protocol for a specific domain (the word domain is used here in the strict RFC 1034 sense), and get back the names of any available servers.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"ChosenDomain": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Domain used by <<object|#.Client>> objects that reference this <<object>> instance.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"ChosenIPAddress": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "IP address used to reach the <<param|ChosenDomain>>.",
					"datatype": "IPAddress",
					"range": [
						{
							"max": 45
						}
					]
				},
				"ChosenPort": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Port used to reach the <<param|ChosenDomain>>.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 65535
						}
					]
				},
				"UserAgentDomain": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "CPE domain string. If <<empty>>, the CPE SHOULD use its IP address as the domain.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"UserAgentPort": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Port used for incoming call control signaling.",
					"default": "0",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 65535
						}
					]
				},
				"UserAgentTransport": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Transport protocol to be used for incoming call control signaling.",
					"default": "UDP",
					"datatype": "string",
					"enumerations": [
						"UDP",
						"TCP",
						"TLS",
						"SCTP"
					]
				},
				"OutboundProxy": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The Fully Qualified Domain Name (FQDN) or IP Address of the outbound proxy. If the value is not <<empty>>, the SIP endpoint MUST send all SIP traffic (requests and responses) to the host indicated by this parameter and the port indicated by <<param|OutboundProxyPort>>. This MUST be done regardless of the routes discovered using normal SIP operations, including use of Route headers initialized from Service-Route and Record-Route headers previously received. <<param>> is NOT used to generate the URI placed into the Route header of any requests. When <<param>> is assigned, the name is looked up (resolved) and the corresponding address is set in <<param|OutboundProxyResolvedAddress>>.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"OutboundProxyResolvedAddress": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The IP address of the outbound proxy. This parameter can be assigned statically (e.g. present in the factory default configuration or set by the ACS via <<param|OutboundProxy>>) or assigned dynamically (via DHCP). When <<param|OutboundProxy>> is assigned, the name is looked up (resolved) and the corresponding address is set in <<param>>.",
					"datatype": "IPAddress",
					"range": [
						{
							"max": 45
						}
					]
				},
				"OutboundProxyPrecedence": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates whether it is the static configuration or the DHCP configuration that is actually used for <<param|OutboundProxyResolvedAddress>>.",
					"datatype": "string",
					"enumerations": [
						"Static",
						"DHCP"
					]
				},
				"OutboundProxyPort": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Destination port to be used in connecting to the outbound proxy. This parameter MUST be ignored unless the value of <<param|OutboundProxy>> is non-empty.",
					"default": "5060",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 65535
						}
					]
				},
				"STUNEnable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enable or disable use of STUN to allow operation through NAT. Note: enabling STUN is to be interpreted as enabling the use of STUN for discovery, not use as a keep-alive mechanism.",
					"default": "false",
					"datatype": "boolean"
				},
				"STUNServer": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Domain name or IP address of the STUN server.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"NonVoiceBandwidthReservedUpstream": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "For bandwidth-based admission control, a session can proceed only if there is <<param>> <<units>> of upstream bandwidth left available for non-voice traffic. This parameter is appropriate only in implementations in which the actual bandwidth can be known, such as a VoIP device embedded in a DSL B-NT.",
					"default": "0",
					"datatype": "unsignedInt",
					"unit": "bits per second"
				},
				"NonVoiceBandwidthReservedDownstream": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "For bandwidth-based admission control, a session can proceed only if there is <<param>> <<units>> of downstream bandwidth left available for non-voice traffic. This parameter is appropriate only in implementations in which the actual bandwidth can be known, such as a VoIP device embedded in a DSL B-NT.",
					"default": "0",
					"datatype": "unsignedInt",
					"unit": "bits per second"
				},
				"Organization": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Text string to be used in the Organization header.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"RegistrationPeriod": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Duration, in <<units>>, after which the user agent needs to register again.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1
						}
					],
					"unit": "seconds"
				},
				"Realm": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Realm for authentication with the specified values of <<param|#.Client.<i>.AuthUserName>> and <<param|#.Client.<i>.AuthPassword>>.",
					"datatype": "string"
				},
				"TimerT1": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Value of SIP timer T1, in <<units>>, as defined in <<bibref|RFC3261>>.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1
						}
					],
					"unit": "milliseconds"
				},
				"TimerT2": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Value of SIP timer T2, in <<units>>, as defined in <<bibref|RFC3261>>.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1
						}
					],
					"unit": "milliseconds"
				},
				"TimerT4": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Value of SIP timer T4, in <<units>>, as defined in <<bibref|RFC3261>>.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1
						}
					],
					"unit": "milliseconds"
				},
				"TimerA": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Value of SIP timer A, in <<units>>, as defined in <<bibref|RFC3261>>.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1
						}
					],
					"unit": "milliseconds"
				},
				"TimerB": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Value of SIP timer B, in <<units>>, as defined in <<bibref|RFC3261>>.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1
						}
					],
					"unit": "milliseconds"
				},
				"TimerC": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Value of SIP timer C, in <<units>>, as defined in <<bibref|RFC3261>>.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1
						}
					],
					"unit": "milliseconds"
				},
				"TimerD": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Value of SIP timer D, in <<units>>, as defined in <<bibref|RFC3261>>.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1
						}
					],
					"unit": "milliseconds"
				},
				"TimerE": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Value of SIP timer E, in <<units>>, as defined in <<bibref|RFC3261>>.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1
						}
					],
					"unit": "milliseconds"
				},
				"TimerF": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Value of SIP timer F, in <<units>>, as defined in <<bibref|RFC3261>>.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1
						}
					],
					"unit": "milliseconds"
				},
				"TimerG": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Value of SIP timer G, in <<units>>, as defined in <<bibref|RFC3261>>.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1
						}
					],
					"unit": "milliseconds"
				},
				"TimerH": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Value of SIP timer H, in <<units>>, as defined in <<bibref|RFC3261>>.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1
						}
					],
					"unit": "milliseconds"
				},
				"TimerI": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Value of SIP timer I, in <<units>>, as defined in <<bibref|RFC3261>>.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1
						}
					],
					"unit": "milliseconds"
				},
				"TimerJ": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Value of SIP timer J, in <<units>>, as defined in <<bibref|RFC3261>>.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1
						}
					],
					"unit": "milliseconds"
				},
				"TimerK": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Value of SIP timer K, in <<units>>, as defined in <<bibref|RFC3261>>.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1
						}
					],
					"unit": "milliseconds"
				},
				"InviteExpires": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Invite request Expires header value, in <<units>>.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1
						}
					],
					"unit": "seconds"
				},
				"ReInviteExpires": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Re-invite request Expires header value, in <<units>>.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1
						}
					],
					"unit": "seconds"
				},
				"RegisterExpires": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Register request Expires header value, in <<units>>.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1
						}
					],
					"unit": "seconds"
				},
				"RegisterRetryInterval": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Register retry interval, in <<units>>.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1
						}
					],
					"unit": "seconds"
				},
				"InboundAuth": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Applicable inbound authentication method, if any.",
					"default": "None",
					"datatype": "string",
					"enumerations": [
						"None",
						"Digest",
						"SourceFilter"
					]
				},
				"InboundAuthUsername": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "If inbound authentication is used, the username credentials.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"InboundAuthPassword": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "If inbound authentication is used, the password credentials.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"UseCodecPriorityInSDPResponse": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "When <<true>>, in the SDP included in an OK response to an Invite, the first listed codec MUST be the highest priority codec among those offered in the Invite, based on the priorities specified in <<param|CodecList>>. The list of codecs in the SDP MAY also include other lower priority codecs. When <<false>>, there is no specific requirement for choosing the codecs listed in the SDP included in an OK response.",
					"default": "false",
					"datatype": "boolean"
				},
				"DSCPMark": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Diffserv code point to be used for outgoing SIP signaling packets.",
					"default": "0",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 63
						}
					]
				},
				"VLANIDMark": {
					"type": "int",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "VLAN ID (as defined in <<bibref|802.1Q-2005>>) to be used for outgoing SIP signaling packets for this network. A value of -1 indicates the default value is to be used. If either <<param>> or <<param|EthernetPriorityMark>> are greater than zero, then the outgoing frames MUST be tagged. Otherwise, the outgoing frames MAY be tagged or untagged.",
					"default": "-1",
					"datatype": "int",
					"range": [
						{
							"min": -1
						}
					]
				},
				"EthernetPriorityMark": {
					"type": "int",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Ethernet priority code (as defined in <<bibref|802.1Q-2005>>) to be used for outgoing SIP signaling packets for this network. A value of -1 indicates the default value is to be used. If either <<param|VLANIDMark>> or <<param>> are greater than zero, then the outgoing frames MUST be tagged. Otherwise, the outgoing frames MAY be tagged or untagged.",
					"default": "-1",
					"datatype": "int",
					"range": [
						{
							"min": -1
						}
					]
				},
				"ConferenceCallDomainURI": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "URI of the network conference bridge for the multiway conference call service.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"TimerLoginRejected": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "In case of a 401 (Unauthorized) or a 407 (Proxy Authentication Required) response to a REGISTER request, the CPE shall send REGISTER using credentials. If the second response is a new 401 (Unauthorized) or a 407 (Proxy Authentication Required) with stale=false or no stale value, the CPE shall re-init registration cycle after expiration of this timer (in <<units>>). If stale=true, the CPE shall send REGISTER using credentials.",
					"datatype": "unsignedInt",
					"unit": "seconds"
				},
				"NoLoginRetry": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "If <<true>>, no retry after a 401 (Unauthorized) or a 407 (Proxy Authentication Required) response to a REGISTER until power cycle or credentials have been changed.",
					"datatype": "boolean"
				},
				"TimerRegistrationFailed": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "In case of no response to a REGISTER request, the CPE shall retry according to retransmission algorithm defined in <<bibref|RFC3261>>, then wait for expiration of this timer (in <<units>>). In case of other response, the CPE shall wait for expiration of this timer before sending a new REGISTER request.",
					"datatype": "unsignedInt",
					"unit": "seconds"
				},
				"TimerSubscriptionFailed": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "When starting a MWI subscription, on response of a SUBSCRIBE request : in case of no response or other response than 200 or 423, the CPE shall retry according to retransmission algorithm defined in <<bibref|RFC3261>>, then wait for expiration of this timer (in <<units>>) before sending a new SUBSCRIBE request.",
					"datatype": "unsignedInt",
					"unit": "seconds"
				},
				"UnansweredRegistrationAttempts": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The number of registration timeouts when trying to register the server.",
					"datatype": "unsignedInt"
				},
				"VoIPProfile": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "VoIP profile to use with this <<object>>. <<reference>>",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"CodecList": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<list>> <<reference>> The CPE SHOULD use the first enabled item in the list among those supported by the remote endpoint and consistent with the available bandwidth.",
					"list": {
						"datatype": "string"
					}
				},
				"MaxSessions": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Limit on the number of simultaneous voice sessions across all <<object|.SIP.Client>> referencing this <<object>>. This MUST be less than or equal to <<param|.Capabilities.MaxSessionCount>>. A value of zero indicates no explicit limit on the number of sessions.",
					"default": "0",
					"datatype": "unsignedInt"
				},
				"FQDNServerNumberOfEntries": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<numentries>>",
					"datatype": "unsignedInt"
				},
				"EventSubscribeNumberOfEntries": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<numentries>>",
					"datatype": "unsignedInt"
				},
				"ResponseMapNumberOfEntries": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<numentries>>",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 999
						}
					]
				},
				"Device.Services.VoiceService.{i}.SIP.Network.{i}.FQDNServer.{i}.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Table of Fully Qualified Domain Names for this <<object|#>> instance in order to connect to the SIP server as described in <<bibref|RFC2782>>.",
					"uniqueKeys": [
						"Alias",
						"Domain"
					],
					"access": true,
					"array": true,
					"Enable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enables or disables this FQDN server.",
						"default": "false",
						"datatype": "boolean"
					},
					"Alias": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
						"datatype": "Alias",
						"range": [
							{
								"max": 64
							}
						]
					},
					"Origin": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Mechanism via which the FQDN server was assigned.",
						"default": "Static",
						"datatype": "string",
						"enumerations": [
							"AutoConfigured",
							"Static"
						]
					},
					"Domain": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The domain name of the target host. This parameter can only be modified if <<param|Origin>> is <<enum|Static|Origin>>.",
						"datatype": "string",
						"range": [
							{
								"max": 256
							}
						]
					},
					"Weight": {
						"type": "unsignedInt",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "A server selection mechanism. The weight field specifies a relative weight for entries with the same priority. Larger weights SHOULD be given a proportionately higher probability of being selected. This parameter can only be modified if <<param|Origin>> is <<enum|Static|Origin>>.",
						"default": "0",
						"datatype": "unsignedInt",
						"range": [
							{
								"min": 0,
								"max": 65535
							}
						]
					},
					"Priority": {
						"type": "unsignedInt",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The priority of this target host. A client MUST attempt to contact the target host with the lowest-numbered priority it can reach; target hosts with the same priority SHOULD be tried in an order defined by the weight field. This parameter can only be modified if <<param|Origin>> is <<enum|Static|Origin>>.",
						"default": "0",
						"datatype": "unsignedInt",
						"range": [
							{
								"min": 0,
								"max": 65535
							}
						]
					},
					"Port": {
						"type": "unsignedInt",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The port on this target host of this service.",
						"datatype": "unsignedInt",
						"range": [
							{
								"min": 0,
								"max": 65535
							}
						]
					},
					"IPAddresses": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<list|the IP Addresses that the FQDN resolves to>> The order in which the addresses appear in the list MAY imply priority. This parameter MAY be modified by the ACS only if <<param|Origin>> is <<enum|Static|Origin>>.",
						"list": {
							"datatype": "IPAddress",
							"range": [
								{
									"max": 45
								}
							]
						}
					}
				},
				"Device.Services.VoiceService.{i}.SIP.Network.{i}.EventSubscribe.{i}.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Table to specify the SIP events to which the CPE MUST subscribe.",
					"uniqueKeys": [
						"Alias",
						"Event"
					],
					"access": true,
					"array": true,
					"Enable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enables or disables this entry.",
						"default": "false",
						"datatype": "boolean"
					},
					"Alias": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
						"datatype": "Alias",
						"range": [
							{
								"max": 64
							}
						]
					},
					"Event": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "SIP event name to appear in the EVENT header of the SIP SUBSCRIBE request.",
						"datatype": "string",
						"range": [
							{
								"max": 32
							}
						]
					},
					"Notifier": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Host name or IP address of the event notify server.",
						"datatype": "string",
						"range": [
							{
								"max": 256
							}
						]
					},
					"NotifierPort": {
						"type": "unsignedInt",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Destination port to be used in connecting to the event notifier.",
						"default": "0",
						"datatype": "unsignedInt",
						"range": [
							{
								"min": 0,
								"max": 65535
							}
						]
					},
					"NotifierTransport": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Transport protocol to be used in connecting to the event notifier.",
						"default": "UDP",
						"datatype": "string",
						"enumerations": [
							"UDP",
							"TCP",
							"TLS",
							"SCTP"
						]
					},
					"ExpireTime": {
						"type": "unsignedInt",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Subscription refresh timer, in <<units>>.",
						"datatype": "unsignedInt",
						"unit": "seconds"
					}
				},
				"Device.Services.VoiceService.{i}.SIP.Network.{i}.ResponseMap.{i}.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Each entry in this table specifies the tone and message to be provided to the user for a particular SIP response received (normally 4xx and 5xx).",
					"uniqueKeys": [
						"Alias",
						"SIPResponseNumber"
					],
					"access": true,
					"array": true,
					"Alias": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
						"datatype": "Alias",
						"range": [
							{
								"max": 64
							}
						]
					},
					"SIPResponseNumber": {
						"type": "unsignedInt",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The SIP response code number.",
						"datatype": "unsignedInt",
						"range": [
							{
								"min": 101,
								"max": 999
							}
						]
					},
					"Enable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enables or disables this entry.",
						"default": "false",
						"datatype": "boolean"
					},
					"TextMessage": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The message to be provided on the screen or display of the VoIP device when the SIP response is received. If this parameter is not <<empty>>, display of this text preempts the value of <<param|.Tone.Description.<i>.ToneText>> associated with <<param|Tone>>. If this parameter is <<empty>>, the value of <<param|.Tone.Description.<i>.ToneText>> associated with <<param|Tone>>, if any, is displayed instead. This parameter is applicable only for VoIP devices capable of text display.",
						"datatype": "string",
						"range": [
							{
								"max": 64
							}
						]
					},
					"Tone": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The tone to be played to the user when the SIP response is received. <<reference>> <<empty>> indicates no tone is to be played for this event.",
						"datatype": "string",
						"range": [
							{
								"max": 256
							}
						]
					}
				}
			},
			"Device.Services.VoiceService.{i}.SIP.Proxy.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Global SIP parameters used by the CPE when acting as proxy for SIP user agents.",
				"uniqueKeys": [
					"Alias",
					"ProxyIPAddress",
					"ProxyPort"
				],
				"access": true,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enable or disable the proxy.",
					"default": "false",
					"datatype": "boolean"
				},
				"Status": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the status of this proxy.",
					"default": "Disabled",
					"datatype": "string",
					"enumerations": [
						"Up",
						"Error",
						"Disabled"
					]
				},
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"Origin": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Mechanism via which the IP address was assigned. Enumeration of: AutoConfigured, Static.",
					"default": "Static",
					"datatype": "string",
					"enumerations": [
						"AutoConfigured",
						"Static"
					]
				},
				"ProxyIPAddress": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The IP address the proxy listens on. This parameter can only be modified if <<param|Origin>> is <<enum|Static|Origin>>.",
					"datatype": "IPAddress",
					"range": [
						{
							"max": 45
						}
					]
				},
				"ProxyPort": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The port the proxy listens on.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 65535
						}
					]
				},
				"ContactURI": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Built by the CPE using <<param|ProxyIPAddress>> and <<param|ProxyPort>>.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"VoIPProfile": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "VoIP profile to use with this proxy. <<reference>>",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				}
			},
			"Device.Services.VoiceService.{i}.SIP.Registrar.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Global SIP parameters used by the CPE when acting as registrar server for externally connected SIP user agents. This object also contains the global SIP parameters used by the CPE when it acts as static identity-to-location binding database for externally connected SIP user agents that dont register (i.e. static-mode SIP-PBX).",
				"uniqueKeys": [
					"Alias",
					"RegistrarPort",
					"RegistrarIPAddress"
				],
				"access": true,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enable or disable the registrar.",
					"default": "false",
					"datatype": "boolean"
				},
				"QuiescentMode": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "If <<true>>, when <<param|Enable>> is set to <<false>> in-progress sessions remain intact, but no new sessions are allowed. When all sessions are terminated, the <<object>> is disabled.",
					"datatype": "boolean"
				},
				"Status": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the status of this registrar.",
					"default": "Disabled",
					"datatype": "string",
					"enumerations": [
						"Up",
						"Error",
						"Disabled"
					]
				},
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"Origin": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Mechanism via which the IP address was assigned. Enumeration of: AutoConfigured, Static.",
					"default": "Static",
					"datatype": "string",
					"enumerations": [
						"AutoConfigured",
						"Static"
					]
				},
				"RegistrarIPAddress": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The IP address the registrar listens on for incoming SIP requests from an externally connected SIP user agent. This parameter can only be modified if <<param|Origin>> is <<enum|Static|Origin>>.",
					"datatype": "IPAddress",
					"range": [
						{
							"max": 45
						}
					]
				},
				"RegistrarPort": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The port the registrar listens on.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 65535
						}
					]
				},
				"RegisterExpires": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The minimum register expire time in <<units>>. This parameter is valid only for SIP user agents that support registration.",
					"datatype": "unsignedInt",
					"unit": "seconds"
				},
				"PingInterval": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The interval in <<units>> between sending a periodic ping request (e.g., a SIP OPTIONS ping) to externally connected SIP user agents. The CPE performs the periodic ping request to verify connectivity with externally connected devices that do not support SIP registration procedures (i.e. a static-mode SIP-PBX). A value of 0 indicates that the CPE should not perform the periodic ping request.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 65535
						}
					],
					"unit": "seconds"
				},
				"Organization": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Text string to be used in the Organization header.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"Realm": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Realm for authentication with the specified values of <<param|Account.<i>.AuthUserName>> and <<param|Account.<i>.AuthPassword>>.",
					"datatype": "string"
				},
				"VoIPProfile": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "VoIP profile to use with this registrar. <<reference>>",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"ContactURI": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Built by the CPE using <<param|RegistrarIPAddress>> and <<param|RegistrarPort>>.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"AccountNumberOfEntries": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<numentries>>",
					"datatype": "unsignedInt"
				},
				"Device.Services.VoiceService.{i}.SIP.Registrar.{i}.Account.{i}.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "SIP account table.",
					"uniqueKeys": [
						"URI",
						"Alias"
					],
					"access": true,
					"array": true,
					"Enable": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enables or disables this account, or places it into a quiescent state. Enumeration of: Enable, Quiescent, Disable. In the <<enum|Quiescent>> state, in-progress sessions remain intact, but no new sessions are allowed. If this parameter is set to <<enum|Quiescent>> in a CPE that does not support the <<enum|Quiescent>> state, it MUST treat it the same as the <<enum|Disable>> state (and indicate <<enum|Disabled|Status>> in <<param|Status>>).",
						"default": "Disable",
						"datatype": "string",
						"enumerations": [
							"Enable",
							"Quiescent",
							"Disable"
						]
					},
					"QuiescentMode": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "If <<true>>, when <<param|Enable>> is set to <<false>> in-progress sessions remain intact, but no new sessions are allowed. When all sessions are terminated, the <<object>> is disabled.",
						"datatype": "boolean"
					},
					"Status": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Indicates the status of this account. Unless noted otherwise, the <<param>> values apply to both registering and non-registering external SIP user agents.",
						"default": "Disabled",
						"datatype": "string",
						"enumerations": [
							"Up",
							"Initializing",
							"Registering",
							"Deregistering",
							"ErrorMisconfigured",
							"ErrorNetwork",
							"ErrorRegistration",
							"Quiescent",
							"Disabled"
						]
					},
					"Alias": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
						"datatype": "Alias",
						"range": [
							{
								"max": 64
							}
						]
					},
					"Origin": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Mechanism via which the <<object>> was created. Enumeration of: AutoConfigured, Static.",
						"default": "Static",
						"datatype": "string",
						"enumerations": [
							"AutoConfigured",
							"Static"
						]
					},
					"CallStatus": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Indicates the call status for this account.",
						"datatype": "string",
						"enumerations": [
							"Idle",
							"Dialing",
							"Delivered",
							"Connected",
							"Alerting",
							"Disconnected"
						]
					},
					"AuthUserName": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Username used to authenticate the connection to the registrar server. This parameter can only be modified if <<param|Origin>> is Static.",
						"datatype": "string",
						"range": [
							{
								"max": 128
							}
						]
					},
					"AuthPassword": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Password used to authenticate the connection to the registrar server. This parameter can only be modified if <<param|Origin>> is Static.",
						"datatype": "string",
						"range": [
							{
								"max": 128
							}
						]
					},
					"RegistrationStatus": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The current registration status of the externally connected SIP user agent. This parameter is valid only for SIP user agents that support registration.",
						"datatype": "string",
						"enumerations": [
							"Registered",
							"Unregistered"
						]
					},
					"URI": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The URI (AoR) of the externally connected SIP user agent. For SIP user agents that register, this is the URI that is contained in the To header field of the incoming REGISTER request. This parameter can only be modified if <<param|Origin>> is <<enum|Static|Origin>>.",
						"datatype": "string",
						"range": [
							{
								"max": 389
							}
						]
					},
					"Domain": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The domain name used when the SIP user agent has registered itself. This parameter can only be modified if <<param|Origin>> is <<enum|Static|Origin>>.",
						"datatype": "string",
						"range": [
							{
								"max": 256
							}
						]
					},
					"CodecList": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<list>> <<reference>> The CPE SHOULD use the first enabled item in the list among those supported by the remote endpoint and consistent with the available bandwidth.",
						"list": {
							"datatype": "string"
						}
					},
					"VoIPProfile": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Voice profile to use with this <<object>>. <<reference>>",
						"datatype": "string",
						"range": [
							{
								"max": 256
							}
						]
					},
					"ContactNumberOfEntries": {
						"type": "unsignedInt",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<numentries>>",
						"datatype": "unsignedInt"
					},
					"Device.Services.VoiceService.{i}.SIP.Registrar.{i}.Account.{i}.Contact.{i}.": {
						"type": "object",
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Active registrations for this SIP account.",
						"uniqueKeys": [
							"Alias"
						],
						"access": true,
						"array": true,
						"Enable": {
							"type": "boolean",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Enable or disable this entry.",
							"default": "false",
							"datatype": "boolean"
						},
						"Status": {
							"type": "string",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Indicates the status of this entry.",
							"default": "Disabled",
							"datatype": "string",
							"enumerations": [
								"Up",
								"Error",
								"Disabled"
							]
						},
						"Alias": {
							"type": "string",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
							"datatype": "Alias",
							"range": [
								{
									"max": 64
								}
							]
						},
						"Origin": {
							"type": "string",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Mechanism via which the <<object>> was assigned. Enumeration of: AutoConfigured, Static.",
							"default": "Static",
							"datatype": "string",
							"enumerations": [
								"AutoConfigured",
								"Static"
							]
						},
						"IPAddress": {
							"type": "string",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "IP Address of the externally connected SIP user agent. This is the IP address contained in the <<param|ContactURI>> parameter. This parameter can only be modified if <<param|Origin>> is <<enum|Static|Origin>>.",
							"datatype": "IPAddress",
							"range": [
								{
									"max": 45
								}
							]
						},
						"Port": {
							"type": "unsignedInt",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "The port of the externally connected SIP user agent. This is the port contained in the <<param|ContactURI>> parameter. This parameter can only be modified if <<param|Origin>> is <<enum|Static|Origin>>.",
							"datatype": "unsignedInt",
							"range": [
								{
									"min": 0,
									"max": 65535
								}
							]
						},
						"ContactURI": {
							"type": "string",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "This is the SIP signaling address of the externally connected SIP user agent. If the SIP user agent registers, then <<param>> is the Contact URI contained in the Contact header field of the REGISTER request received from the SIP user agent. If the SIP user agent does not register, then the <<param>> is provisioned by the ACS. This parameter can only be modified if <<param|Origin>> is <<enum|Static|Origin>>.",
							"datatype": "string",
							"range": [
								{
									"max": 256
								}
							]
						},
						"ExpireTime": {
							"type": "dateTime",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Time when this registration will expire. This parameter is valid only for external SIP user agents that register. If this registration never expires, this parameter SHOULD be set to the Unknown Time value.",
							"datatype": "dateTime"
						},
						"UserAgent": {
							"type": "string",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "This parameter defines the User-Agent header that will be used by the SIP messages send by this user agent. Implementers SHOULD make the User-Agent header field a configurable option.",
							"datatype": "string",
							"range": [
								{
									"max": 64
								}
							]
						}
					}
				}
			}
		},
		"Device.Services.VoiceService.{i}.MGCP.": {
			"type": "object",
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "This object is dedicated to MGCP as defined in <<bibref|RFC3435>>. It models MGCP clients and networks.",
			"access": false,
			"array": false,
			"ClientNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"NetworkNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"Device.Services.VoiceService.{i}.MGCP.Client.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "MGCP client table (a client as described in <<bibref|TR-104i2|Section 4.2>>). Each MGCP client maintains a registration for the MGCP identities of the associated line with the <<object|#.Network>>.",
				"uniqueKeys": [
					"Alias"
				],
				"access": true,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enable or disable this client.",
					"default": "false",
					"datatype": "boolean"
				},
				"QuiescentMode": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "If <<true>>, when <<param|Enable>> is set to <<false>> in-progress sessions remain intact, but no new sessions are allowed. When all sessions are terminated, the <<object>> is disabled.",
					"datatype": "boolean"
				},
				"Status": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the status of this client.",
					"default": "Disabled",
					"datatype": "string",
					"enumerations": [
						"Up",
						"Initializing",
						"Registering",
						"Deregistering",
						"Error_Misconfigured",
						"Error_Network",
						"Error_Registration",
						"Quiescent",
						"Disabled"
					]
				},
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"RegisterMode": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Register mode.",
					"default": "Wildcard",
					"datatype": "string",
					"enumerations": [
						"Wildcard",
						"Individual"
					]
				},
				"LocalPort": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Port listening for incoming call control signaling.",
					"default": "0",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 65535
						}
					]
				},
				"Domain": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "CPE domain string. If <<empty>>, the CPE SHOULD use its IP address.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"User": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "User string used in accessing the call agent.",
					"datatype": "string",
					"range": [
						{
							"max": 64
						}
					]
				},
				"Network": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "MGCP network with which this MGCP client is associated. <<reference>>",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"MaxSessions": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Limit on the number of simultaneous voice sessions across this <<object>>. This MUST be less than or equal to <<param|.Capabilities.MaxSessionCount>>. A value of zero indicates no explicit limit on the number of sessions.",
					"default": "0",
					"datatype": "unsignedInt"
				}
			},
			"Device.Services.VoiceService.{i}.MGCP.Network.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "This object models a MGCP network (a network as described in <<bibref|TR-104i2|Section 4.2>>).",
				"uniqueKeys": [
					"Alias"
				],
				"access": true,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enable or disable the <<object>>. Starts the DNS resolving when enabled.",
					"default": "false",
					"datatype": "boolean"
				},
				"QuiescentMode": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "If <<true>>, when <<param|Enable>> is set to <<false>> in-progress sessions remain intact, but no new sessions are allowed. When all sessions are terminated, the <<object>> is disabled.",
					"datatype": "boolean"
				},
				"Status": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the status of this <<object>>.",
					"default": "Disabled",
					"datatype": "string",
					"enumerations": [
						"Up",
						"Resolving",
						"Error_DNS",
						"Error_Other",
						"Disabled"
					]
				},
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"CallAgent1": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Host name or IP address of the main MGCP call agent.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"CallAgentPort1": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Destination port to be used in connecting with the main MGCP call agent.",
					"default": "0",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 65535
						}
					]
				},
				"CallAgent2": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Host name or IP address of the backup MGCP call agent.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"CallAgentPort2": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Destination port to be used in connecting with the backup MGCP call agent.",
					"default": "0",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 65535
						}
					]
				},
				"RetranIntervalTimer": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Message retransfer interval, in <<units>>.",
					"default": "1",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 65535
						}
					],
					"unit": "seconds"
				},
				"MaxRetranCount": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Max number of message retransfers.",
					"default": "10",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 65535
						}
					]
				},
				"DSCPMark": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Diffserv code point to be used for outgoing MGCP signaling packets.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 63
						}
					]
				},
				"VLANIDMark": {
					"type": "int",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "VLAN ID (as defined in <<bibref|802.1Q-2005>>) to be used for outgoing MGCP signaling packets for this network. A value of -1 indicates the default value is to be used. If either <<param>> or <<param|EthernetPriorityMark>> are greater than zero, then the outgoing frames MUST be tagged. Otherwise, the outgoing frames MAY be tagged or untagged.",
					"default": "-1",
					"datatype": "int",
					"range": [
						{
							"min": -1
						}
					]
				},
				"EthernetPriorityMark": {
					"type": "int",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Ethernet priority code (as defined in <<bibref|802.1D-2004>>) to be used for outgoing MGCP signaling packets for this network. A value of -1 indicates the default value is to be used. If either <<param|VLANIDMark>> or <<param>> are greater than zero, then the outgoing frames MUST be tagged. Otherwise, the outgoing frames MAY be tagged or untagged.",
					"default": "-1",
					"datatype": "int",
					"range": [
						{
							"min": -1
						}
					]
				},
				"AllowPiggybackEvents": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates whether or not piggyback events are allowed to the MGCP call agent.",
					"datatype": "boolean"
				},
				"SendRSIPImmediately": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates whether or not to send RSIP immediately on restart.",
					"datatype": "boolean"
				},
				"STUNEnable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enable or disable use of STUN to allow operation through NAT. Note: enabling STUN is to be interpreted as enabling the use of STUN for discovery, not use as a keep-alive mechanism.",
					"default": "false",
					"datatype": "boolean"
				},
				"STUNServer": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Domain name or IP address of the STUN server.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"NonVoiceBandwidthReservedUpstream": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "For bandwidth-based admission control, a session can proceed only if there is <<param>> <<units>> of upstream bandwidth left available for non-voice traffic. This parameter is appropriate only in implementations in which the actual bandwidth can be known, such as a VoIP device embedded in a DSL B-NT.",
					"default": "0",
					"datatype": "unsignedInt",
					"unit": "bits per second"
				},
				"NonVoiceBandwidthReservedDownstream": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "For bandwidth-based admission control, a session can proceed only if there is <<param>> <<units>> of downstream bandwidth left available for non-voice traffic. This parameter is appropriate only in implementations in which the actual bandwidth can be known, such as a VoIP device embedded in a DSL B-NT.",
					"default": "0",
					"datatype": "unsignedInt",
					"unit": "bits per second"
				},
				"MaxSessions": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Limit on the number of simultaneous voice sessions across all <<object|.MGCP.Client.>> referencing this <<object>>. This MUST be less than or equal to <<param|.Capabilities.MaxSessionCount>>. A value of zero indicates no explicit limit on the number of sessions.",
					"default": "0",
					"datatype": "unsignedInt"
				},
				"VoIPProfile": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "VoIP profile to use with this network. <<reference>>",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"CodecList": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<list>> <<reference>> The CPE SHOULD use the first enabled item in the list among those supported by the remote endpoint and consistent with the available bandwidth.",
					"list": {
						"datatype": "string"
					}
				}
			}
		},
		"Device.Services.VoiceService.{i}.H323.": {
			"type": "object",
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "This object is dedicated to H.323 as defined in <<bibref|H.323>>. It models H.323 clients and networks.",
			"access": false,
			"array": false,
			"ClientNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"NetworkNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"Device.Services.VoiceService.{i}.H323.Client.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "H.323 client table (a client as described in <<bibref|TR-104i2|Section 4.2>>). Each H.323 client maintains a registration for the H.323 identities of the associated line with the <<object|#.Network>>.",
				"uniqueKeys": [
					"Alias"
				],
				"access": true,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enable or disable this client.",
					"default": "false",
					"datatype": "boolean"
				},
				"QuiescentMode": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "If <<true>>, when <<param|Enable>> is set to <<false>> in-progress sessions remain intact, but no new sessions are allowed. When all sessions are terminated, the <<object>> is disabled.",
					"datatype": "boolean"
				},
				"Status": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the status of this client.",
					"default": "Disabled",
					"datatype": "string",
					"enumerations": [
						"Up",
						"Initializing",
						"Registering",
						"Deregistering",
						"Error_Misconfigured",
						"Error_Network",
						"Error_Registration",
						"Quiescent",
						"Disabled"
					]
				},
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"H235Authentication": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enables or disables usage of H.235 security baseline security profile as defined in <<bibref|H.235.1>>.",
					"default": "false",
					"datatype": "boolean"
				},
				"AuthPassword": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Password to be used when H.235 is enabled.",
					"datatype": "string"
				},
				"SendersID": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "In ITU-T based H.235 authentication, the sendersID is the ID of the gateway as received from the Gatekeeper. As long as the endpointID is not received from the Gatekeeper, the sendersID will be applied as configured here. The generalID is the GatekeeperID.",
					"datatype": "string"
				},
				"Network": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "H.323 network with which this H.323 client is associated. <<reference>>",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"H323ID": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The H.323 ID assigned to the client.",
					"datatype": "string",
					"range": [
						{
							"max": 32
						}
					]
				},
				"MaxSessions": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Limit on the number of simultaneous voice sessions across this <<object>>. This MUST be less than or equal to <<param|.Capabilities.MaxSessionCount>>. A value of zero indicates no explicit limit on the number of sessions.",
					"default": "0",
					"datatype": "unsignedInt"
				}
			},
			"Device.Services.VoiceService.{i}.H323.Network.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "This object models a H.323 network (a network as described in <<bibref|TR-104i2|Section 4.2>>).",
				"uniqueKeys": [
					"Alias"
				],
				"access": true,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enable or disable this <<object>>. Starts the DNS resolving when enabled.",
					"default": "false",
					"datatype": "boolean"
				},
				"QuiescentMode": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "If <<true>>, when <<param|Enable>> is set to <<false>> in-progress sessions remain intact, but no new sessions are allowed. When all sessions are terminated, the <<object>> is disabled.",
					"datatype": "boolean"
				},
				"Status": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the status of this network.",
					"default": "Disabled",
					"datatype": "string",
					"enumerations": [
						"Up",
						"Resolving",
						"Error_DNS",
						"Error_Other",
						"Disabled"
					]
				},
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"Gatekeeper": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Host name or IP address of H.323 Gatekeeper.",
					"datatype": "string"
				},
				"GatekeeperPort": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Destination port to be used in connecting to the H.323 Gatekeeper.",
					"default": "1719",
					"datatype": "unsignedInt"
				},
				"GatekeeperID": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Gatekeeper ID.",
					"datatype": "string"
				},
				"TimeToLive": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Defines the TimeToLive specification in the registration with the Gatekeeper in <<units>>.",
					"default": "86400",
					"datatype": "unsignedInt",
					"unit": "seconds"
				},
				"DSCPMark": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Diffserv code point to be used for outgoing H.323 signaling packets.",
					"default": "0",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 63
						}
					]
				},
				"VLANIDMark": {
					"type": "int",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "VLAN ID (as defined in <<bibref|802.1Q-2005>>) to be used for outgoing H.323 signaling packets for this network. A value of -1 indicates the default value is to be used. If either <<param>> or <<param|EthernetPriorityMark>> is greater than zero, then the outgoing frames MUST be tagged. Otherwise, the outgoing frames MAY be tagged or untagged.",
					"default": "-1",
					"datatype": "int",
					"range": [
						{
							"min": -1
						}
					]
				},
				"EthernetPriorityMark": {
					"type": "int",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Ethernet priority code (as defined in <<bibref|802.1D-2004>>) to be used for outgoing H.323 signaling packets for this network. A value of -1 indicates the default value is to be used. If either <<param|VLANIDMark>> or <<param>> is greater than zero, then the outgoing frames MUST be tagged. Otherwise, the outgoing frames MAY be tagged or untagged.",
					"default": "-1",
					"datatype": "int",
					"range": [
						{
							"min": -1
						}
					]
				},
				"STUNEnable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enable or disable use of STUN to allow operation through NAT. Note: enabling STUN is to be interpreted as enabling the use of STUN for discovery, not use as a keep-alive mechanism.",
					"default": "false",
					"datatype": "boolean"
				},
				"STUNServer": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Domain name or IP address of the STUN server.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"NonVoiceBandwidthReservedUpstream": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "For bandwidth-based admission control, a session can proceed only if there is <<param>> <<units>> of upstream bandwidth left available for non-voice traffic. This parameter is appropriate only in implementations in which the actual bandwidth can be known, such as a VoIP device embedded in a DSL B-NT.",
					"default": "0",
					"datatype": "unsignedInt",
					"unit": "bits per second"
				},
				"NonVoiceBandwidthReservedDownstream": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "For bandwidth-based admission control, a session can proceed only if there is <<param>> <<units>> of downstream bandwidth left available for non-voice traffic. This parameter is appropriate only in implementations in which the actual bandwidth can be known, such as a VoIP device embedded in a DSL B-NT.",
					"default": "0",
					"datatype": "unsignedInt",
					"unit": "bits per second"
				},
				"MaxSessions": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Limit on the number of simultaneous voice sessions across all <<object|.H323.Client.>> referencing this <<object>>. This MUST be less than or equal to <<param|.Capabilities.MaxSessionCount>>. A value of zero indicates no explicit limit on the number of sessions.",
					"default": "0",
					"datatype": "unsignedInt"
				},
				"VoIPProfile": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "VoIP profile to use with this network. <<reference>>",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"CodecList": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<list>> <<reference>> The CPE SHOULD use the first enabled item in the list among those supported by the remote endpoint and consistent with the available bandwidth.",
					"list": {
						"datatype": "string"
					}
				}
			}
		},
		"Device.Services.VoiceService.{i}.Trunk.{i}.": {
			"type": "object",
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "Trunk table. The <<object>> holds all parameters a CPE needs to set up a trunk connection with an NGN, as defined in <<bibref|ETSI_TS_181_019>>.",
			"uniqueKeys": [
				"Alias"
			],
			"access": true,
			"array": true,
			"Enable": {
				"type": "boolean",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Enables or disables this trunk.",
				"default": "false",
				"datatype": "boolean"
			},
			"QuiescentMode": {
				"type": "boolean",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "If <<true>>, when <<param|Enable>> is set to <<false>> in-progress sessions remain intact, but no new sessions are allowed. When all sessions are terminated, the <<object>> is disabled.",
				"datatype": "boolean"
			},
			"Status": {
				"type": "string",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Indicates the status of this trunk.",
				"default": "Disabled",
				"datatype": "string",
				"enumerations": [
					"Up",
					"Initializing",
					"Registering",
					"Unregistering",
					"Error",
					"Testing",
					"Disabled"
				]
			},
			"Alias": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
				"datatype": "Alias",
				"range": [
					{
						"max": 64
					}
				]
			},
			"Origin": {
				"type": "string",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Mechanism via which the <<object>> was assigned. Enumeration of: AutoConfigured, Static.",
				"default": "Static",
				"datatype": "string",
				"enumerations": [
					"AutoConfigured",
					"Static"
				]
			},
			"Name": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Name of the trunk.",
				"datatype": "string",
				"range": [
					{
						"max": 16
					}
				]
			},
			"DDIRange": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<list>> Each range consists of a Start part consisting of 1 to n digits (string representation) followed by an OPTIONAL End part consisting of 1 to n digits prefixed by a - symbol. Examples: :0123456789 :0123456700-0123456720 Each time this value is changed, the table of Lines managed by the <<object|.Trunk>> is automatically adapted and each value of the <<param>> MUST be represented in corresponding <<param|.CallControl.Line.<i>.DirectoryNumber>> parameter. If this trunk has a <<object|.SIP.Client.>> provider and <<param|.SIP.Client.<i>.E164Format>> is set to <<true>>, full E.164 numbers with country code (but without + prefix) MUST be used. This parameter can only be modified if <<param|Origin>> is <<enum|Static|Origin>>.",
				"list": {
					"datatype": "string"
				}
			},
			"LineObjectCreation": {
				"type": "boolean",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "When <<true>>, a <<object|.CallControl.Line.<i>.>> instance SHOULD be created automatically for each identity within the ranges specified by <<param|DDIRange>>.",
				"datatype": "boolean"
			},
			"MaxChannels": {
				"type": "unsignedInt",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Defines the maximum number of simultaneous communication channels handled by this trunk. A channel is used to convey an information signal, for example a digital bit stream, from one or several senders to one or several receivers.",
				"datatype": "unsignedInt"
			},
			"MaxOutboundChannelCount": {
				"type": "int",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Maximal number of simultaneous communication channels in outbound direction supported across this trunk. The maximum number cannot exceed <<param|MaxChannels>> - <<param|MaxInboundChannelCount>>. A value n>0 means, that there are no more than n channels allowed, which are used by outbound calls. A value of -1 means that there are no restrictions in this direction.",
				"default": "-1",
				"datatype": "int",
				"range": [
					{
						"min": -1
					}
				]
			},
			"MaxInboundChannelCount": {
				"type": "int",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Maximal number of simultaneous communication channels in inbound direction supported across this trunk. The maximum number cannot exceed <<param|MaxChannels>> - <<param|MaxOutboundChannelCount>>. A value n>0 means, that there are no more than n channels allowed, which are used by inbound calls. A value of -1 means that there are no restrictions in this direction.",
				"default": "-1",
				"datatype": "int",
				"range": [
					{
						"min": -1
					}
				]
			},
			"CodecPriority": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "The <<param>> option controls which end of an inbound call leg will have priority over the negotiation of codecs.",
				"datatype": "string",
				"enumerations": [
					"Local",
					"Remote"
				]
			},
			"Provider": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "SIP client or ISDN interface associated with the identities represented by this trunk. <<reference>> This parameter can only be modified if <<param|Origin>> is <<enum|Static|Origin>>.",
				"datatype": "string",
				"range": [
					{
						"max": 256
					}
				]
			}
		},
		"Device.Services.VoiceService.{i}.CallControl.": {
			"type": "object",
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "Call control and call routing parameters. This object is a control plane application for the VoiceService that provides numbers or names based routing, local PBX functionalities and advanced telephony features. It is mutually exclusive with the <<object|.Interwork>> table which is used in case of switching capabilities.",
			"access": false,
			"array": false,
			"MaxNumberOfLines": {
				"type": "unsignedInt",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Maximum number of <<object|Line.<i>.>> in <<object>>. This value cannot be greater than <<param|.Capabilities.MaxLineCount>>.",
				"datatype": "unsignedInt"
			},
			"MaxNumberOfExtensions": {
				"type": "unsignedInt",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Maximum number of <<object|Extension.<i>.>> in <<object>>. This value cannot be greater than <<param|.Capabilities.MaxExtensionCount>>.",
				"datatype": "unsignedInt"
			},
			"LineNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"ExtensionNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"MailboxNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"IncomingMapNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"OutgoingMapNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"NumberingPlanNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"GroupNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"Device.Services.VoiceService.{i}.CallControl.Line.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Voice line table. Support for adding and removing lines is conditional on whether the CPE supports more than one line in total as indicated by <<param|.Capabilities.MaxLineCount>>.",
				"uniqueKeys": [
					"DirectoryNumber",
					"Alias"
				],
				"access": true,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enable or disable this line.",
					"default": "false",
					"datatype": "boolean"
				},
				"QuiescentMode": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "If <<true>>, when <<param|Enable>> is set to <<false>> in-progress sessions remain intact, but no new sessions are allowed. When all sessions are terminated, the <<object>> is disabled.",
					"datatype": "boolean"
				},
				"Status": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the status of this line.",
					"default": "Disabled",
					"datatype": "string",
					"enumerations": [
						"Up",
						"Error",
						"Testing",
						"Quiescent",
						"Disabled"
					]
				},
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"CallStatus": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the call status for this line.",
					"datatype": "string",
					"enumerations": [
						"Idle",
						"Dialing",
						"Delivered",
						"Connected",
						"Alerting",
						"Disconnected"
					]
				},
				"Origin": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Mechanism via which the <<object>> instance was created.",
					"datatype": "string",
					"enumerations": [
						"Static",
						"DDIRange"
					]
				},
				"DirectoryNumber": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Directory number associated with this line.",
					"datatype": "string",
					"range": [
						{
							"max": 32
						}
					]
				},
				"Provider": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Provider for the line. The value MUST be the path name of a row in one of the following tables: <<reference>>",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"CallingFeatures": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Set of calling features to apply to this line. <<reference>>",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"Device.Services.VoiceService.{i}.CallControl.Line.{i}.Stats.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Statistics for this <<object|#>> instance. The CPE MUST reset the lines Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the line becomes operationally down due to a previous administrative down (i.e. the lines <<param|#.Status>> parameter transitions to a down state after the line is disabled) or when the line becomes administratively up (i.e. the lines <<param|#.Enable>> parameter transitions from <<false>> to <<true>>).",
					"access": false,
					"array": false,
					"Device.Services.VoiceService.{i}.CallControl.Line.{i}.Stats.IncomingCalls.": {
						"type": "object",
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Statistics for incoming calls.",
						"access": false,
						"array": false,
						"CallsReceived": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of received calls to the line.",
							"datatype": "unsignedInt"
						},
						"CallsConnected": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of calls that successfully completed call setup signaling.",
							"datatype": "unsignedInt"
						},
						"CallsFailed": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of calls that failed to successfully complete call setup signaling.",
							"datatype": "unsignedInt"
						},
						"CallsDropped": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total calls that were successfully connected, but dropped unexpectedly while in progress without explicit user termination.",
							"datatype": "unsignedInt"
						},
						"TotalCallTime": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Cumulative call duration in <<units>>.",
							"datatype": "unsignedInt",
							"unit": "seconds"
						}
					},
					"Device.Services.VoiceService.{i}.CallControl.Line.{i}.Stats.OutgoingCalls.": {
						"type": "object",
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Statistics for outgoing calls.",
						"access": false,
						"array": false,
						"CallsAttempted": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of outgoing calls attempted from the line.",
							"datatype": "unsignedInt"
						},
						"CallsConnected": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of calls that successfully completed call setup signaling.",
							"datatype": "unsignedInt"
						},
						"CallsFailed": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of calls that failed to successfully complete call setup signaling.",
							"datatype": "unsignedInt"
						},
						"CallsDropped": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total calls that were successfully connected, but dropped unexpectedly while in progress without explicit user termination.",
							"datatype": "unsignedInt"
						},
						"TotalCallTime": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Cumulative call duration in <<units>>.",
							"datatype": "unsignedInt",
							"unit": "seconds"
						}
					},
					"Device.Services.VoiceService.{i}.CallControl.Line.{i}.Stats.RTP.": {
						"type": "object",
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "RTP statistic parameters.",
						"access": false,
						"array": false,
						"PacketsReceived": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of RTP packets received.",
							"datatype": "unsignedInt"
						},
						"PacketsSent": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of RTP packets sent.",
							"datatype": "unsignedInt"
						},
						"PacketsLost": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of RTP packets that have been lost.",
							"datatype": "unsignedInt"
						},
						"BytesSent": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of bytes sent.",
							"datatype": "unsignedInt"
						},
						"BytesReceived": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of bytes received.",
							"datatype": "unsignedInt"
						}
					},
					"Device.Services.VoiceService.{i}.CallControl.Line.{i}.Stats.DSP.": {
						"type": "object",
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "DSP statistic parameters.",
						"access": false,
						"array": false,
						"Overruns": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of times the receive jitter buffer has overrun.",
							"datatype": "unsignedInt"
						},
						"Underruns": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of times the receive jitter buffer has underrun.",
							"datatype": "unsignedInt"
						}
					}
				}
			},
			"Device.Services.VoiceService.{i}.CallControl.Extension.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Extension table containing the local numbers and names. Support for adding and removing extensions is conditional on whether the CPE supports more than one line in total as indicated by <<param|.Capabilities.MaxExtensionCount>>.",
				"uniqueKeys": [
					"ExtensionNumber",
					"Alias"
				],
				"access": true,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enable or disable this extension.",
					"default": "false",
					"datatype": "boolean"
				},
				"QuiescentMode": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "If <<true>>, when <<param|Enable>> is set to <<false>> in-progress sessions remain intact, but no new sessions are allowed. When all sessions are terminated, the <<object>> is disabled.",
					"datatype": "boolean"
				},
				"Status": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the status of this extension.",
					"default": "Disabled",
					"datatype": "string",
					"enumerations": [
						"Up",
						"Initializing",
						"Error",
						"Testing",
						"Quiescent",
						"Disabled"
					]
				},
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"CallStatus": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the call status for this extension.",
					"datatype": "string",
					"enumerations": [
						"Idle",
						"Dialing",
						"Delivered",
						"Connected",
						"Alerting",
						"Disconnected"
					]
				},
				"Origin": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Mechanism via which the <<object>> object was assigned. Enumeration of: AutoConfigured, Static.",
					"default": "Static",
					"datatype": "string",
					"enumerations": [
						"AutoConfigured",
						"Static"
					]
				},
				"Name": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The name of this extension. This name will also be used for CallerIdName functionality and for displaying on screen of handset, etc...",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"ExtensionNumber": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The number assigned to this extension for internal calls.",
					"datatype": "string",
					"range": [
						{
							"max": 32
						}
					]
				},
				"Provider": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Provider for the extension. The value MUST be the path name of a row in one of the following tables: <<reference>>",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"NumberingPlan": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Numbering plan to be used for outgoing calls. <<reference>>",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"CallingFeatures": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Set of calling features to apply to this extension. <<reference>>",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"CallWaitingStatus": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Status of endpoint managed call waiting, if supported. Enumeration of: Disabled, Idle, SecondaryRinging, SecondaryConnecting, SecondaryConnected. This parameter SHOULD NOT be present if the CPE does not support endpoint managed call waiting.",
					"datatype": "string",
					"enumerations": [
						"Disabled",
						"Idle",
						"SecondaryRinging",
						"SecondaryConnecting",
						"SecondaryConnected"
					]
				},
				"ConferenceCallingStatus": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Status of endpoint managed conference calling, if supported. Enumeration of: Disabled, Idle, SecondaryCalling, SecondaryConnecting, SecondaryConnected, InConferenceCall. This parameter SHOULD NOT be present if the CPE does not support endpoint managed conference calling.",
					"datatype": "string",
					"enumerations": [
						"Disabled",
						"Idle",
						"SecondaryCalling",
						"SecondaryConnecting",
						"SecondaryConnected",
						"InConferenceCall"
					]
				},
				"ConferenceCallingSessionCount": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Number of active sessions on this extension. : 0 indicates no call is in progress. : 1 indicates a single call is in progress. : Higher values indicate a conference call is in progress. This parameter SHOULD NOT be present if the CPE does not support endpoint managed conference calling.",
					"datatype": "unsignedInt"
				},
				"VoiceMail": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Voice mail to use when the <<object>> is not responding. <<reference>>",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"Device.Services.VoiceService.{i}.CallControl.Extension.{i}.Stats.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Statistics for this extension. The CPE MUST reset the extensions Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the extension becomes operationally down due to a previous administrative down (i.e. the extensions <<param|#.Status>> parameter transitions to a down state after the extension is disabled) or when the extension becomes administratively up (i.e. the extensions <<param|#.Enable>> parameter transitions from <<false>> to <<true>>).",
					"access": false,
					"array": false,
					"Device.Services.VoiceService.{i}.CallControl.Extension.{i}.Stats.IncomingCalls.": {
						"type": "object",
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Statistics for incoming calls.",
						"access": false,
						"array": false,
						"CallsReceived": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of received calls to the extension.",
							"datatype": "unsignedInt"
						},
						"CallsConnected": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of calls that successfully completed call setup signaling.",
							"datatype": "unsignedInt"
						},
						"CallsFailed": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of calls that failed to successfully complete call setup signaling.",
							"datatype": "unsignedInt"
						},
						"CallsDropped": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total calls that were successfully connected, but dropped unexpectedly while in progress without explicit user termination.",
							"datatype": "unsignedInt"
						},
						"TotalCallTime": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Cumulative call duration in <<units>>.",
							"datatype": "unsignedInt",
							"unit": "seconds"
						}
					},
					"Device.Services.VoiceService.{i}.CallControl.Extension.{i}.Stats.OutgoingCalls.": {
						"type": "object",
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Statistics for outgoing calls.",
						"access": false,
						"array": false,
						"CallsAttempted": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of outgoing calls attempted from the extension.",
							"datatype": "unsignedInt"
						},
						"CallsConnected": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of calls that successfully completed call setup signaling.",
							"datatype": "unsignedInt"
						},
						"CallsFailed": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of calls that failed to successfully complete call setup signaling.",
							"datatype": "unsignedInt"
						},
						"CallsDropped": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total calls that were successfully connected, but dropped unexpectedly while in progress without explicit user termination.",
							"datatype": "unsignedInt"
						},
						"TotalCallTime": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Cumulative call duration in <<units>>.",
							"datatype": "unsignedInt",
							"unit": "seconds"
						}
					},
					"Device.Services.VoiceService.{i}.CallControl.Extension.{i}.Stats.RTP.": {
						"type": "object",
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "RTP statistic parameters.",
						"access": false,
						"array": false,
						"PacketsReceived": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of RTP packets received.",
							"datatype": "unsignedInt"
						},
						"PacketsSent": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of RTP packets sent.",
							"datatype": "unsignedInt"
						},
						"PacketsLost": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of RTP packets that have been lost.",
							"datatype": "unsignedInt"
						},
						"BytesSent": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of bytes sent.",
							"datatype": "unsignedInt"
						},
						"BytesReceived": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of bytes received.",
							"datatype": "unsignedInt"
						}
					},
					"Device.Services.VoiceService.{i}.CallControl.Extension.{i}.Stats.DSP.": {
						"type": "object",
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "DSP statistic parameters.",
						"access": false,
						"array": false,
						"Overruns": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of times the receive jitter buffer has overrun.",
							"datatype": "unsignedInt"
						},
						"Underruns": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of times the receive jitter buffer has underrun.",
							"datatype": "unsignedInt"
						}
					}
				}
			},
			"Device.Services.VoiceService.{i}.CallControl.Group.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "This object models an extension as a group of extensions.",
				"uniqueKeys": [
					"Alias"
				],
				"access": true,
				"array": true,
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"Extensions": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<list>> If this parameter is null the group is treated as a group that contains all extensions. <<reference>>",
					"list": {
						"datatype": "string"
					}
				},
				"RingType": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Defines the way of ringing for the extensions in this group. Enumeration of: Simultaneous, Hierarchical, Cyclic.",
					"datatype": "string",
					"enumerations": [
						"Simultaneous",
						"Hierarchical",
						"Cyclic"
					]
				},
				"RingTimeout": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The time (in <<units>>) to wait for extension reply before trying the next extension. Only applicable if <<param|RingType>> = <<enum|Hierarchical|RingType>> or <<enum|Cyclic|RingType>>.",
					"datatype": "unsignedInt",
					"unit": "seconds"
				}
			},
			"Device.Services.VoiceService.{i}.CallControl.Mailbox.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Voice mail configuration related to a particular extension.",
				"uniqueKeys": [
					"Alias"
				],
				"access": true,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enables or disables this entry.",
					"default": "false",
					"datatype": "boolean"
				},
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"MaxMsg": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "This limits the number of messages in a voicemail folder.",
					"datatype": "unsignedInt"
				},
				"MaxMessageTime": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Defines the maximum amount of time in <<units>> of an incoming message. Use this when there are many users and disk space is limited. A value of 0 means there will be no maximum time limit enforced.",
					"datatype": "unsignedInt",
					"unit": "seconds"
				},
				"MinSize": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Minimal size in <<units>> of the voicemail box.",
					"datatype": "unsignedInt",
					"unit": "seconds"
				},
				"SMTPServerAddress": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "SMTP server FQDN or IP Address used for voicemail notifications.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"SMTPServerPort": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "SMTP server port for voicemail notifications.",
					"default": "25",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 65535
						}
					]
				},
				"SMTPUser": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "SMTP user name.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"SMTPPassword": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "SMTP password.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"SMTPAuthenticationType": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Type of authentication used to connect to the SMTP server.",
					"default": "None",
					"datatype": "string",
					"enumerations": [
						"None",
						"SSL",
						"TLS",
						"Auto"
					]
				},
				"SMTPFrom": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Senders email address.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				}
			},
			"Device.Services.VoiceService.{i}.CallControl.IncomingMap.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "The <<object>> is a table that is used to control which extensions ring when an incoming call is received. The map approach separates the call routing aspects from the configuration of the lines and extensions. It support PBX concepts such as DDI (one extension per line) and groups (parallel dialing if extensions have same priority and hunting when extensions have different priority).",
				"uniqueKeys": [
					"Line",
					"Extension",
					"Alias"
				],
				"access": true,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enables or disables this entry.",
					"default": "false",
					"datatype": "boolean"
				},
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"Line": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<object|#.Line>> used by the call. <<reference>>",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"Extension": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<object|#.Extension>> that rings on incoming call. <<reference>>",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"Order": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the order in which extensions ring. First all extensions with the lowest order value will ring. When all these extensions have rejected the call or did not reply, the next order value will be attempted.",
					"default": "1",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1
						}
					]
				},
				"Timeout": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The time in <<units>> the extension will ring before it is considered that there was no reply.",
					"datatype": "unsignedInt",
					"unit": "seconds"
				}
			},
			"Device.Services.VoiceService.{i}.CallControl.OutgoingMap.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "The <<object>> is a table that is used to control which line is used when an extension makes a call.",
				"uniqueKeys": [
					"Extension",
					"Line",
					"Alias"
				],
				"access": true,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enables or disables this entry.",
					"default": "false",
					"datatype": "boolean"
				},
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"CLIPNoScreeningNumber": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Public number to be presented outgoing calls, instead of the effective extension number.",
					"datatype": "string",
					"range": [
						{
							"max": 32
						}
					]
				},
				"Extension": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<object|#.Extension>> which makes the outgoing call. <<reference>>",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"Line": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Identifies the <<object|#.Line>> to be used for outgoing calls. When applicable in the signaling protocol the DirectoryNumber will be used as source number for this call. Note: The Line to be used for an outgoing call can be overridden by the <<object|#.NumberingPlan>>. <<reference>>",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"Order": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The order in which using the lines is attempted. This is used to implement a backup mechanism. If the first line is not available, using the next one will be attempted.",
					"default": "1",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1
						}
					]
				}
			},
			"Device.Services.VoiceService.{i}.CallControl.NumberingPlan.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Information related the numbering plan. <<object>> is applicable only if the device supports a dialing mechanism for which a number plan is needed (for example, some devices with an explicit Dial button do not need to be aware of the dialing plan) and if the device does not already support a numbering plan mechanism for this call control (e.g., in-band via MGCP).",
				"uniqueKeys": [
					"Alias"
				],
				"access": true,
				"array": true,
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"MinimumNumberOfDigits": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "This is the minimum number of digits to be collected before an outgoing request (e.g., a SIP INVITE) can be initiated. If End of Dialing (as defined in <<param|InterDigitTimerStd>>) occurs before the minimum number of digits has been reached then the number will be considered incomplete and no request will be initiated. In practice, searching <<object|.CallControl.NumberingPlan.<i>.PrefixInfo.<i>.>> commences only once <<param>> digits has been received.",
					"default": "1",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1,
							"max": 32
						}
					]
				},
				"MaximumNumberOfDigits": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "When this number of digits has been collected, an outgoing request (e.g., a SIP INVITE) MUST be initiated. Any additional dialed digits will be ignored. This parameter is only used in the case that no match in <<object|.CallControl.NumberingPlan.<i>.PrefixInfo.<i>.>> has been found.",
					"default": "15",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1,
							"max": 32
						}
					]
				},
				"InterDigitTimerStd": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "This timer is the maximum allowable time (expressed in <<units>>) between the dialing of digits. This timer is restarted every time a digit is dialed. Expiration of this timer indicates End of Dialing.",
					"default": "15000",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1,
							"max": 50000
						}
					],
					"unit": "milliseconds"
				},
				"InterDigitTimerOpen": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "This timer is the maximum allowable time (expressed in <<units>>) between the dialing of digits once the minimum number of digits defined on a prefix based has been reached. This timer is only applicable to open numbering, where the exact number of digits for a prefix is not known.",
					"default": "3000",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1,
							"max": 50000
						}
					],
					"unit": "milliseconds"
				},
				"TerminationDigit": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Digit that can be used by the subscriber to indicate that dialing has completed.",
					"default": "#",
					"datatype": "string",
					"range": [
						{
							"max": 1
						}
					]
				},
				"InvalidNumberTone": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The tone that tells the user when the number dialed is determined to be invalid. <<reference>>",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"PrefixInfoMaxEntries": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "This is the maximum number of instances of <<object|.CallControl.NumberingPlan.<i>.PrefixInfo.<i>.>> that can be supported.",
					"datatype": "unsignedInt"
				},
				"PrefixInfoNumberOfEntries": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the number of instances of <<object|.CallControl.NumberingPlan.<i>.PrefixInfo.<i>.>>.",
					"datatype": "unsignedInt"
				},
				"Device.Services.VoiceService.{i}.CallControl.NumberingPlan.{i}.PrefixInfo.{i}.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Each entry in this table contains information related to an individual prefix in the NumberingPlan. It is anticipated that once the minimum number of digits has been received, the VoIP device will search this prefix list every time a new digit is received. If no new entry is found, then the object that was previously found will be used instead. If supported, <<param|.CallControl.NumberingPlan.<i>.PrefixInfoMaxEntries>> and <<param|.CallControl.NumberingPlan.<i>.PrefixInfoNumberOfEntries>> MUST be present. The defaults given for this object apply only to explicit creation of an instance of this object and not to automatic creation of instances of this object due to creation of a parent object.",
					"uniqueKeys": [
						"Alias"
					],
					"access": true,
					"array": true,
					"Alias": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
						"datatype": "Alias",
						"range": [
							{
								"max": 64
							}
						]
					},
					"Enable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enables or disables this entry.",
						"default": "false",
						"datatype": "boolean"
					},
					"PrefixRange": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "This is a string representation of a range of prefixes. Each prefix consists of a From part consisting of 1 to n digits (string representation) followed by an OPTIONAL To part consisting of exactly one digit prefixed by a - symbol. All characters in the From and To parts of the prefix range MUST be 0-9, * or #. A further constraint is that the To digit MUST always be numerically greater than the last digit of the From part. Examples: : 02 : 031-5 : 032 : 0325 : *#34 : #22",
						"datatype": "string",
						"range": [
							{
								"max": 42
							}
						]
					},
					"PrefixMinNumberOfDigits": {
						"type": "unsignedInt",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "This is the minimum number of allowable digits for the prefix range. Once the minimum number of digits has been reached, <<param|#.InterDigitTimerOpen>> will be used instead of <<param|#.InterDigitTimerStd>>. If the minimum number of digits has been reached and the inter-digit timer expires, an outgoing request is initiated.",
						"default": "1",
						"datatype": "unsignedInt",
						"range": [
							{
								"min": 1,
								"max": 40
							}
						]
					},
					"PrefixMaxNumberOfDigits": {
						"type": "unsignedInt",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "This is the maximum number of allowable digits for the prefix range. Once the number of digits received reaches this value an outgoing request is initiated.",
						"default": "1",
						"datatype": "unsignedInt",
						"range": [
							{
								"min": 1,
								"max": 40
							}
						]
					},
					"NumberOfDigitsToRemove": {
						"type": "unsignedInt",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "If this parameter has a non-zero value, the specified number of digits will be removed from the internal digit buffer (which contains the dialed digits) from the position specified by <<param|PosOfDigitsToRemove>>. Subsequently a search of <<object>> for a matching prefix using the modified number is performed. Note that this parameter does not have any impact on the number sent in the outgoing request: it is used only for searching within the Numbering Plan. This parameter has no effect if it is set to 0. This parameter is provided to handle Carrier override and other codes used as prefix to standard numbers and to ensure that the correct End of Dialing can be specified without significant data duplication.",
						"default": "0",
						"datatype": "unsignedInt",
						"range": [
							{
								"min": 0,
								"max": 40
							}
						]
					},
					"PosOfDigitsToRemove": {
						"type": "unsignedInt",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "This parameter is used in conjunction with <<param|NumberOfDigitsToRemove>>. It specifies the position within the internal digit buffer from which the digits are to be removed.",
						"default": "0",
						"datatype": "unsignedInt",
						"range": [
							{
								"min": 0,
								"max": 40
							}
						]
					},
					"DialTone": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The tone to be played by the VoIP device when the user has dialed exactly the same digits as defined in the prefix. The VoIP device will cease playing the tone once an additional digit has been dialed. <<reference>>",
						"datatype": "string",
						"range": [
							{
								"max": 256
							}
						]
					},
					"FacilityAction": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "This is a string representing a Facility Action implemented by the VoIP device. The parameter MAY instead indicate a vendor-specific Facility Action, which MUST use the format defined in <<bibref|TR-106>>. When <<empty>> or the value is an unrecognized string (i.e. a Facility Action not supported by the CPE) normal outgoing requests are made.",
						"datatype": "string",
						"range": [
							{
								"max": 64
							}
						]
					},
					"FacilityActionArgument": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Optional argument associated with <<param|FacilityAction>>. The interpretation of the argument is dependent on a specific value of <<param|FacilityAction>>. <<reference>>",
						"datatype": "string",
						"range": [
							{
								"max": 256
							}
						]
					}
				}
			},
			"Device.Services.VoiceService.{i}.CallControl.CallingFeatures.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "This object models the calling features that can be apply on <<object|.CallControl.Line>> or <<object|.CallControl.Extension>>.",
				"access": false,
				"array": false,
				"SetNumberOfEntries": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<numentries>>",
					"datatype": "unsignedInt"
				},
				"Device.Services.VoiceService.{i}.CallControl.CallingFeatures.Set.{i}.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "This object models a set of calling features that can be applied in <<object|.CallControl.Line.>> or <<object|.CallControl.Extension.>> objects.",
					"uniqueKeys": [
						"Alias"
					],
					"access": true,
					"array": true,
					"Alias": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
						"datatype": "Alias",
						"range": [
							{
								"max": 64
							}
						]
					},
					"CallerIDEnable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enable or disable the transmission of caller ID information on incoming calls (CLIP).",
						"datatype": "boolean"
					},
					"CallerIDNameEnable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enable or disable the transmission of caller ID name information on incoming calls (CNIP).",
						"datatype": "boolean"
					},
					"CallWaitingEnable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enables or disables call waiting in the Endpoint. This parameter SHOULD NOT be present if the CPE does not support Endpoint managed call waiting.",
						"datatype": "boolean"
					},
					"CallForwardUnconditionalEnable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enables or disables unconditional call forwarding by the endpoint. This parameter SHOULD NOT be present if the CPE does not support Endpoint based call forwarding.",
						"datatype": "boolean"
					},
					"CallForwardUnconditionalNumber": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Directory number to which all incoming calls to this line are forwarded when <<param|CallForwardUnconditionalEnable>> is <<true>>. This parameter SHOULD NOT be present if the CPE does not support Endpoint based call forwarding",
						"datatype": "string",
						"range": [
							{
								"max": 32
							}
						]
					},
					"CallForwardOnBusyEnable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enables or disables call forwarding-on-busy by the Endpoint. This parameter SHOULD NOT be present if the CPE does not support Endpoint based call forwarding.",
						"datatype": "boolean"
					},
					"CallForwardOnBusyNumber": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Directory number to which all incoming calls to this line are forwarded when <<param|CallForwardOnBusyEnable>> is <<true>> and the line is busy. This parameter SHOULD NOT be present if the CPE does not support Endpoint based call forwarding.",
						"datatype": "string",
						"range": [
							{
								"max": 32
							}
						]
					},
					"CallForwardOnBusyRingTimeout": {
						"type": "unsignedInt",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Delay in <<units>> before considering there is no answer for call forwarding-on-busy. This parameter SHOULD NOT be present if the CPE does not support Endpoint based call forwarding.",
						"datatype": "unsignedInt",
						"unit": "seconds"
					},
					"CallForwardOnNoAnswerEnable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enables or disables call forwarding-on-no-answer by the Endpoint. This parameter SHOULD NOT be present if the CPE does not support Endpoint based call forwarding.",
						"datatype": "boolean"
					},
					"CallForwardOnNoAnswerNumber": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Directory number to which all incoming calls to this line are forwarded when <<param|CallForwardOnNoAnswerEnable>> is <<true>> and there is no local answer. This parameter SHOULD NOT be present if the CPE does not support Endpoint based call forwarding.",
						"datatype": "string",
						"range": [
							{
								"max": 32
							}
						]
					},
					"CallForwardOnNoAnswerRingTimeout": {
						"type": "unsignedInt",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Delay in <<units>> before considering there is no answer for call forwarding-on-no-answer. This parameter SHOULD NOT be present if the CPE does not support Endpoint based call forwarding.",
						"datatype": "unsignedInt",
						"unit": "seconds"
					},
					"CallTransferEnable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enables or disables call transfer by the Endpoint. This parameter SHOULD NOT be present if the CPE does not support Endpoint based call transfer.",
						"datatype": "boolean"
					},
					"MWIEnable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enables or disables Message Waiting Indication by the Endpoint. This parameter SHOULD NOT be present if the CPE does not support MWI.",
						"datatype": "boolean"
					},
					"VMWIEnable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enables or disables Visual Message Waiting Indication.",
						"datatype": "boolean"
					},
					"LineMessagesWaiting": {
						"type": "unsignedInt",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Indicates the number of messages which are currently waiting on this line as known by the CPE. This parameter SHOULD NOT be present if the CPE does not support MWI.",
						"datatype": "unsignedInt"
					},
					"AnonymousCallRejectionEnable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enable or disable Anonymous Call Block capability in the endpoint (ACR). This parameter SHOULD NOT be present if the CPE does not support endpoint based Anonymous Call Block capability.",
						"datatype": "boolean"
					},
					"AnonymousCallEnable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enable or disable Anonymous Call capability in the endpoint (CLIR). This parameter SHOULD NOT be present if the CPE does not support endpoint based Anonymous Call capability.",
						"datatype": "boolean"
					},
					"DoNotDisturbEnable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enable or disable Do Not Disturb capability in the Endpoint. When enabled, all calls are forwarded to voice mail. This parameter SHOULD NOT be present if the CPE does not support Endpoint based Do Not Disturb capability.",
						"datatype": "boolean"
					},
					"RepeatDialEnable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enable or disable Repeat Dial capability in the Endpoint. This parameter SHOULD NOT be present if the CPE does not support Endpoint based Repeat Dial capability.",
						"datatype": "boolean"
					},
					"VoiceMailEnable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enable or disable Voice Mail capability in the Endpoint. This parameter SHOULD NOT be present if the CPE does not support Endpoint based Voice Mail capability.",
						"datatype": "boolean"
					},
					"CallPickUpEnable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enable or disable Call Interception capability in the Endpoint.",
						"datatype": "boolean"
					},
					"CCBSEnable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enable or disable automatic recall on busy (Completion of Calls to Busy Subscriber) capability in the Endpoint.",
						"datatype": "boolean"
					},
					"IIFCEnable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enable or disable successive forwarding (Inhibition of Incoming Forwarded Calls) from the Endpoint.",
						"datatype": "boolean"
					},
					"BlockForwardEnable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Allow or block any internal forward to the Endpoint.",
						"datatype": "boolean"
					},
					"SecretForwarderEnable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enable or disable secret identity of this Endpoint in case it initiates (on an external incoming call) a forward to another internal phone Endpoint. If enabled, only the remote caller party can be identified (if not anonymous), not this intermediate via phone extension.",
						"datatype": "boolean"
					},
					"FollowMeEnable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enable or disable FollowMe capability in the Endpoint.",
						"datatype": "boolean"
					},
					"CFTNumberOfEntries": {
						"type": "unsignedInt",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<numentries>>",
						"datatype": "unsignedInt"
					},
					"SCFNumberOfEntries": {
						"type": "unsignedInt",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<numentries>>",
						"datatype": "unsignedInt"
					},
					"SCREJNumberOfEntries": {
						"type": "unsignedInt",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<numentries>>",
						"datatype": "unsignedInt"
					},
					"FollowMeNumberOfEntries": {
						"type": "unsignedInt",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<numentries>>",
						"datatype": "unsignedInt"
					},
					"Device.Services.VoiceService.{i}.CallControl.CallingFeatures.Set.{i}.CFT.{i}.": {
						"type": "object",
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "This object defines a Call Forwarding Timed (CFT) that permit the user to forward calls to particular destinations depending on the time of day. Note: a bad configuration (e.g. timeslots overlapping) could cause unexpected behavior.",
						"uniqueKeys": [
							"Alias"
						],
						"access": true,
						"array": true,
						"Enable": {
							"type": "boolean",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Whether this schedule is currently enabled.",
							"datatype": "boolean"
						},
						"Alias": {
							"type": "string",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
							"datatype": "Alias",
							"range": [
								{
									"max": 64
								}
							]
						},
						"Day": {
							"type": "string",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Day where the schedule active.",
							"datatype": "string",
							"enumerations": [
								"Monday",
								"Tuesday",
								"Wednesday",
								"Thursday",
								"Friday",
								"Saturday",
								"Sunday",
								"All"
							]
						},
						"StartTime": {
							"type": "string",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Start time of the schedule in the form : hh:mm.",
							"datatype": "string",
							"range": [
								{
									"max": 5
								}
							]
						},
						"EndTime": {
							"type": "string",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "End time of the schedule in the form : hh:mm.",
							"datatype": "string",
							"range": [
								{
									"max": 5
								}
							]
						},
						"ForwardedToNumber": {
							"type": "string",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Number to forward the call to.",
							"datatype": "string",
							"range": [
								{
									"max": 32
								}
							]
						}
					},
					"Device.Services.VoiceService.{i}.CallControl.CallingFeatures.Set.{i}.SCF.{i}.": {
						"type": "object",
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "This object defines a Selective Call Forwarding (SCF) that permit the user to forward calls to different destinations depending on the calling number.",
						"uniqueKeys": [
							"CallingNumber",
							"Alias"
						],
						"access": true,
						"array": true,
						"Enable": {
							"type": "boolean",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Enables or disables this Selective Call Forward.",
							"default": "false",
							"datatype": "boolean"
						},
						"Alias": {
							"type": "string",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
							"datatype": "Alias",
							"range": [
								{
									"max": 64
								}
							]
						},
						"CallingNumber": {
							"type": "string",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Calling number concerned by the forward. The CPE SHOULD perform an exact match with this string without any attempts at number normalization.",
							"datatype": "string",
							"range": [
								{
									"max": 32
								}
							]
						},
						"ForwardedToNumber": {
							"type": "string",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Number to forward the call to.",
							"datatype": "string",
							"range": [
								{
									"max": 32
								}
							]
						}
					},
					"Device.Services.VoiceService.{i}.CallControl.CallingFeatures.Set.{i}.SCREJ.{i}.": {
						"type": "object",
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "This object defines a Selective Call Rejection (SCREJ) that permit the user to selectively reject calls depending on the calling number.",
						"uniqueKeys": [
							"CallingNumber",
							"Alias"
						],
						"access": true,
						"array": true,
						"Enable": {
							"type": "boolean",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Enables or disables this Selective Call Rejection.",
							"default": "false",
							"datatype": "boolean"
						},
						"Alias": {
							"type": "string",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
							"datatype": "Alias",
							"range": [
								{
									"max": 64
								}
							]
						},
						"CallingNumber": {
							"type": "string",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Calling number concerned by the reject. The CPE SHOULD perform an exact match with this string without any attempts at number normalization.",
							"datatype": "string",
							"range": [
								{
									"max": 32
								}
							]
						}
					},
					"Device.Services.VoiceService.{i}.CallControl.CallingFeatures.Set.{i}.FollowMe.{i}.": {
						"type": "object",
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "This object defines the FollowMe destinations mapping definition, in the provided sequence order.",
						"uniqueKeys": [
							"Alias",
							"Number",
							"Order"
						],
						"access": true,
						"array": true,
						"Enable": {
							"type": "boolean",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Enables or disables this FollowMe sequence item.",
							"default": "false",
							"datatype": "boolean"
						},
						"Alias": {
							"type": "string",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
							"datatype": "Alias",
							"range": [
								{
									"max": 64
								}
							]
						},
						"Delay": {
							"type": "unsignedInt",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Delay in <<units>> before next FollowMe sequence item applies.",
							"datatype": "unsignedInt",
							"unit": "seconds"
						},
						"Number": {
							"type": "string",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Directory number to which all incoming calls to this line are forwarded to after <<param|Delay>>, when <<param|#.FollowMeEnable>> is <<true>>. In this case, <<param|#.CallForwardOnNoAnswerNumber>> is not used.",
							"datatype": "string",
							"range": [
								{
									"max": 32
								}
							]
						},
						"Order": {
							"type": "unsignedInt",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "For a given <<param|Number>>, defines the order of this item in the FollowMe sequence.",
							"datatype": "unsignedInt"
						}
					},
					"Device.Services.VoiceService.{i}.CallControl.CallingFeatures.Set.{i}.Voice2Mail.": {
						"type": "object",
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Voice to mail specific attributes. Applies only if <<param|#.VoiceMailEnable>> is set to <<true>>.",
						"access": false,
						"array": false,
						"Enable": {
							"type": "boolean",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Enable or disable voice mail notification.",
							"datatype": "boolean"
						},
						"MaxMessageLength": {
							"type": "unsignedInt",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Defines the maximum amount of time in <<units>> of an incoming message. Use this when there are many users and disk space is limited. A value of 0 means there will be no maximum time limit enforced.",
							"datatype": "unsignedInt",
							"unit": "seconds"
						},
						"Attach": {
							"type": "boolean",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Indicates if the message is sent as an attachment in voice mail notification.",
							"datatype": "boolean"
						},
						"KeepLocal": {
							"type": "boolean",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Whether the voice to mail message is kept on the CPE after sending the mail. Applicable only if <<param|Attach>> is <<true>>.",
							"datatype": "boolean"
						},
						"EMailAddress": {
							"type": "string",
							"read": true,
							"write": true,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "E-mail for voice to mail notification messages.",
							"datatype": "string"
						}
					}
				}
			}
		},
		"Device.Services.VoiceService.{i}.Interwork.{i}.": {
			"type": "object",
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "Each entry in this table configures Inter-Working Function switching features. It is mutually exclusive with the <<object|.CallControl>> object which is used in case of PBX or Endpoint capabilities.",
			"uniqueKeys": [
				"Alias"
			],
			"access": true,
			"array": true,
			"Enable": {
				"type": "boolean",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Enable or disable this <<object>> instance.",
				"default": "false",
				"datatype": "boolean"
			},
			"QuiescentMode": {
				"type": "boolean",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "If <<true>>, when <<param|Enable>> is set to <<false>> in-progress sessions remain intact, but no new sessions are allowed. When all sessions are terminated, the <<object>> is disabled.",
				"datatype": "boolean"
			},
			"Status": {
				"type": "string",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Indicates the status of this <<object>> instance.",
				"default": "Disabled",
				"datatype": "string",
				"enumerations": [
					"Up",
					"Error",
					"Quiescent",
					"Disabled"
				]
			},
			"Alias": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
				"datatype": "Alias",
				"range": [
					{
						"max": 64
					}
				]
			},
			"OperationalStatus": {
				"type": "string",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Indicates the operational status of the <<object>> connections when <<param|Status>> is <<enum|Up|Status>>. Enumeration of: InService, OutOfService, NetworkServersOffline.",
				"default": "OutOfService",
				"datatype": "string",
				"enumerations": [
					"InService",
					"OutOfService",
					"NetworkServersOffline"
				]
			},
			"OperationalStatusReason": {
				"type": "string",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Human-readable string identifying the reason or explanation for the current <<param|OperationalStatus>>.",
				"datatype": "string",
				"range": [
					{
						"max": 256
					}
				]
			},
			"NetworkConnectionMode": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "This parameter indicates whether or not the CPE supports a registration procedure that conveys its signaling IP address:port to the network. This parameter also indicates whether the network-facing Client object and its parameters are statically provisioned by the ACS or dynamically created by the CPE. Enumeration of: Static, RegisterDynamic, RegisterLearn, RegisterStatic.",
				"datatype": "string",
				"enumerations": [
					"Static",
					"RegisterDynamic",
					"RegisterLearn",
					"RegisterStatic"
				]
			},
			"UserConnectionMode": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "This parameter indicates whether or not an externally connected user device supports a registration procedure to convey its signaling address to the CPE. This parameter also indicates whether the user-facing objects and parameters that contain the external user device signaling address are statically provisioned by the ACS or dynamically learned by the CPE. Enumeration of: Static, RegisterDynamic, RegisterLearn.",
				"datatype": "string",
				"enumerations": [
					"Static",
					"RegisterDynamic",
					"RegisterLearn"
				]
			},
			"E164Mode": {
				"type": "boolean",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "This attribute indicates whether or not the CPE performs E.164 routing of incoming requests received from the service provider network when the target Endpoint is a PBX.",
				"datatype": "boolean"
			},
			"NetworkAuthenticationChallengeMode": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "This parameter indicates how the CPE treats authentication challenges received from the service provider network. This parameter only has meaning when the CPE supports an externally connected user device (e.g., the CPE is acting as a gateway between the user device and the network). Enumeration of: PassThru, RespondLocal, Hop-by-Hop.",
				"datatype": "string",
				"enumerations": [
					"PassThru",
					"RespondLocal",
					"Hop-by-Hop"
				]
			},
			"NetworkIPAddress": {
				"type": "string",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "The network IP Address of the CPE. The CPE MUST resolve this when the <<object|.Interwork.<i>.>> object is created. Note: In case of multiple network IP addresses, the choice is left to the CPE.",
				"datatype": "IPAddress",
				"range": [
					{
						"max": 45
					}
				]
			},
			"InterworkingRuleSetURI": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "URI of the Interworking Rule Set for this <<object>> instance.",
				"datatype": "string",
				"range": [
					{
						"max": 256
					}
				]
			},
			"InterworkingRuleSetInterval": {
				"type": "unsignedInt",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "The duration in <<units>> of the interval for which the CPE SHOULD send request to refresh the Interworking Rule Set. A value of 0 indicates that this feature is disabled.",
				"datatype": "unsignedInt",
				"unit": "seconds"
			},
			"InterworkingRuleSetTime": {
				"type": "dateTime",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "An absolute time reference in UTC to determine when the CPE will send a request to refresh the Interworking Rule Set. Each refresh request MUST occur at this reference time plus or minus an integer multiple of the <<param|InterworkingRuleSetInterval>>. <<param>> is used only to set the phase of refresh requests. The actual value of <<param>> can be arbitrarily far into the past or future. For example, if <<param|InterworkingRuleSetInterval>> is 86400 (a day) and if <<param>> is set to UTC midnight on some day (in the past, present, or future) then the refresh requests will occur every day at UTC midnight. These MUST begin on the very next midnight, even if <<param>> refers to a day in the future. The Unknown Time value defined in <<bibref|TR-106a2|section 3.2>> indicates that no particular time reference is specified. That is, the CPE MAY locally choose the time reference, and needs only to adhere to the specified <<param|InterworkingRuleSetInterval>>. If absolute time is not available to the CPE, its behavior MUST be the same as if the <<param>> parameter was set to the Unknown Time value.",
				"datatype": "dateTime"
			},
			"FirewallRuleSetURI": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "URI of the Firewall Rule Set for this <<object>> instance.",
				"datatype": "string",
				"range": [
					{
						"max": 256
					}
				]
			},
			"FirewallRuleSetInterval": {
				"type": "unsignedInt",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "The duration in <<units>> of the interval for which the CPE SHOULD send request to refresh the Firewall Rule Set. A value of 0 indicates that this feature is disabled.",
				"datatype": "unsignedInt",
				"unit": "seconds"
			},
			"FirewallRuleSetTime": {
				"type": "dateTime",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "An absolute time reference in UTC to determine when the CPE will send a request to refresh the Firewall Rule Set. Each refresh request MUST occur at this reference time plus or minus an integer multiple of the <<param|FirewallRuleSetInterval>>. <<param>> is used only to set the phase of refresh requests. The actual value of <<param>> can be arbitrarily far into the past or future. For example, if <<param|FirewallRuleSetInterval>> is 86400 (a day) and if <<param>> is set to UTC midnight on some day (in the past, present, or future) then the refresh requests will occur every day at UTC midnight. These MUST begin on the very next midnight, even if <<param>> refers to a day in the future. The Unknown Time value defined in <<bibref|TR-106a2|section 3.2>> indicates that no particular time reference is specified. That is, the CPE MAY locally choose the time reference, and needs only to adhere to the specified <<param|FirewallRuleSetInterval>>. If absolute time is not available to the CPE, its behavior MUST be the same as if the <<param>> parameter was set to the Unknown Time value.",
				"datatype": "dateTime"
			},
			"InterworkName": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Human-readable string identifying the name or explanation for this <<object>>.",
				"datatype": "string",
				"range": [
					{
						"max": 256
					}
				]
			},
			"ProxyServer": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Reference to the <<object|.SIP.Proxy>> associated with this <<object>>. <<reference>>",
				"datatype": "string",
				"range": [
					{
						"max": 256
					}
				]
			},
			"Networks": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<list>> <<reference>> List of available Networks for routing calls.",
				"list": {
					"datatype": "string"
				}
			},
			"E164Client": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "This parameter is MUST contain the <<object|.SIP.Client>> for all <<object|.Trunk>> objects referenced in the <<object|Map>> table when <<param|E164Mode>> = <<true>>.",
				"datatype": "string",
				"range": [
					{
						"max": 256
					}
				]
			},
			"UserInterfaceNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"MapNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"Device.Services.VoiceService.{i}.Interwork.{i}.UserInterface.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Each table entry references a row in the <<object|.SIP.Registrar>> table to identify the User IP address and listening port for the Device and the Network to route calls to.",
				"uniqueKeys": [
					"Alias",
					"Registrar"
				],
				"access": true,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enable (<<true>>) or disable (<<false>>) <<object>>.",
					"default": "false",
					"datatype": "boolean"
				},
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"Registrar": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The <<object|.SIP.Registrar>> to use with this <<object|#>>. The value of <<param>> MUST be unique over all <<object|.Interwork.<i>.>>. <<reference>>",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"Network": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "If not null this provides the appropriate <<object|.SIP.Network>> to route calls from this User server to. <<reference>>",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				}
			},
			"Device.Services.VoiceService.{i}.Interwork.{i}.Map.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "For interworking use cases such as SIP-ISDN PBX plug and ESBC : mapping instance between a Network interface and a User extension.",
				"uniqueKeys": [
					"Alias"
				],
				"access": true,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enable (<<true>>) or disable (<<false>>) this connection mapping.",
					"default": "false",
					"datatype": "boolean"
				},
				"Status": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the status of this connection mapping. Enumeration of: Active, InActive.",
					"default": "InActive",
					"datatype": "string",
					"enumerations": [
						"Active",
						"InActive"
					]
				},
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"StatusDescription": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Human-readable string identifying the reason or explanation of the current mapping <<param|Status>>.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"LastTime": {
					"type": "dateTime",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The last time the Status was updated.",
					"datatype": "dateTime"
				},
				"Origin": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Mechanism via which this connection mapping was assigned. Enumeration of: AutoConfigured, Static.",
					"default": "Static",
					"datatype": "string",
					"enumerations": [
						"AutoConfigured",
						"Static"
					]
				},
				"NetworkConnection": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<reference>>. This parameter can only be modified if <<param|Origin>> is <<enum|Static|Origin>>.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"UserConnection": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<reference>>. This parameter can only be modified if <<param|Origin>> is <<enum|Static|Origin>>.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"DigitMap": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Digit map controlling digit collection on a User interface. The string defines the criteria to be met as digits are collected before an outgoing request (e.g., a SIP INVITE) can be initiated. The syntax of this parameter is exactly the syntax used by MGCP as defined in <<bibref|RFC3435|Section 2.1.5>>. This parameter is applicable only if the User interface supports per digit dialing and the Network interface supports en-bloc dialing only.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"DigitMapEnable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enables use of <<param|DigitMap>>.",
					"default": "true",
					"datatype": "boolean"
				},
				"Priority": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the priority for this combination of Network-to-User mapping, where 1 is the highest priority. Where the priority differs between entries in this table, the CPE SHOULD use the highest priority (lowest numbered) entry. Where the priorities are equal among multiple entries, the CPE MAY apply a local criterion for choosing among them.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1
						}
					]
				}
			}
		},
		"Device.Services.VoiceService.{i}.CallLog.{i}.": {
			"type": "object",
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "This table contains a list of calls. An entry is similar to a CDR (Call Detail Record) as used in PBX or on mobile phones. An entry is created each time a call is terminated. If the number of <<object|.CallLog>> exceeds <<param|.Capabilities.MaxCallLogCount>>, the CPE SHOULD remove the oldest <<object|.CallLog>> object on basis of <<param|Start>> parameter.",
			"uniqueKeys": [
				"Alias"
			],
			"access": false,
			"array": true,
			"Alias": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
				"datatype": "Alias",
				"range": [
					{
						"max": 64
					}
				]
			},
			"CallingPartyNumber": {
				"type": "string",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Number of the party originating the call.",
				"datatype": "string",
				"range": [
					{
						"max": 256
					}
				]
			},
			"CalledPartyNumber": {
				"type": "string",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Number of destination party of the call.",
				"datatype": "string",
				"range": [
					{
						"max": 256
					}
				]
			},
			"Source": {
				"type": "string",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Party originating the call. <<reference>> <<object|.Trunk>>, <<object|.SIP.Registrar.<i>.Account>> and <<object|.SIP.Client>> objects SHOULD be referenced only when <<object|.Interwork>> is in use.",
				"datatype": "string",
				"range": [
					{
						"max": 256
					}
				]
			},
			"Destination": {
				"type": "string",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Destination party of the call. <<reference>> <<object|.Trunk>>, <<object|.SIP.Registrar.<i>.Account>> and <<object|.SIP.Client>> objects SHOULD be only referenced only when <<object|.Interwork>> is in use.",
				"datatype": "string",
				"range": [
					{
						"max": 256
					}
				]
			},
			"RemoteParty": {
				"type": "string",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "The phone number of the remote party after the dial plan has been processed.",
				"datatype": "string",
				"range": [
					{
						"max": 32
					}
				]
			},
			"UsedLine": {
				"type": "string",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "The <<object|.CallControl.Line>> used to process the call. <<reference>> When <<object|.Interwork>> is in use, this parameter is <<empty>>.",
				"datatype": "string",
				"range": [
					{
						"max": 256
					}
				]
			},
			"UsedExtensions": {
				"type": "string",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<list>> <<reference>> For an incoming call multiple <<object|.CallControl.Extension>> objects can be involved till one user answers the call. When <<object|.Interwork>> is in use, this parameter is <<empty>>.",
				"list": {
					"datatype": "string"
				}
			},
			"Direction": {
				"type": "string",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Direction of the call.",
				"datatype": "string",
				"enumerations": [
					"Incoming",
					"Outgoing"
				]
			},
			"Start": {
				"type": "dateTime",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Start of the call.",
				"datatype": "dateTime"
			},
			"Duration": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Length of the call in <<units>>.",
				"datatype": "unsignedInt",
				"unit": "seconds"
			},
			"CallTerminationCause": {
				"type": "string",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "The call termination cause. The parameter MAY instead indicate a vendor-specific cause, which MUST use the format defined in <<bibref|TR-106>>.",
				"datatype": "string",
				"enumerations": [
					"NoExtensionsMapped",
					"NoExtensionsAvailable",
					"AnonymousCallRejection",
					"CallWaitingRejected",
					"CallForwardingUnconditional",
					"CallForwardingBusy",
					"CallForwardingNoReply",
					"LocalDisconnect",
					"LocalForbidden",
					"LocalTimeout",
					"LocalMediaError.",
					"LocalPriority.",
					"LocalReject",
					"LocalTransfer",
					"LocalInternalError",
					"RemoteDisconnect",
					"RemoteBadRequest",
					"RemoteForbidden",
					"RemoteNotFound",
					"RemoteReject",
					"RemoteNotAllowed",
					"RemoteNotAcceptable",
					"RemoteTimeout",
					"RemoteUnavailable",
					"RemoteBusy",
					"RemoteNotSupported",
					"RemoteNetworkFailure"
				]
			},
			"SessionNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Indicates the number of entries in <<object|.CallLog.<i>.Session.<i>.>>. Sessions are the equivalent of RTP streams in VoIP calls : a call can have more than one session in sequence when codec changes happen during a call. In multimedia calls, multiple sessions in parallel are possible.",
				"datatype": "unsignedInt"
			},
			"SignalingPerformanceNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"Device.Services.VoiceService.{i}.CallLog.{i}.SignalingPerformance.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "This table contains signaling performance statistics for each protocol involved in the call.",
				"uniqueKeys": [
					"Protocol"
				],
				"access": false,
				"array": true,
				"Protocol": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Protocol for which this signaling performance statistics are available.",
					"datatype": "string",
					"enumerations": [
						"H.323",
						"SIP"
					]
				},
				"CallSetupDelay": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The time between the instant a system receives a call attempt and the instant of invitation of ringing at the call receiver end instrument in <<units>>.",
					"datatype": "unsignedInt",
					"unit": "milliseconds"
				},
				"OutgoingMediaEstablishDelay": {
					"type": "int",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The time in <<units>> between : :- the instant a system has received information that the called party is connected :- the instant the first media packet goes out the CPE The value could be negative if a media packet is sent before the connection establishment.",
					"datatype": "int",
					"unit": "milliseconds"
				},
				"IncomingMediaEstablishDelay": {
					"type": "int",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The time in <<units>> between : :- the instant a system has received information that the called party is connected :- the instant the first media packet goes into the CPE The value could be negative if a media packet arrives before the connection establishment.",
					"datatype": "int",
					"unit": "milliseconds"
				}
			},
			"Device.Services.VoiceService.{i}.CallLog.{i}.Session.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Session information within one call.",
				"uniqueKeys": [
					"SessionID"
				],
				"access": false,
				"array": true,
				"StreamType": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The type of media stream used in this session.",
					"datatype": "string",
					"enumerations": [
						"Audio",
						"Video",
						"Fax",
						"Modem"
					]
				},
				"Start": {
					"type": "dateTime",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The time that the session started, in UTC.",
					"datatype": "dateTime"
				},
				"Duration": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Length of the session in <<units>>.",
					"datatype": "unsignedInt",
					"unit": "seconds"
				},
				"SessionID": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Session Identifier. For the SIP protocol this corresponds to the SIP SDP session identifier.",
					"datatype": "string",
					"range": [
						{
							"max": 16
						}
					]
				},
				"SIPSessionID": {
					"type": "string",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "SIP Session Identifier",
					"datatype": "string",
					"range": [
						{
							"max": 32
						}
					]
				},
				"Device.Services.VoiceService.{i}.CallLog.{i}.Session.{i}.Source.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The source of the session information within one call.",
					"access": false,
					"array": false,
					"Device.Services.VoiceService.{i}.CallLog.{i}.Session.{i}.Source.RTP.": {
						"type": "object",
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The RTP part of the source session information.",
						"access": false,
						"array": false,
						"FarEndIPAddress": {
							"type": "string",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "The IP address of far end VoIP device.",
							"datatype": "IPAddress",
							"range": [
								{
									"max": 45
								}
							]
						},
						"FarEndUDPPort": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "The UDP port used for current session in the far end device.",
							"datatype": "unsignedInt",
							"range": [
								{
									"min": 0,
									"max": 65535
								}
							]
						},
						"LocalUDPPort": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "The local UDP port used for current session.",
							"datatype": "unsignedInt",
							"range": [
								{
									"min": 0,
									"max": 65535
								}
							]
						},
						"MinJitter": {
							"type": "int",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "The minimum relative transit time in <<units>> between two packets as defined in <<bibref|RFC3611>>. A value of -1 indicates no reliable value is available.",
							"datatype": "int",
							"range": [
								{
									"min": -1
								}
							],
							"unit": "milliseconds"
						},
						"MaxJitter": {
							"type": "int",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "The maximum relative transit time in <<units>> between two packets as defined in <<bibref|RFC3611>>. A value of -1 indicates no reliable value is available.",
							"datatype": "int",
							"range": [
								{
									"min": -1
								}
							],
							"unit": "milliseconds"
						},
						"MeanJitter": {
							"type": "int",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "The mean relative transit time in <<units>> between each two packet series as defined in <<bibref|RFC3611>>. A value of -1 indicates no reliable value is available.",
							"datatype": "int",
							"range": [
								{
									"min": -1
								}
							],
							"unit": "milliseconds"
						},
						"PacketDelayVariation": {
							"type": "int",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "1-Point Packet Delay Variation according to <<bibref|Y.1540>> in <<units>>. A value of -1 indicates no reliable value is available.",
							"datatype": "int",
							"range": [
								{
									"min": -1
								}
							],
							"unit": "milliseconds"
						},
						"BufferDelay": {
							"type": "int",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Average delay in <<units>> added by buffer processing. A value of -1 indicates no reliable value is available.",
							"datatype": "int",
							"range": [
								{
									"min": -1
								}
							],
							"unit": "microseconds"
						},
						"BurstCount": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "The number of bursts (as defined in <<bibref|RFC3611>>) that occur during this session (during one burst several packets MAY be lost). The bursts threshold is configured with the parameter <<param|.VoIPProfile.<i>.RTP.Gmin>>.",
							"datatype": "StatsCounter32"
						},
						"PacketsReceived": {
							"type": "unsignedLong",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of RTP packets received for this session.",
							"datatype": "StatsCounter64"
						},
						"PacketsSent": {
							"type": "unsignedLong",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of RTP packets sent for this session.",
							"datatype": "StatsCounter64"
						},
						"PacketsLost": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of RTP packets that have been lost for this session (see <<bibref|RFC3611>>).",
							"datatype": "StatsCounter32"
						},
						"PacketsDiscarded": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of RTP packets that have been discarded for this session (see <<bibref|RFC3611>>).",
							"datatype": "StatsCounter32"
						},
						"BytesReceived": {
							"type": "unsignedLong",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of bytes received for this session.",
							"datatype": "StatsCounter64"
						},
						"BytesSent": {
							"type": "unsignedLong",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of bytes sent for this session.",
							"datatype": "StatsCounter64"
						},
						"ReceivePacketLossRate": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Current receive packet loss rate in percent, calculated as defined in <<bibref|RFC3550|Section 6.4>>.",
							"datatype": "unsignedInt",
							"range": [
								{
									"min": 0,
									"max": 100
								}
							]
						},
						"FarEndPacketLossRate": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Current far end receive packet lost rate in percent, calculated as defined in <<bibref|RFC3550|Section 6.4>>.",
							"datatype": "unsignedInt",
							"range": [
								{
									"min": 0,
									"max": 100
								}
							]
						},
						"ReceiveInterarrivalJitter": {
							"type": "int",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Current receive interarrival jitter in timestamp units. Calculated from J(i) as defined in <<bibref|RFC3550|Section 6.4>>. A value of -1 indicates no reliable value is available.",
							"datatype": "int",
							"range": [
								{
									"min": -1
								}
							]
						},
						"FarEndInterarrivalJitter": {
							"type": "int",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Current Interarrival jitter in timestamp units as reported from the far-end device via RTCP. Calculated from J(i) as defined in <<bibref|RFC3550|Section 6.4>>. A value of -1 indicates no reliable value is available.",
							"datatype": "int",
							"range": [
								{
									"min": -1
								}
							]
						},
						"AverageReceiveInterarrivalJitter": {
							"type": "int",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Average receive interarrival jitter in timestamp units since the beginning of the current call. Calculated as the average of the interarrival jitter values reported by the far-end. A value of -1 indicates no reliable value is available.",
							"datatype": "int",
							"range": [
								{
									"min": -1
								}
							]
						},
						"AverageFarEndInterarrivalJitter": {
							"type": "int",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Average far-end interarrival jitter in timestamp units since the beginning of the current call. Calculated as the average of the interarrival jitter values reported by the far-end. A value of -1 indicates no reliable value is available.",
							"datatype": "int",
							"range": [
								{
									"min": -1
								}
							]
						},
						"RoundTripDelay": {
							"type": "int",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Current round trip delay in <<units>> calculated as defined in <<bibref|RFC3550|Section 6.4>>. A value of -1 indicates no reliable value is available.",
							"datatype": "int",
							"range": [
								{
									"min": -1
								}
							],
							"unit": "microseconds"
						},
						"AverageRoundTripDelay": {
							"type": "int",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Average round trip delay in <<units>> since the beginning of the current session. A value of -1 indicates no reliable value is available.",
							"datatype": "int",
							"range": [
								{
									"min": -1
								}
							],
							"unit": "microseconds"
						},
						"SamplingFrequency": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Sample frequency in <<units>> used by the codec for this session.",
							"datatype": "unsignedInt",
							"unit": "Hertz"
						}
					},
					"Device.Services.VoiceService.{i}.CallLog.{i}.Session.{i}.Source.DSP.": {
						"type": "object",
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The DSP part of the line session information.",
						"access": false,
						"array": false,
						"Device.Services.VoiceService.{i}.CallLog.{i}.Session.{i}.Source.DSP.ReceiveCodec.": {
							"type": "object",
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "The receive codec used in this session.",
							"access": false,
							"array": false,
							"Codec": {
								"type": "string",
								"read": true,
								"write": false,
								"protocols": [
									"cwmp",
									"usp"
								],
								"description": "The codec in use for the incoming voice stream. <<reference>>",
								"datatype": "string",
								"range": [
									{
										"max": 256
									}
								]
							},
							"SilenceSuppression": {
								"type": "boolean",
								"read": true,
								"write": false,
								"protocols": [
									"cwmp",
									"usp"
								],
								"description": "Whether or not silence suppression is in use for the incoming voice stream.",
								"datatype": "boolean"
							},
							"Overruns": {
								"type": "unsignedInt",
								"read": true,
								"write": false,
								"protocols": [
									"cwmp",
									"usp"
								],
								"description": "Total number of times the receive jitter buffer has overrun for this session.",
								"datatype": "unsignedInt"
							},
							"Underruns": {
								"type": "unsignedInt",
								"read": true,
								"write": false,
								"protocols": [
									"cwmp",
									"usp"
								],
								"description": "Total number of times the receive jitter buffer has underrun for this session.",
								"datatype": "unsignedInt"
							}
						},
						"Device.Services.VoiceService.{i}.CallLog.{i}.Session.{i}.Source.DSP.TransmitCodec.": {
							"type": "object",
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "The transmit codec used in this session.",
							"access": false,
							"array": false,
							"Codec": {
								"type": "string",
								"read": true,
								"write": false,
								"protocols": [
									"cwmp",
									"usp"
								],
								"description": "The codec in use for the outgoing voice stream. <<reference>>",
								"datatype": "string",
								"range": [
									{
										"max": 256
									}
								]
							},
							"SilenceSuppression": {
								"type": "boolean",
								"read": true,
								"write": false,
								"protocols": [
									"cwmp",
									"usp"
								],
								"description": "Whether or not silence suppression is in use for the outgoing voice stream.",
								"datatype": "boolean"
							},
							"PacketizationPeriod": {
								"type": "unsignedInt",
								"read": true,
								"write": false,
								"protocols": [
									"cwmp",
									"usp"
								],
								"description": "Current outgoing packetization period in <<units>>.",
								"datatype": "unsignedInt",
								"unit": "milliseconds"
							},
							"Overruns": {
								"type": "unsignedInt",
								"read": true,
								"write": false,
								"protocols": [
									"cwmp",
									"usp"
								],
								"description": "Total number of times the transmit jitter buffer has overrun for this session.",
								"datatype": "unsignedInt"
							},
							"Underruns": {
								"type": "unsignedInt",
								"read": true,
								"write": false,
								"protocols": [
									"cwmp",
									"usp"
								],
								"description": "Total number of times the transmit jitter buffer has underrun for this session.",
								"datatype": "unsignedInt"
							}
						}
					},
					"Device.Services.VoiceService.{i}.CallLog.{i}.Session.{i}.Source.VoiceQuality.": {
						"type": "object",
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "VoIP Statistics for current session instance.",
						"access": false,
						"array": false,
						"VoIPQualityIndicator": {
							"type": "string",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "<<list|representing the VoIP quality calculated for consecutive intervals of the session>> The interval is specified by <<param|.VoIPProfile.<i>.QICalculationInterval>> and the quality model used is specified by <<param|.VoIPProfile.<i>.QIModelUsed>>. The statistics values in this list MUST be in time order, with the oldest one first and the most recent one last. For long sessions the number of values might exceed the limit given by <<param|.Capabilities.QualityIndicator.MaxQIValues>>. In that case, the CPE MUST remove the oldest values to keep the number of reported values within the limit. The interpretation of the QI values are algorithm-specific, the only constraints being the range and the fact that lower values indicate worse quality than do higher values. For instance, if <<param>> is reported as 78,57,88,79,34,56, and <<param|.VoIPProfile.<i>.QICalculationInterval>> is 10 seconds, the quality during the first ten seconds was 78, the next ten seconds 57, and so on. The last reported value (here 56) might cover a shorter time period than <<param|.VoIPProfile.<i>.QICalculationInterval>>, but the length can be deduced using <<param|##.Duration>>.",
							"list": {
								"datatype": "unsignedInt",
								"range": [
									{
										"max": 65535
									}
								]
							}
						},
						"WorstVoIPQualityIndicatorsValues": {
							"type": "string",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "<<list|representing the worst VoIP quality indicators calculated during the whole session>> Only the N worst values are stored, where N is the limit stored in the <<param|.VoIPProfile.<i>.NumberOfWorstQIValues>> attribute. The values are given in the same algorithm-specific representation as <<param|VoIPQualityIndicator>>, and MUST be in quality-order with the lowest value first. Example: 34,56,57 are the 3 worst values calculated during the call.",
							"list": {
								"datatype": "unsignedInt",
								"range": [
									{
										"max": 65535
									}
								]
							}
						},
						"WorstVoIPQualityIndicatorTimestamps": {
							"type": "string",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "<<list>> Each value represents the timestamp index, given in units of <<param|.VoIPProfile.<i>.QICalculationInterval>>, when the corresponding value in <<param|WorstVoIPQualityIndicatorsValues>> was calculated. The first index is number 1. Only the N worst values are stored, where N is the limit stored in <<param|.VoIPProfile.<i>.NumberOfWorstQIValues>>. Example: if <<param|.VoIPProfile.<i>.QICalculationInterval>> is equal to 10 (seconds), the value 6,2,5 designates the time intervals 50-60 s, 10-20 s, and 40-50 s when the 3 worst values were calculated.",
							"list": {
								"datatype": "unsignedInt",
								"range": [
									{
										"max": 65535
									}
								]
							}
						}
					}
				},
				"Device.Services.VoiceService.{i}.CallLog.{i}.Session.{i}.Destination.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The destination part of session information within one call.",
					"access": false,
					"array": false,
					"Device.Services.VoiceService.{i}.CallLog.{i}.Session.{i}.Destination.RTP.": {
						"type": "object",
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The RTP part of the destination session information.",
						"access": false,
						"array": false,
						"FarEndIPAddress": {
							"type": "string",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "The IP address of far end VoIP device.",
							"datatype": "IPAddress",
							"range": [
								{
									"max": 45
								}
							]
						},
						"FarEndUDPPort": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "The UDP port used for current session in the far end device.",
							"datatype": "unsignedInt",
							"range": [
								{
									"min": 0,
									"max": 65535
								}
							]
						},
						"LocalUDPPort": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "The local UDP port used for current session.",
							"datatype": "unsignedInt",
							"range": [
								{
									"min": 0,
									"max": 65535
								}
							]
						},
						"MinJitter": {
							"type": "int",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "The minimum relative transit time in <<units>> between two packets as defined in <<bibref|RFC3611>>. A value of -1 indicates no reliable value is available.",
							"datatype": "int",
							"range": [
								{
									"min": -1
								}
							],
							"unit": "milliseconds"
						},
						"MaxJitter": {
							"type": "int",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "The maximum relative transit time in <<units>> between two packets as defined in <<bibref|RFC3611>>. A value of -1 indicates no reliable value is available.",
							"datatype": "int",
							"range": [
								{
									"min": -1
								}
							],
							"unit": "milliseconds"
						},
						"MeanJitter": {
							"type": "int",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "The mean relative transit time in <<units>> between each two packet series as defined in <<bibref|RFC3611>>. A value of -1 indicates no reliable value is available.",
							"datatype": "int",
							"range": [
								{
									"min": -1
								}
							],
							"unit": "milliseconds"
						},
						"PacketDelayVariation": {
							"type": "int",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "1-Point Packet Delay Variation according to <<bibref|Y.1540>> in <<units>>. A value of -1 indicates no reliable value is available.",
							"datatype": "int",
							"range": [
								{
									"min": -1
								}
							],
							"unit": "milliseconds"
						},
						"BufferDelay": {
							"type": "int",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Average delay in <<units>> added by buffer processing. A value of -1 indicates no reliable value is available.",
							"datatype": "int",
							"range": [
								{
									"min": -1
								}
							],
							"unit": "microseconds"
						},
						"BurstCount": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "The number of bursts (as defined in <<bibref|RFC3611>>) that occur during this session (during one burst several packets MAY be lost). The bursts threshold is configured with the parameter <<param|.VoIPProfile.<i>.RTP.Gmin>>.",
							"datatype": "StatsCounter32"
						},
						"PacketsReceived": {
							"type": "unsignedLong",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of RTP packets received for this session.",
							"datatype": "StatsCounter64"
						},
						"PacketsSent": {
							"type": "unsignedLong",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of RTP packets sent for this session.",
							"datatype": "StatsCounter64"
						},
						"PacketsLost": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of RTP packets that have been lost for this session (see <<bibref|RFC3611>>).",
							"datatype": "StatsCounter32"
						},
						"PacketsDiscarded": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of RTP packets that have been discarded for this session (see <<bibref|RFC3611>>).",
							"datatype": "StatsCounter32"
						},
						"BytesReceived": {
							"type": "unsignedLong",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of bytes received for this session.",
							"datatype": "StatsCounter64"
						},
						"BytesSent": {
							"type": "unsignedLong",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Total number of bytes sent for this session.",
							"datatype": "StatsCounter64"
						},
						"ReceivePacketLossRate": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Current receive packet loss rate in percent, calculated as defined in <<bibref|RFC3550|Section 6.4>>.",
							"datatype": "unsignedInt",
							"range": [
								{
									"min": 0,
									"max": 100
								}
							]
						},
						"FarEndPacketLossRate": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Current far end receive packet lost rate in percent, calculated as defined in <<bibref|RFC3550|Section 6.4>>.",
							"datatype": "unsignedInt",
							"range": [
								{
									"min": 0,
									"max": 100
								}
							]
						},
						"ReceiveInterarrivalJitter": {
							"type": "int",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Current receive interarrival jitter in timestamp units. Calculated from J(i) as defined in <<bibref|RFC3550|Section 6.4>>. A value of -1 indicates no reliable value is available.",
							"datatype": "int",
							"range": [
								{
									"min": -1
								}
							]
						},
						"FarEndInterarrivalJitter": {
							"type": "int",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Current Interarrival jitter in timestamp units as reported from the far-end device via RTCP. Calculated from J(i) as defined in <<bibref|RFC3550|Section 6.4>>. A value of -1 indicates no reliable value is available.",
							"datatype": "int",
							"range": [
								{
									"min": -1
								}
							]
						},
						"AverageReceiveInterarrivalJitter": {
							"type": "int",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Average receive interarrival jitter in timestamp units since the beginning of the current call. Calculated as the average of the interarrival jitter values reported by the far-end. A value of -1 indicates no reliable value is available.",
							"datatype": "int",
							"range": [
								{
									"min": -1
								}
							]
						},
						"AverageFarEndInterarrivalJitter": {
							"type": "int",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Average far-end interarrival jitter in timestamp units since the beginning of the current call. Calculated as the average of the interarrival jitter values reported by the far-end. A value of -1 indicates no reliable value is available.",
							"datatype": "int",
							"range": [
								{
									"min": -1
								}
							]
						},
						"RoundTripDelay": {
							"type": "int",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Current round trip delay in <<units>> calculated as defined in <<bibref|RFC3550|Section 6.4>>. A value of -1 indicates no reliable value is available.",
							"datatype": "int",
							"range": [
								{
									"min": -1
								}
							],
							"unit": "microseconds"
						},
						"AverageRoundTripDelay": {
							"type": "int",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Average round trip delay in <<units>> since the beginning of the current session. A value of -1 indicates no reliable value is available.",
							"datatype": "int",
							"range": [
								{
									"min": -1
								}
							],
							"unit": "microseconds"
						},
						"SamplingFrequency": {
							"type": "unsignedInt",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "Sample frequency in <<units>> used by the codec for this session.",
							"datatype": "unsignedInt",
							"unit": "Hertz"
						}
					},
					"Device.Services.VoiceService.{i}.CallLog.{i}.Session.{i}.Destination.DSP.": {
						"type": "object",
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The DSP part of the destination session information.",
						"access": false,
						"array": false,
						"Device.Services.VoiceService.{i}.CallLog.{i}.Session.{i}.Destination.DSP.ReceiveCodec.": {
							"type": "object",
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "The receive codec used in this session.",
							"access": false,
							"array": false,
							"Codec": {
								"type": "string",
								"read": true,
								"write": false,
								"protocols": [
									"cwmp",
									"usp"
								],
								"description": "The codec in use for the incoming voice stream. <<reference>>",
								"datatype": "string",
								"range": [
									{
										"max": 256
									}
								]
							},
							"SilenceSuppression": {
								"type": "boolean",
								"read": true,
								"write": false,
								"protocols": [
									"cwmp",
									"usp"
								],
								"description": "Whether or not silence suppression is in use for the incoming voice stream.",
								"datatype": "boolean"
							},
							"Overruns": {
								"type": "unsignedInt",
								"read": true,
								"write": false,
								"protocols": [
									"cwmp",
									"usp"
								],
								"description": "Total number of times the receive jitter buffer has overrun for this session.",
								"datatype": "unsignedInt"
							},
							"Underruns": {
								"type": "unsignedInt",
								"read": true,
								"write": false,
								"protocols": [
									"cwmp",
									"usp"
								],
								"description": "Total number of times the receive jitter buffer has underrun for this session.",
								"datatype": "unsignedInt"
							}
						},
						"Device.Services.VoiceService.{i}.CallLog.{i}.Session.{i}.Destination.DSP.TransmitCodec.": {
							"type": "object",
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "The transmit codec used in this session.",
							"access": false,
							"array": false,
							"Codec": {
								"type": "string",
								"read": true,
								"write": false,
								"protocols": [
									"cwmp",
									"usp"
								],
								"description": "The codec in use for the outgoing voice stream. <<reference>>",
								"datatype": "string",
								"range": [
									{
										"max": 256
									}
								]
							},
							"SilenceSuppression": {
								"type": "boolean",
								"read": true,
								"write": false,
								"protocols": [
									"cwmp",
									"usp"
								],
								"description": "Whether or not silence suppression is in use for the outgoing voice stream.",
								"datatype": "boolean"
							},
							"PacketizationPeriod": {
								"type": "unsignedInt",
								"read": true,
								"write": false,
								"protocols": [
									"cwmp",
									"usp"
								],
								"description": "Current outgoing packetization period in <<units>>.",
								"datatype": "unsignedInt",
								"unit": "milliseconds"
							},
							"Overruns": {
								"type": "unsignedInt",
								"read": true,
								"write": false,
								"protocols": [
									"cwmp",
									"usp"
								],
								"description": "Total number of times the transmit jitter buffer has overrun for this session.",
								"datatype": "unsignedInt"
							},
							"Underruns": {
								"type": "unsignedInt",
								"read": true,
								"write": false,
								"protocols": [
									"cwmp",
									"usp"
								],
								"description": "Total number of times the transmit jitter buffer has underrun for this session.",
								"datatype": "unsignedInt"
							}
						}
					},
					"Device.Services.VoiceService.{i}.CallLog.{i}.Session.{i}.Destination.VoiceQuality.": {
						"type": "object",
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "VoIP Statistics for current session instance.",
						"access": false,
						"array": false,
						"VoIPQualityIndicator": {
							"type": "string",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "<<list|representing the VoIP quality calculated for consecutive intervals of the session>> The interval is specified by <<param|.VoIPProfile.<i>.QICalculationInterval>> and the quality model used is specified by <<param|.VoIPProfile.<i>.QIModelUsed>>. The statistics values in this list MUST be in time order, with the oldest one first and the most recent one last. For long sessions the number of values might exceed the limit given by <<param|.Capabilities.QualityIndicator.MaxQIValues>>. In that case, the CPE MUST remove the oldest values to keep the number of reported values within the limit. The interpretation of the QI values are algorithm-specific, the only constraints being the numeric range and the fact that lower values indicate worse quality than do higher values. For instance, if <<param>> is reported as 78,57,88,79,34,56, and <<param|.VoIPProfile.<i>.QICalculationInterval>> is 10 seconds, the quality during the first ten seconds was 78, the next ten seconds 57, and so on. The last reported value (here 56) might cover a shorter time period than <<param|.VoIPProfile.<i>.QICalculationInterval>>, but the length can be deduced using <<param|##.Duration>>.",
							"list": {
								"datatype": "unsignedInt",
								"range": [
									{
										"max": 65535
									}
								]
							}
						},
						"WorstVoIPQualityIndicatorsValues": {
							"type": "string",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "<<list|representing the worst VoIP quality indicators calculated during the whole session>> Only the N worst values are stored, where N is the limit stored in the <<param|.VoIPProfile.<i>.NumberOfWorstQIValues>> attribute. The values are given in the same algorithm-specific representation as <<param|VoIPQualityIndicator>>, and MUST be in quality-order with the lowest value first. Example: 34,56,57 are the 3 worst values calculated during the call.",
							"list": {
								"datatype": "unsignedInt",
								"range": [
									{
										"max": 65535
									}
								]
							}
						},
						"WorstVoIPQualityIndicatorTimestamps": {
							"type": "string",
							"read": true,
							"write": false,
							"protocols": [
								"cwmp",
								"usp"
							],
							"description": "<<list>> Each value represents the timestamp index, given in units of <<param|.VoIPProfile.<i>.QICalculationInterval>>, when the corresponding value in <<param|WorstVoIPQualityIndicatorsValues>> was calculated. The first index is number 1. Only the N worst values are stored, where N is the limit stored in <<param|.VoIPProfile.<i>.NumberOfWorstQIValues>>. Example: if <<param|.VoIPProfile.<i>.QICalculationInterval>> is equal to 10 (seconds), the value 6,2,5 designates the time intervals 50-60 s, 10-20 s, and 40-50 s when the 3 worst values were calculated.",
							"list": {
								"datatype": "unsignedInt",
								"range": [
									{
										"max": 65535
									}
								]
							}
						}
					}
				}
			}
		},
		"Device.Services.VoiceService.{i}.VoIPProfile.{i}.": {
			"type": "object",
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "Configuration profile that can be shared by VoIP components. A VoIP Profile contains media transport configuration parameters that are common to different VoIP protocols. VoIP Profiles could be used by <<object|.SIP.Network.>>, <<object|.SIP.Proxy.>>, <<object|.SIP.Network.>>, <<object|.H323.Network.>> and <<object|.MGCP.Network.>>.",
			"uniqueKeys": [
				"Alias"
			],
			"access": true,
			"array": true,
			"Enable": {
				"type": "boolean",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Enables or disables this VoIP profile. If the value is set to <<false>>, all components using the profile are disabled, whatever their status is.",
				"default": "false",
				"datatype": "boolean"
			},
			"QuiescentMode": {
				"type": "boolean",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "If <<true>>, when <<param|Enable>> is set to <<false>> in-progress sessions remain intact, but no new sessions are allowed. When all sessions are terminated, the <<object>> is disabled.",
				"datatype": "boolean"
			},
			"Name": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Human-readable string to identify the profile instance.",
				"datatype": "string",
				"range": [
					{
						"max": 64
					}
				]
			},
			"Alias": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
				"datatype": "Alias",
				"range": [
					{
						"max": 64
					}
				]
			},
			"DTMFMethod": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<list>> Method by which DTMF digits MUST be passed. Enumeration of: InBand, RFC4733, SIPInfo. If <<param|DTMFMethodG711>> is non-empty, then this parameter applies only when the current codec is not G.711.",
				"default": "InBand",
				"list": {
					"datatype": "string",
					"enumerations": [
						"InBand",
						"RFC4733",
						"SIPInfo"
					]
				}
			},
			"DTMFMethodG711": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Method by which DTMF digits MUST be passed if the the current codec is G.711. Enumeration of: InBand, RFC4733, SIPInfo, . If <<empty>> indicates that the value of <<param|DTMFMethod>> is to apply whether or not the the the current codec is G.711.",
				"datatype": "string",
				"enumerations": [
					"InBand",
					"RFC4733",
					"SIPInfo",
					""
				]
			},
			"QIModelUsed": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Quality model which the CPE shall use to calculate the parameters <<param|.CallLog.<i>.Session.<i>.Source.VoiceQuality.VoIPQualityIndicator>> and <<param|.CallLog.<i>.Session.<i>.Destination.VoiceQuality.VoIPQualityIndicator>>. The value MUST be a member of the list reported by the <<param|.Capabilities.QualityIndicator.QIModelsSupported>> parameter.",
				"datatype": "string",
				"range": [
					{
						"max": 128
					}
				]
			},
			"QICalculationInterval": {
				"type": "unsignedInt",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "The interval between successive calculations of <<param|.CallLog.<i>.Session.<i>.Source.VoiceQuality.VoIPQualityIndicator>> and <<param|.CallLog.<i>.Session.<i>.Destination.VoiceQuality.VoIPQualityIndicator>> values (in <<units>>). If <<param>> is not set then only one final quality value covering the complete session is reported in <<param|.CallLog.<i>.Session.<i>.Source.VoiceQuality.VoIPQualityIndicator>> and <<param|.CallLog.<i>.Session.<i>.Destination.VoiceQuality.VoIPQualityIndicator>>.",
				"datatype": "unsignedInt",
				"unit": "seconds"
			},
			"NumberOfWorstQIValues": {
				"type": "unsignedInt",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "The maximum number of worst quality indicators to store for each call. The CPE MUST permit <<param>> to be set to any value in the range from 0 to <<param|.Capabilities.QualityIndicator.MaxWorstQIValues>>.",
				"datatype": "unsignedInt"
			},
			"Device.Services.VoiceService.{i}.VoIPProfile.{i}.RTP.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "VoIP profile parameters related to the voice stream sent via RTP.",
				"access": false,
				"array": false,
				"LocalPortMin": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Base of port range to be used for incoming RTP streams for this profile.",
					"default": "1024",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1,
							"max": 65535
						}
					]
				},
				"LocalPortMax": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Top of port range to be used for incoming RTP streams for this profile.",
					"default": "1024",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1,
							"max": 65535
						}
					]
				},
				"Gmin": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Minimum number of consecutive received packets after the end of an RTP Loss Event. A Loss Event is defined as as a sequence of lost or discarded packets, possibly including islands of received packets. Each island consists of up to (<<param>> - 1) received packets (a sequence of <<param>> received packets terminates the Loss Event, and so is not an island).",
					"default": "16",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1,
							"max": 255
						}
					]
				},
				"DSCPMark": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Diffserv code point to be used for outgoing RTP and RTCP packets for this profile. It is RECOMMENDED that by default the DSCP for RTP traffic be set to the value to indicate EF traffic.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 63
						}
					]
				},
				"VLANIDMark": {
					"type": "int",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "VLAN ID (as defined in <<bibref|802.1Q-2005>>) to be used for outgoing RTP packets for this profile. A value of -1 indicates the default value is to be used. If either <<param>> or <<param|EthernetPriorityMark>> is greater than zero, then the outgoing frames MUST be tagged. Otherwise, the outgoing frames MAY be tagged or untagged.",
					"default": "-1",
					"datatype": "int",
					"range": [
						{
							"min": -1
						}
					]
				},
				"EthernetPriorityMark": {
					"type": "int",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Ethernet priority code (as defined in <<bibref|802.1D-2004>>) to be used for outgoing RTP packets for this profile. A value of -1 indicates the default value is to be used. If either <<param|VLANIDMark>> or <<param>> is greater than zero, then the outgoing frames MUST be tagged. Otherwise, the outgoing frames MAY be tagged or untagged.",
					"default": "-1",
					"datatype": "int",
					"range": [
						{
							"min": -1
						}
					]
				},
				"TelephoneEventPayloadType": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Payload type to be used for RTP telephone events. This parameter indicates the payload type to be used for DTMF events if transmission of DTMF information is in use according to <<bibref|RFC4733>>.",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 128
						}
					]
				},
				"JitterBufferType": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The indicates if the jitte buffer is static or dynamic.",
					"datatype": "string",
					"enumerations": [
						"Static",
						"Dynamic"
					]
				},
				"JitterBufferMaxSize": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Maximal (or static) jitter buffer size in <<units>>.",
					"datatype": "unsignedInt",
					"unit": "milliseconds"
				},
				"JitterBufferMinSize": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Minimal jitter buffer size in <<units>>, not used if static buffer is used.",
					"datatype": "unsignedInt",
					"unit": "milliseconds"
				},
				"JitterBufferActualSize": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Actual jitter buffer size in <<units>>, if static buffer ist used equal to <<param|JitterBufferMaxSize>>.",
					"datatype": "unsignedInt",
					"unit": "milliseconds"
				},
				"Device.Services.VoiceService.{i}.VoIPProfile.{i}.RTP.RTCP.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "VoIP profile parameters related to RTCP.",
					"access": false,
					"array": false,
					"Enable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enable or disable RTCP.",
						"datatype": "boolean"
					},
					"TxRepeatInterval": {
						"type": "unsignedInt",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Transmission repeat interval, in <<units>>.",
						"datatype": "unsignedInt",
						"range": [
							{
								"min": 1
							}
						],
						"unit": "milliseconds"
					},
					"LocalCName": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Local Cname (canonical name).",
						"datatype": "string",
						"range": [
							{
								"max": 64
							}
						]
					}
				},
				"Device.Services.VoiceService.{i}.VoIPProfile.{i}.RTP.SRTP.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "VoIP profile parameters for secure voice transmission via SRTP.",
					"access": false,
					"array": false,
					"Enable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enable or disable the use of SRTP. If RTCP is enabled, a <<true>> value of this parameter also implies the use of SRTCP.",
						"datatype": "boolean"
					},
					"KeyingMethods": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<list|available keying methods>> Enumeration of: Null, Static, SDP, IKE.",
						"list": {
							"datatype": "string",
							"enumerations": [
								"Null",
								"Static",
								"SDP",
								"IKE"
							]
						}
					},
					"EncryptionKeySizes": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "<<list|available encryption key sizes>>",
						"list": {
							"datatype": "unsignedInt"
						}
					}
				},
				"Device.Services.VoiceService.{i}.VoIPProfile.{i}.RTP.Redundancy.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "VoIP profile parameters for RTP payload redundancy as defined by <<bibref|RFC2198>>.",
					"access": false,
					"array": false,
					"Enable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enable or disable the use of RTP payload redundancy as defined by <<bibref|RFC2198>>.",
						"default": "false",
						"datatype": "boolean"
					},
					"PayloadType": {
						"type": "unsignedInt",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The Payload Type of RTP packet as defined in <<bibref|RFC2198>>. Values SHOULD be within the range of dynamic Payload Types (96-127).",
						"default": "0",
						"datatype": "unsignedInt",
						"range": [
							{
								"min": 0,
								"max": 127
							}
						]
					},
					"BlockPayloadType": {
						"type": "unsignedInt",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Block Payload Type of redundancy packet.",
						"default": "0",
						"datatype": "unsignedInt",
						"range": [
							{
								"min": 0,
								"max": 127
							}
						]
					},
					"FaxAndModemRedundancy": {
						"type": "int",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Specifies the redundancy number for fax and modem pass-through data transmissions. A non-negative value indicates that <<bibref|RFC2198>> is to be used for fax and modem pass-through data. The value indicates the number of redundant copies to be transmitted (the total number transmitted is one plus this value). A value of -1 indicates <<bibref|RFC2198>> is not to be used for fax and modem pass-through data. If <<param|ModemRedundancy>> is present, then <<param>> applies only to fax transmissions, but not to modem transmissions.",
						"default": "-1",
						"datatype": "int",
						"range": [
							{
								"min": -1,
								"max": 5
							}
						]
					},
					"ModemRedundancy": {
						"type": "int",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Specifies the redundancy number for modem pass-through data transmissions. A non-negative value indicates that <<bibref|RFC2198>> is to be used for modem pass-through data. The value indicates the number of redundant copies to be transmitted (the total number transmitted is one plus this value). A value of -1 indicates <<bibref|RFC2198>> is not to be used for modem pass-through data.",
						"default": "-1",
						"datatype": "int",
						"range": [
							{
								"min": -1,
								"max": 5
							}
						]
					},
					"DTMFRedundancy": {
						"type": "int",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Specifies the redundancy number for DTMF transmissions. A non-negative value indicates that <<bibref|RFC2198>> is to be used for DTMF. The value indicates the number of redundant copies to be transmitted (the total number transmitted is one plus this value). A value of -1 indicates <<bibref|RFC2198>> is not to be used for DTMF.",
						"default": "-1",
						"datatype": "int",
						"range": [
							{
								"min": -1,
								"max": 5
							}
						]
					},
					"VoiceRedundancy": {
						"type": "int",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Specifies the redundancy number for general voice transmissions. A non-negative value indicates that <<bibref|RFC2198>> is to be used for voice. The value indicates the number of redundant copies to be transmitted (the total number transmitted is one plus this value). A value of -1 indicates <<bibref|RFC2198>> is not to be used for voice.",
						"default": "-1",
						"datatype": "int",
						"range": [
							{
								"min": -1,
								"max": 5
							}
						]
					},
					"MaxSessionsUsingRedundancy": {
						"type": "unsignedInt",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The maximum number of sessions using <<bibref|RFC2198>> payload redundancy simultaneously in this profile. A value of zero indicates no explicit limit on the number of sessions using redundancy.",
						"default": "0",
						"datatype": "unsignedInt"
					}
				}
			},
			"Device.Services.VoiceService.{i}.VoIPProfile.{i}.FaxT38.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "T.38 Fax information for devices that support T.38 relay.",
				"access": false,
				"array": false,
				"MaxBitRate": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Maximum data rate in <<units>> for fax as defined in <<bibref|T.38>>.",
					"default": "14400",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 65535
						}
					],
					"unit": "bits per second"
				},
				"HighSpeedRedundancy": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Specifies the packet-level redundancy for high-speed data transmissions (i.e., T.4 image data).",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 3
						}
					]
				},
				"LowSpeedRedundancy": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Specifies the packet-level redundancy for low-speed data transmissions (i.e., T.30 handshaking information).",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 5
						}
					]
				},
				"TCFMethod": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The method with which data is handled over the network.",
					"datatype": "string",
					"enumerations": [
						"Local",
						"Network"
					]
				}
			}
		},
		"Device.Services.VoiceService.{i}.CodecProfile.{i}.": {
			"type": "object",
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "Table of codec profiles. This table MUST be populated with the set of supported codecs matching <<object|.Capabilities.Codec.>>. Additional entries can be added to use different configurations of codec or to use the same codec configuration in different CodecList parameters.",
			"uniqueKeys": [
				"Alias"
			],
			"access": true,
			"array": true,
			"Enable": {
				"type": "boolean",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Enable or disable the use of this combination of codec parameters.",
				"datatype": "boolean"
			},
			"Alias": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
				"datatype": "Alias",
				"range": [
					{
						"max": 64
					}
				]
			},
			"Codec": {
				"type": "string",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<reference>>",
				"datatype": "string",
				"range": [
					{
						"max": 256
					}
				]
			},
			"PacketizationPeriod": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<list>> Each item is a supported packetization period, in milliseconds, or continuous ranges of packetization periods as defined in <<param|.Capabilities.Codec.<i>.PacketizationPeriod>>. The ACS MAY restrict the set of packetization periods by modifying the value of this parameter to a more restricted set of values than is listed in <<param|.Capabilities.Codec.<i>.PacketizationPeriod>>. The CPE MUST ignore any values or portions of ranges outside of those specified in <<param|.Capabilities.Codec.<i>.PacketizationPeriod>>.",
				"list": {
					"datatype": "string",
					"range": [
						{
							"max": 64
						}
					]
				}
			},
			"SilenceSuppression": {
				"type": "boolean",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Indicates support for silence suppression for this codec. If silence suppression is supported, it can be disabled for this codec/bit-rate by setting this parameter to <<false>>.",
				"datatype": "boolean"
			}
		},
		"Device.Services.VoiceService.{i}.Tone.": {
			"type": "object",
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "This object defines the contents of the tones and announcements generated locally by the VoIP device.",
			"access": false,
			"array": false,
			"DescriptionNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"PatternNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"EventProfileNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"DefautEventProfile": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Reference to the default tone event profile.",
				"datatype": "string",
				"range": [
					{
						"max": 256
					}
				]
			},
			"Device.Services.VoiceService.{i}.Tone.Description.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Each entry in this table defines the contents of an individual tone. The defaults given for this object apply only to explicit creation of an instance of this object and not to automatic creation of instances of this object due to creation of a parent object.",
				"uniqueKeys": [
					"Alias"
				],
				"access": true,
				"array": true,
				"ToneEnable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enables or disables the tone entry. If a disabled tone entry is referenced, the result is that no tone is played.",
					"default": "false",
					"datatype": "boolean"
				},
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"ToneName": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Name of the tone.",
					"datatype": "string",
					"range": [
						{
							"max": 64
						}
					]
				},
				"TonePattern": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "This is the <<object|#.Pattern.<i>.>> object that begins this tone. If the tone is specified by a tone file instead of a tone pattern, this parameter MUST be set to <<empty>>. <<reference>>",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"ToneFile": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The file name of a tone file locally present on the CPE. An ACS MUST use the Download method with FileType=4 Tone File as defined in <<bibref|TR-069a4|Annex A.3.2.8>> to download a tone file. If the tone is specified by a tone pattern instead of a tone file, this parameter MUST be <<empty>>.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"ToneRepetitions": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The default number of times the data in <<param|ToneFile>> is repeated. If the value is 0 (zero) then <<param|ToneFile>> is played indefinitely.",
					"default": "0",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 255
						}
					]
				},
				"ToneText": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The text to be displayed by on the screen of the VoIP device when the tone is played and no specific error message has been provided. This parameter is applicable only for VoIP devices capable text display.",
					"datatype": "string",
					"range": [
						{
							"max": 64
						}
					]
				}
			},
			"Device.Services.VoiceService.{i}.Tone.Pattern.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Each entry in the table defines a single phase in an overall tone pattern. Each phase identifies the entry that corresponds to the next phase. Each entry in the table refers to the entry that corresponds to the next phase of the pattern. The table MAY be set up such that entries form loops, or MAY end after a finite sequence. The defaults given for this object apply only to explicit creation of an instance of this object and not to automatic creation of instances of this object due to creation of a parent object.",
				"uniqueKeys": [
					"Alias"
				],
				"access": true,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enables or disables this entry.",
					"default": "false",
					"datatype": "boolean"
				},
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"ToneOn": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Whether or not a tone is on during this phase of the pattern. If the value is <<false>>, the frequency and power parameters in this entry MUST be ignored.",
					"default": "false",
					"datatype": "boolean"
				},
				"Frequency1": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "First tone frequency in <<units>>. A value of zero indicates this tone component is not used.",
					"default": "0",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 4095
						}
					],
					"unit": "hertz"
				},
				"Power1": {
					"type": "int",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "First tone power level in units of 0.1 <<units>>.",
					"default": "0",
					"datatype": "int",
					"unit": "dBm0"
				},
				"Frequency2": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Second tone frequency in <<units>>. A value of zero indicates this tone component is not used.",
					"default": "0",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 4095
						}
					],
					"unit": "hertz"
				},
				"Power2": {
					"type": "int",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Second tone power level in units of 0.1 <<units>>.",
					"default": "0",
					"datatype": "int",
					"unit": "dBm0"
				},
				"Frequency3": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Third tone frequency in <<units>>. A value of zero indicates this tone component is not used.",
					"default": "0",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 4095
						}
					],
					"unit": "hertz"
				},
				"Power3": {
					"type": "int",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Third tone power level in units of 0.1 <<units>>.",
					"default": "0",
					"datatype": "int",
					"unit": "dBm0"
				},
				"Frequency4": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Fourth tone frequency in <<units>>. A value of zero indicates this tone component is not used.",
					"default": "0",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 4095
						}
					],
					"unit": "herts"
				},
				"Power4": {
					"type": "int",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Fourth tone power level in units of 0.1 <<units>>.",
					"default": "0",
					"datatype": "int",
					"unit": "dBm0"
				},
				"ModulationFrequency": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Modulation frequency in <<units>>. A value of zero indicates this tone component is not used.",
					"default": "0",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 0,
							"max": 4095
						}
					],
					"unit": "hertz"
				},
				"ModulationPower": {
					"type": "int",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Modulation power level in units of 0.1 <<units>>.",
					"default": "0",
					"datatype": "int",
					"unit": "dBm0"
				},
				"Duration": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The duration of this phase of the tone pattern, in <<units>>. A value of zero indicates an unlimited duration.",
					"default": "0",
					"datatype": "unsignedInt",
					"unit": "milliseconds"
				},
				"NextPattern": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The <<object>> for the next phase of the tone pattern, after the specified <<param|Duration>> of this phase has completed. <<reference>> <<empty>> indicates that the tone pattern is to terminate after the current phase is completed.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				}
			},
			"Device.Services.VoiceService.{i}.Tone.EventProfile.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Configuration profile for tone events.",
				"uniqueKeys": [
					"Alias"
				],
				"access": true,
				"array": true,
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"EventNumberOfEntries": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<numentries>>",
					"datatype": "unsignedInt"
				},
				"Device.Services.VoiceService.{i}.Tone.EventProfile.{i}.Event.{i}.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Table of events for which a tone is defined. The table is pre-populated with the list of events for which the CPE supports definition of tones.",
					"uniqueKeys": [
						"Alias"
					],
					"access": true,
					"array": true,
					"Alias": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
						"datatype": "Alias",
						"range": [
							{
								"max": 64
							}
						]
					},
					"Function": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The event for which the tone is to apply. Enumeration of: Busy, Confirmation, Dial, LineMessagesWaiting, OffHookWarning, RingBack, ReOrder, Stutterdial, CallWaiting1, CallWaiting2, CallWaiting3, CallWaiting4, AlertingSignal, SpecialDial, SpecialInfo, Release, Congestion, UserDefined1, UserDefined2, UserDefined3, UserDefined4. The parameter MAY instead indicate a vendor-specific event name, which MUST use the format defined in <<bibref|TR-106>>.",
						"datatype": "string",
						"enumerations": [
							"Busy",
							"Confirmation",
							"Dial",
							"LineMessagesWaiting",
							"OffHookWarning",
							"RingBack",
							"ReOrder",
							"Stutterdial",
							"CallWaiting1",
							"CallWaiting2",
							"CallWaiting3",
							"CallWaiting4",
							"AlertingSignal",
							"SpecialDial",
							"SpecialInfo",
							"Release",
							"Congestion",
							"UserDefined1",
							"UserDefined2",
							"UserDefined3",
							"UserDefined4"
						]
					},
					"Tone": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The description for the tone to be associated with the given event. <<reference>> <<empty>> indicates no tone is to be played for this event.",
						"datatype": "string",
						"range": [
							{
								"max": 256
							}
						]
					}
				}
			}
		},
		"Device.Services.VoiceService.{i}.Terminal.{i}.": {
			"type": "object",
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "This object models a telephony terminal, each object in the table represents an end-user interface. This object has to be used when the CPE is a voice endpoint itself.",
			"uniqueKeys": [
				"Alias"
			],
			"access": false,
			"array": true,
			"Enable": {
				"type": "boolean",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Enables or disables this terminal.",
				"datatype": "boolean"
			},
			"QuiescentMode": {
				"type": "boolean",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "If <<true>>, when <<param|Enable>> is set to <<false>> in-progress sessions remain intact, but no new sessions are allowed. When all sessions are terminated, the <<object>> is disabled.",
				"datatype": "boolean"
			},
			"Status": {
				"type": "string",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Indicates the status of this terminal.",
				"datatype": "string",
				"enumerations": [
					"Up",
					"Initializing",
					"Registering",
					"Unregistering",
					"Error",
					"Testing",
					"Quiescent",
					"Disabled"
				]
			},
			"Alias": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
				"datatype": "Alias",
				"range": [
					{
						"max": 64
					}
				]
			},
			"ToneEventProfile": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Reference to the <<object|.Tone.EventProfile>> to use with this terminal. If this parameter is <<empty>>, the value of <<param|.Tone.DefautEventProfile>> is used instead.",
				"datatype": "string",
				"range": [
					{
						"max": 256
					}
				]
			},
			"AudioNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"Device.Services.VoiceService.{i}.Terminal.{i}.Audio.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "This object models the audio outputs of a telephony terminal.(ex. Handset, handsfree, ...)",
				"uniqueKeys": [
					"Alias"
				],
				"access": false,
				"array": true,
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"Name": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "The internal name of this audio.",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				},
				"Device.Services.VoiceService.{i}.Terminal.{i}.Audio.{i}.VoiceProcessing.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Parameters related to voice processing capabilities.",
					"access": false,
					"array": false,
					"TransmitGain": {
						"type": "int",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Gain in <<units>> to apply to the transmitted voice signal prior to encoding. This gain is a modifier of the default transmit-gain, which is unspecified.",
						"datatype": "int",
						"unit": "0.1 dB"
					},
					"ReceiveGain": {
						"type": "int",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Gain in <<units>> to apply to the received voice signal after decoding. This gain is a modifier of the default receive-gain, which is unspecified.",
						"datatype": "int",
						"unit": "0.1 dB"
					},
					"EchoCancellationEnable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enable or disable echo cancellation for this line.",
						"datatype": "boolean"
					},
					"EchoCancellationInUse": {
						"type": "boolean",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Indication of whether or not echo cancellation is currently in use for this line.",
						"datatype": "boolean"
					},
					"EchoCancellationTail": {
						"type": "unsignedInt",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Tail length in <<units>> of the echo canceller associated with this line (whether or not it is currently in use).",
						"datatype": "unsignedInt",
						"unit": "milliseconds"
					}
				}
			},
			"Device.Services.VoiceService.{i}.Terminal.{i}.ButtonMap.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "This object is provided to permit the purpose of the CPE buttons and function keys to be defined via the ACS. Support of this object is appropriate only for a device that has programmable buttons in its user interface.",
				"access": false,
				"array": false,
				"ButtonNumberOfEntries": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<numentries>>",
					"datatype": "unsignedInt"
				},
				"Device.Services.VoiceService.{i}.Terminal.{i}.ButtonMap.Button.{i}.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Each entry in this table specifies the purpose of each programmable CPE button / function key and whether the user has permission to reprogram the button.",
					"uniqueKeys": [
						"Alias"
					],
					"access": false,
					"array": true,
					"Alias": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
						"datatype": "Alias",
						"range": [
							{
								"max": 64
							}
						]
					},
					"ButtonName": {
						"type": "string",
						"read": true,
						"write": false,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Name of the button.",
						"datatype": "string",
						"range": [
							{
								"max": 16
							}
						]
					},
					"FacilityAction": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The value MUST be a member of the list reported by <<param|.Capabilities.FacilityActions>>. This is an OPTIONAL parameter that SHOULD NOT be specified for buttons not related to a particular Facility Action (e.g., invocation of Call Return) implemented by the VoIP device. The parameter MAY instead indicate a vendor-specific Facility Action, which MUST use the format defined in <<bibref|TR-106>>. An empty or unrecognized string (i.e. a Facility Action not supported by the CPE) means that there is no Facility Action to be taken. If this parameter is specified (not <<empty>>) then <<param|QuickDialNumber>> SHOULD be <<empty>>.",
						"datatype": "string",
						"range": [
							{
								"max": 64
							}
						]
					},
					"FacilityActionArgument": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Optional argument associated with the specified <<param|FacilityAction>>. The interpretation of the argument is dependent on the specific FacilityAction.",
						"datatype": "string",
						"range": [
							{
								"max": 256
							}
						]
					},
					"QuickDialNumber": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "This is a string representing a quick dial destination number. Only the characters 0-9, * and # can be used. If this parameter is specified (not <<empty>>) then <<param|FacilityAction>> SHOULD be <<empty>>.",
						"datatype": "string",
						"range": [
							{
								"max": 40
							}
						]
					},
					"ButtonMessage": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "This string represents the message to be displayed on the screen when the button or function key is pressed.",
						"datatype": "string",
						"range": [
							{
								"max": 64
							}
						]
					},
					"UserAccess": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "This parameter indicates whether the user has permission to program the button or function key. If this parameter is set to <<true>> then <<param|FacilityAction>>, <<param|QuickDialNumber>> and <<param|ButtonMessage>> MUST all be <<empty>>.",
						"datatype": "boolean"
					}
				}
			},
			"Device.Services.VoiceService.{i}.Terminal.{i}.Ringer.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "This object defines the ring sequences that may be generated by the terminal.",
				"access": false,
				"array": false,
				"DescriptionNumberOfEntries": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<numentries>>",
					"datatype": "unsignedInt"
				},
				"PatternNumberOfEntries": {
					"type": "unsignedInt",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "<<numentries>>",
					"datatype": "unsignedInt"
				},
				"Device.Services.VoiceService.{i}.Terminal.{i}.Ringer.Description.{i}.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Each entry in this table defines the contents of an individual ring specification. The defaults given for this object apply only to explicit creation of an instance of this object and not to automatic creation of instances of this object due to creation of a parent object.",
					"uniqueKeys": [
						"Alias"
					],
					"access": true,
					"array": true,
					"RingEnable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enables or disables the ring description entry. If a disabled ring description entry is referenced, the result is that no ring is played.",
						"default": "false",
						"datatype": "boolean"
					},
					"Alias": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
						"datatype": "Alias",
						"range": [
							{
								"max": 64
							}
						]
					},
					"RingName": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Name of the ring.",
						"datatype": "string",
						"range": [
							{
								"max": 64
							}
						]
					},
					"RingPattern": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "This is the <<object|#.Pattern.<i>.>> object that begins this ring. If the ring is specified by a ring file instead of a ring pattern, this parameter MUST be set to <<empty>>. <<reference>>",
						"datatype": "string",
						"range": [
							{
								"max": 256
							}
						]
					},
					"RingFile": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The file name of a ring file file locally present on the CPE. An ACS MUST use the Download method with FileType=5 Ringer File as defined in <<bibref|TR-069a4|Annex A.3.2.8>> to download a ring file. If the ring is specified by a ring pattern instead of a ring file, this parameter MUST be <<empty>>.",
						"datatype": "string",
						"range": [
							{
								"max": 256
							}
						]
					}
				},
				"Device.Services.VoiceService.{i}.Terminal.{i}.Ringer.Pattern.{i}.": {
					"type": "object",
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Each entry in the table defines a single phase in an overall ring pattern. Each phase identifies the entry that corresponds to the next phase. Each entry in the table refers to the entry that corresponds to the next phase of the pattern. The table MAY be set up such that entries form loops, or MAY end after a finite sequence. The defaults given for this object apply only to explicit creation of an instance of this object and not to automatic creation of instances of this object due to creation of a parent object.",
					"uniqueKeys": [
						"Alias"
					],
					"access": true,
					"array": true,
					"Enable": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Enables or disables this entry.",
						"default": "false",
						"datatype": "boolean"
					},
					"Alias": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
						"datatype": "Alias",
						"range": [
							{
								"max": 64
							}
						]
					},
					"RingerOn": {
						"type": "boolean",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "Whether or not a ringer is on during this phase of the pattern.",
						"default": "false",
						"datatype": "boolean"
					},
					"Duration": {
						"type": "unsignedInt",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The duration of this phase of the ring pattern, in <<units>>. A value of zero indicates an unlimited duration.",
						"default": "0",
						"datatype": "unsignedInt",
						"unit": "milliseconds"
					},
					"NextPattern": {
						"type": "string",
						"read": true,
						"write": true,
						"protocols": [
							"cwmp",
							"usp"
						],
						"description": "The <<object>> for the next phase of the ring pattern, after the specified <<param|Duration>> of this phase has completed. <<reference>> <<empty>> indicates that the ring pattern is to terminate after the current phase is completed.",
						"datatype": "string",
						"range": [
							{
								"max": 256
							}
						]
					}
				}
			},
			"Device.Services.VoiceService.{i}.Terminal.{i}.DiagTests.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Terminal level tests.",
				"access": false,
				"array": false,
				"DiagnosticsState": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates the availability of diagnostics data. Enumeration of: Enumeration of: None, Requested, Canceled, Complete, Error. If the ACS sets the value of this parameter to <<enum|Requested>>, the CPE MUST initiate the corresponding diagnostic test. When writing, the only allowed values are <<enum|Requested>> and <<enum|Canceled>>. To ensure the use of the proper test parameters (the writable parameters in this object), the test parameters MUST be set, and any errors or inconsistencies in the test parameters MUST be detected, either prior to or at the same time as (in the same SetParameterValues) setting this parameter to <<enum|Requested>>. When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic test. When the test is completed, the value of this parameter MUST be either <<enum|Complete>> (if the test completed successfully), or one of the Error values listed above. If the value of this parameter is anything other than <<enum|Complete>>, the values of the results parameters for this test are indeterminate. When the diagnostic initiated by the ACS is completed (successfully or not), but not if it is canceled for any reason, the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the Event code 8 DIAGNOSTICS COMPLETE in the Inform message. After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object) MUST be retained by the CPE until either this diagnostic is run again, or the CPE reboots. After a reboot, if the CPE has not retained the result parameters from the most recent test, it MUST set the value of this parameter to <<enum|None>>. Modifying any of the writable parameters in this object except for this one MUST result in the value of this parameter being set to <<enum|None>>. While the test is in progress, modifying any of the writable parameters in this object except for this one MUST result in the test being terminated and the value of this parameter being set to <<enum|None>>. While the test is in progress, setting this parameter to <<enum|Requested>> (and possibly modifying other writable parameters in this object) MUST result in the test being terminated and then restarted using the current values of the test parameters. While the test is in progress, setting this parameter to <<enum|Canceled>> MUST result in the test being canceled and the value of this parameter being set to <<enum|None>>. If the CPE does not support the <<enum|Canceled>> value, it MUST return a SPV error with Invalid Parameter value (9007) to the ACS instead. | Indicates the availability of diagnostics data. Enumeration of: Enumeration of: None, Requested, Canceled, Complete, Error. If the ACS sets the value of this parameter to <<enum|Requested>>, the CPE MUST initiate the corresponding diagnostic test. When writing, the only allowed values are <<enum|Requested>> and <<enum|Canceled>>. To ensure the use of the proper test parameters (the writable parameters in this object), the test parameters MUST be set, and any errors or inconsistencies in the test parameters MUST be detected, either prior to or at the same time as (in the same SetParameterValues) setting this parameter to <<enum|Requested>>. When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic test. When the test is completed, the value of this parameter MUST be either <<enum|Complete>> (if the test completed successfully), or one of the Error values listed above. If the value of this parameter is anything other than <<enum|Complete>>, the values of the results parameters for this test are indeterminate. When the diagnostic initiated by the ACS is completed (successfully or not), but not if it is canceled for any reason, the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the Event code 8 DIAGNOSTICS COMPLETE in the Inform message. After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object) MUST be retained by the CPE until either this diagnostic is run again, or the CPE reboots. After a reboot, if the CPE has not retained the result parameters from the most recent test, it MUST set the value of this parameter to <<enum|None>>. Modifying any of the writable parameters in this object except for this one MUST result in the value of this parameter being set to <<enum|None>>. While the test is in progress, modifying any of the writable parameters in this object except for this one MUST result in the test being terminated and the value of this parameter being set to <<enum|None>>. While the test is in progress, setting this parameter to <<enum|Requested>> (and possibly modifying other writable parameters in this object) MUST result in the test being terminated and then restarted using the current values of the test parameters. While the test is in progress, setting this parameter to <<enum|Canceled>> MUST result in the test being canceled and the value of this parameter being set to <<enum|None>>. If the CPE does not support the <<enum|Canceled>> value, it MUST return a SPV error with Invalid Parameter value (9007) to the ACS instead.",
					"datatype": "DiagnosticsState",
					"enumerations": [
						"None",
						"Requested",
						"Canceled",
						"Complete",
						"Error"
					]
				},
				"TestSelector": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates which test to perform. The parameter MAY instead indicate a vendor-specific test, which MUST use the format defined in <<bibref|TR-106>>. For example: X_EXAMPLE-COM_MyTest",
					"datatype": "string",
					"enumerations": [
						"RingingTest"
					]
				},
				"PhoneRinging": {
					"type": "boolean",
					"read": true,
					"write": false,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Indicates whether or not the phone associated with this port is ringing. This parameter is applicable only if <<enum|RingingTest|TestSelector>> is supported.",
					"datatype": "boolean"
				}
			}
		},
		"Device.Services.VoiceService.{i}.ClockSynchronization.": {
			"type": "object",
			"protocols": [
				"cwmp",
				"usp"
			],
			"description": "Clock source configuration for Time-Division multiplexing subsystem.",
			"access": false,
			"array": false,
			"ClockSourceNumberOfEntries": {
				"type": "unsignedInt",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "<<numentries>>",
				"datatype": "unsignedInt"
			},
			"CurrentSource": {
				"type": "string",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "The currently selected external clock source. If the current clock source is not selected from the <<object|ClockSource>> table, e.g. an internal holdover clock, this parameter is set to <<empty>>. <<reference>>",
				"datatype": "string",
				"range": [
					{
						"max": 256
					}
				]
			},
			"Description": {
				"type": "string",
				"read": true,
				"write": false,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "Human readable description of the current clock synchronization status.",
				"datatype": "string",
				"range": [
					{
						"max": 64
					}
				]
			},
			"AutoRevert": {
				"type": "boolean",
				"read": true,
				"write": true,
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "If set to <<true>> the CPE automatically reverts back to a higher priority external clock source when it becomes available once again. If set to <<false>>, an automatic change between external clock sources only occurs when the current source becomes unavailable.",
				"datatype": "boolean"
			},
			"Device.Services.VoiceService.{i}.ClockSynchronization.ClockSource.{i}.": {
				"type": "object",
				"protocols": [
					"cwmp",
					"usp"
				],
				"description": "List of eligible external clock sources. The number of entries in this table depends on the maximum number of external clock sources supported by the CPE.",
				"uniqueKeys": [
					"Alias",
					"Order",
					"Interface"
				],
				"access": false,
				"array": true,
				"Enable": {
					"type": "boolean",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Enables or disables this entry.",
					"datatype": "boolean"
				},
				"Alias": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value. | A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in <<bibref|TR-069|3.6.1>> and described in <<bibref|TR-069|Appendix II>>, the following mandatory constraints MUST be enforced: * Its value MUST NOT be empty. * Its value MUST start with a letter. * If its value is not assigned by the ACS, it MUST start with a cpe- prefix. * The CPE MUST NOT change the parameter value.",
					"datatype": "Alias",
					"range": [
						{
							"max": 64
						}
					]
				},
				"Order": {
					"type": "unsignedInt",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "Position of the <<object>> entry in the order of precedence. A value of 1 indicates the first entry considered (highest precedence).",
					"datatype": "unsignedInt",
					"range": [
						{
							"min": 1,
							"max": 100
						}
					]
				},
				"Interface": {
					"type": "string",
					"read": true,
					"write": true,
					"protocols": [
						"cwmp",
						"usp"
					],
					"description": "A reference to a physical interface from which a clock signal can be derived. <<object|.ISDN.PRI.<i>.>> is eligible as a clock source when <<param|.ISDN.PRI.<i>.ClockMode>> is <<enum|Slave|.ISDN.PRI.<i>.ClockMode>>. <<object|.ISDN.BRI.<i>.>> is eligible as a clock source when <<param|.ISDN.BRI.<i>.ProtocolEmulation>> is <<enum|TE|.ISDN.BRI.<i>.ProtocolEmulation>>. <<reference>>",
					"datatype": "string",
					"range": [
						{
							"max": 256
						}
					]
				}
			}
		}
	}
}
